{"version":3,"sources":["actions/static.jsx","reducers/authreducer.jsx","reducers/business/getdatareducer.jsx","reducers/business/deletedatareducer.jsx","reducers/business/updatedatareducer.js","reducers/business/getcategoryreducer.jsx","reducers/business/deletecategoryreducer.jsx","reducers/business/updatecategoryreducer.jsx","reducers/business/createcategoryreducer.jsx","reducers/business/categorystatsreducer.jsx","reducers/users/getdatareducer.jsx","reducers/users/deletedatareducer.jsx","reducers/users/getuserdatareducer.jsx","reducers/users/updatedatareducer.jsx","reducers/users/daywisereducer.jsx","reducers/admin/getbusinessqueryreducer.jsx","reducers/admin/updatebusinessqueryreducer.jsx","reducers/getallsubadmins.jsx","reducers/updatesubadmins.jsx","reducers/admin/getuserqueryreducer.jsx","reducers/admin/updateuserqueryreducer.jsx","reducers/admin/getallrolesreducers.js","reducers/admin/createrolereducer.jsx","reducers/admin/updateaccessreducers.js","reducers/admin/getspecificrolereducer.jsx","reducers/index.jsx","store/index.js","helpers/axios.jsx","configURL.jsx","actions/auth.jsx","Components/Security/PrivateRoute.jsx","Components/Navigation/navigation.jsx","actions/businessaction.jsx","actions/useraction.jsx","HelpersComponents/CardTemplate.jsx","Components/Charts/businessstats.jsx","Components/Charts/usersstats.jsx","HelpersComponents/TitleTemplate.jsx","utils/images/customerqueue.jpg","utils/images/business.jpg","Components/DashBoard/Home.jsx","HelpersComponents/TableTemplate.jsx","Components/Business/businessTable.jsx","Components/Business/categorytable.jsx","Components/Charts/categorystats.jsx","Components/Business/index.jsx","Components/Users/userTable.jsx","Components/Users/daywiserecords/daywisetable.jsx","Components/Users/index.jsx","actions/adminaction.jsx","HelpersComponents/infocardTemplate.jsx","Components/adminpanel/businessqueryTable.jsx","HelpersComponents/customersinfocardTemplate.jsx","Components/adminpanel/userqueryTable.jsx","Components/adminpanel/index.js","Components/Authentication/signinpage.jsx","Components/Authentication/forgetpassword/fillemail.jsx","Components/Authentication/forgetpassword/changepassword.jsx","Components/accesspanel/addnewrole.jsx","Components/accesspanel/searchsubadmin.jsx","Components/accesspanel/business.jsx","Components/accesspanel/customers.jsx","Components/accesspanel/queries.jsx","Components/accesspanel/managesubadmins/editadmin.jsx","Components/accesspanel/managesubadmins/createnewsubadmin.jsx","Components/accesspanel/managesubadmins/admintables.jsx","Components/accesspanel/index.jsx","App.js","index.js"],"names":["authStatic","businessStatic","businessListStatic","deleteBusinessStatic","blockUnblockBusinessStatic","userStatic","userListStatic","deleteUserStatic","blockUnblockUserStatic","daywiseConstants","getAllCategoryStatic","deleteCategoryStatic","updateCategoryStatic","createCategoryStatic","categoryStatsStatic","businessQueriesStatic","updateBusinessQueriesStatic","usersQueriesStatic","updateUsersQueriesStatic","initialState","token","user","email","authenticate","authenticating","loading","error","message","data","rootReducer","combineReducers","auth","state","action","type","payload","msg","business","businessdelete","businessupdate","businesscategories","businessdeletecategories","businessupdatecategories","businesscreatecategories","businesscategoriesstats","users","usersData","userdelete","userupdate","daywiselist","businessqueries","businessupdatequeries","userqueries","userupdatequeries","getAllSubAdmins","updateSubAdmin","getAllroles","createnewrole","updateaccess","getspecificrole","store","createStore","composeWithDevTools","applyMiddleware","thunk","window","localStorage","getItem","axiosObject","axios","create","baseURL","headers","interceptors","request","use","req","getState","Authorization","response","res","status","clear","dispatch","Promise","reject","logout","a","post","get","getAllRoles","accessspecificrole","_id","role_name","console","log","undefined","PrivateRoute","Component","component","remaining","useDispatch","props","to","location","pathname","JSON","parse","isSuperAdmin","role","toString","then","e","drawerWidth","useStyles","makeStyles","theme","root","display","title","flexGrow","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","Header","useSelector","classes","useTheme","React","useState","open","setOpen","history","useHistory","className","CssBaseline","AppBar","position","clsx","Toolbar","Hidden","smDown","IconButton","color","aria-label","onClick","edge","lgUp","back","Typography","variant","noWrap","Button","Drawer","paper","direction","Divider","List","map","text","index","ListItem","button","name","push","ListItemIcon","ListItemText","primary","children","getBusinessData","check","getBusinessListData","getAllCategories","updatecategory","categoryname","getUserData","getUsersListData","daywiseData","date","Container","styled","div","bgPhoto","Content","ContentColumn","Title","span","TagContainer","tagBg","tagColor","TagText","IconContainer","Top","Card12","titleColor","tag","borderBottomColor","iconName","iconSize","iconColor","cta","direct","Grid","item","xs","lg","style","textDecoration","cursor","fontSize","marginTop","maxHeight","down","charts","FusionCharts","ReactFC","fcRoot","CandyTheme","Businessstats","labels","dataValues","Object","keys","sevendays","label","values","value","currstats","last24hrs","businessStats","dataSource","chart","caption","yaxisname","showhovereffect","divLineIsDashed","rotateLabels","labelDisplay","drawcrossline","sForceDecimals","plottooltext","categories","category","dataset","seriesname","height","dataFormat","GammelTheme","Usersstats","userStats","access","TitleTemplate","Paper","elevation","background","container","md","size","endIcon","textAlign","palette","secondary","gridCSS","margin","paddingLeft","select","Home","searchKey","setsearchKey","searchcustomerKey","setsearchcustomerKey","useEffect","marginBottom","justify","BusinessImage","UserImage","InputLabel","id","Select","labelId","onChange","target","MenuItem","table","fontWeight","backgroundColor","common","black","pagination","TableTemplate","records","headCells","filterFn","pages","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","descendingComparator","b","TblContainer","Table","TblHead","TableHead","TableRow","headCell","TableCell","sortDirection","disableSorting","TableSortLabel","active","cellId","TblPagination","TablePagination","rowsPerPageOptions","count","length","onChangePage","onChangeRowsPerPage","recordsAfterPagingAndSorting","array","comparator","stabilizedThis","el","sort","stableSort","fn","getComparator","slice","pageContent","overflow","searchInput","buttonSize","minWidth","BusinessTable","checkAccess","showDeleteAlert","isInactive","Swal","fire","icon","showCancelButton","confirmButtonText","cancelButtonText","removeBusinessAccount","dt","dismiss","DismissReason","cancel","showBlockUnblockAlert","isBlock","blockUnblock","searchBy","setSearchBy","items","setFilterFn","sm","TextField","InputProps","startAdornment","InputAdornment","Search","filter","x","businessname","toLowerCase","includes","contactpersonname","phone","city","TableBody","ButtonGroup","m","businessblock","businessactive","selectTableCell","tableCell","input","flex","modal","modelField","CustomTableCell","row","isEditMode","align","category_name","CategoryTable","rows","setRows","previous","setPrevious","newvalue","setnewValue","showAlert","setShowAlert","categoryedit","onToggleEditMode","newRows","onDelete","isActive","deletecategory","CustomDialogContent","dialog","useDialog","iserror","setError","erromsg","setErrormsg","setName","noValidate","autoComplete","FormControl","htmlFor","aria-describedby","FormHelperText","startIcon","close","Alert","severity","onClose","categoryadd","CustomDialog","showCloseIcon","TableContainer","categoryactive","paddingRight","CategoryStats","stats","datavalues","showpercentvalues","showvalues","showpercentintooltip","showpercent","showLegend","enablemultislicing","Business","categorystats","businessview","categoryview","categorychartview","UserTable","removeUserAccount","blockUnblockUser","firstname","lastname","customersblock","customersactive","DayWiseTable","Date","selectedDate","setSelectedDate","usersList","rs","utils","DateFnsUtils","format","moment","KeyboardButtonProps","fullname","userphone","Users","daywise","customers","customersview","customerstokenview","getBusinessQueries","getUsersQueries","GreenRadio","withStyles","green","checked","Radio","YelllowRadio","yellow","maxWidth","image","img","InfoCard","contactpersonanme","description","profilepic","updateStatus","selectedValue","setSelectedValue","handleChange","ButtonBase","Avatar","alt","src","gutterBottom","inputProps","GridTemplater","orange","getContrastText","deepOrange","BusinessQueryTable","updateBusinessQuery","val","Chip","businessqueriesedit","UserQueryTable","updateUserQuery","customersqueriesedit","AdminPanel","usersqueries","queries","businessqueriesview","customersqueriesview","Copyright","Link","href","getFullYear","flexDirection","avatar","main","form","submit","alert","SigninPage","setemail","password","setpassword","errormsg","square","onSubmit","preventDefault","admin","setItem","stringify","login","required","fullWidth","autoFocus","Box","mt","VerifyEmailPage","verifyEmail","ChangePasswordPage","userEmail","cpassword","setcpassword","changePassword","withoutLabel","textField","AddnewRole","updatesRoles","setRoleName","roleError","errors","setErrors","validator","isEmpty","createNewRole","SearchSubAdmin","updateAccess","setrole","orientation","flexItem","alignContent","accessList","FormControlLabel","control","Checkbox","scope","disabled","Customers","Queries","btn","formControl","UpdateSubAdmin","updateFun","allroles","setValues","nameError","emailError","phoneError","prop","Switch","isMobilePhone","isEmail","editSubAdmins","CreateSubAdmin","showPassword","passwordError","OutlinedInput","endAdornment","onMouseDown","isStrongPassword","StyledTableRow","hover","StyledTableCell","head","white","body","SubAdmins","updateData","s","charAt","toUpperCase","AccessPanel","setaccessList","setId","allsubadmins","editaccess","App","path","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57a1af77.chunk.js","sourcesContent":["//signin constants\r\nexport const authStatic = {\r\n  LOGIN_REQUEST: \"LOGIN_REQUEST\",\r\n  LOGIN_SUCCESS: \"LOGIN_SUCCESS\",\r\n  LOGIN_FAILURE: \"LOGIN_FAILURE\",\r\n\r\n  SIGNUP_REQUEST:\"SIGNUP_REQUEST\",\r\n  SIGNUP_SUCCESS:\"SIGNUP_SUCCESS\",\r\n  SIGNUP_FAILURE:\"SIGNUP_FAILURE\",\r\n\r\n  LOGOUT_REQUEST: \"LOGOUT_REQUEST\",\r\n  LOGOUT_SUCCESS: \"LOGOUT_SUCCESS\",\r\n  LOGOUT_FAILURE: \"LOGOUT_FAILURE\",\r\n\r\n  EMAIL_VERIFICATION_REQUEST: \"EMAIL_VERIFICATION_REQUEST\",\r\n  EMAIL_VERIFICATION_SUCCESS: \"EMAIL_VERIFICATION_SUCCESS\",\r\n  EMAIL_VERIFICATION_FAILURE: \"EMAIL_VERIFICATION_FAILURE\",\r\n\r\n  CHANGE_PASSWORD_REQUEST: \"CHANGE_PASSWORD_REQUEST\",\r\n  CHANGE_PASSWORD_SUCCESS: \"CHANGE_PASSWORD_SUCCESS\",\r\n  CHANGE_PASSWORD_FAILURE: \"CHANGE_PASSWORD_FAILURE\",\r\n\r\n  GET_ALL_ADMINS_REQUEST:\"GET_ALL_ADMINS_REQUEST\",\r\n  GET_ALL_ADMINS_SUCCESS:\"GET_ALL_ADMINS_SUCCESS\",\r\n  GET_ALL_ADMINS_FAILURE:\"GET_ALL_ADMINS_FAILURE\",\r\n\r\n  EDIT_ADMIN_REQUEST:\"EDIT_ADMIN_REQUEST\",\r\n  EDIT_ADMIN_SUCCESS:\"EDIT_ADMIN_SUCCESS\",\r\n  EDIT_ADMIN_FAILURE:\"EDIT_ADMIN_FAILURE\",\r\n\r\n  GET_ALL_ROLES_REQUEST:\"GET_ALL_ROLES_REQUEST\",\r\n  GET_ALL_ROLES_SUCCESS:\"GET_ALL_ROLES_SUCCESS\",\r\n  GET_ALL_ROLES_FAILURE:\"GET_ALL_ROLES_FAILURE\",\r\n\r\n  CREATE_NEW_ROLE_REQUEST:\"CREATE_NEW_ROLE_REQUEST\",\r\n  CREATE_NEW_ROLE_SUCCESS:\"CREATE_NEW_ROLE_SUCCESS\",\r\n  CREATE_NEW_ROLE_FAILURE:\"CREATE_NEW_ROLE_FAILURE\",\r\n\r\n  EDIT_ACCESS_REQUEST:\"EDIT_ACCESS_REQUEST\",\r\n  EDIT_ACCESS_SUCCESS:\"EDIT_ACCESS_SUCCESS\",\r\n  EDIT_ACCESS_FAILURE:\"EDIT_ACCESS_FAILURE\",\r\n\r\n  GET_SPECIFIC_ROLE_REQUEST:\"GET_SPECIFIC_ROLE_REQUEST\",\r\n  GET_SPECIFIC_ROLE_SUCCESS:\"GET_SPECIFIC_ROLE_SUCCESS\",\r\n  GET_SPECIFIC_ROLE_FAILURE:\"GET_SPECIFIC_ROLE_FAILURE\",\r\n};\r\n// <---------------------Business and Users Fetch constants-------------------------->\r\n\r\n// Business MONTH constants\r\nexport const businessStatic = {\r\n  BUSINESS_FETCH_MONTH_DATA_REQUEST: \"BUSINESS_FETCH_MONTH_DATA_REQUEST\",\r\n  BUSINESS_FETCH_MONTH_DATA_SUCCESS: \"BUSINESS_FETCH_MONTH_DATA_SUCCESS\",\r\n  BUSINESS_FETCH_MONTH_DATA_FAILURE: \"BUSINESS_FETCH_MONTH_DATA_FAILURE\",\r\n};\r\n\r\n// Business  constants\r\nexport const businessListStatic = {\r\n  BUSINESS_DATA_REQUEST: \"BUSINESS_DATA_REQUEST\",\r\n  BUSINESS_DATA_SUCCESS: \"BUSINESS_DATA_SUCCESS\",\r\n  BUSINESS_DATA_FAILURE: \"BUSINESS_DATA_FAILURE\",\r\n};\r\n\r\n//<---------------------Delete Business contants------------------>\r\nexport const deleteBusinessStatic = {\r\n  DELETE_BUSINESS_USERS_REQUEST: \"DELETE_BUSINESS_USERS_REQUEST\",\r\n  DELETE_BUSINESS_USERS_SUCCESS: \"DELETE_BUSINESS_USERS_SUCCESS\",\r\n  DELETE_BUSINESS_USERS_FAILURE: \"DELETE_BUSINESS_USERS_FAILURE\",\r\n};\r\n// <-------------------Block Unblock constants-------------------->\r\nexport const blockUnblockBusinessStatic = {\r\n  BLOCK_UNBLOCK_BUSINESS_USERS_REQUEST: \"BLOCK_UNBLOCK_BUSINESS_USERS_REQUEST\",\r\n  BLOCK_UNBLOCK_BUSINESS_USERS_SUCCESS: \"BLOCK_UNBLOCK_BUSINESS_USERS_SUCCESS\",\r\n  BLOCK_UNBLOCK_BUSINESS_USERS_FAILURE: \"BLOCK_UNBLOCK_BUSINESS_USERS_FAILURE\",\r\n};\r\n// <----------------USER--------------->\r\n// USER  constants\r\nexport const userStatic = {\r\n  USER_FETCH_MONTH_DATA_REQUEST: \"USER_FETCH_MONTH_DATA_REQUEST\",\r\n  USER_FETCH_MONTH_DATA_SUCCESS: \"USER_FETCH_MONTH_DATA_SUCCESS\",\r\n  USER_FETCH_MONTH_DATA_FAILURE: \"USER_FETCH_MONTH_DATA_FAILURE\",\r\n};\r\n// USER  constants\r\nexport const userListStatic = {\r\n  USER_DATA_REQUEST: \"USER_DATA_REQUEST\",\r\n  USER_DATA_SUCCESS: \"USER_DATA_SUCCESS\",\r\n  USER_DATA_FAILURE: \"USER_DATA_FAILURE\",\r\n};\r\n//<---------------------Delete Users contants------------------>\r\nexport const deleteUserStatic = {\r\n  DELETE_USERS_REQUEST: \"DELETE_USERS_REQUEST\",\r\n  DELETE_USERS_SUCCESS: \"DELETE_USERS_SUCCESS\",\r\n  DELETE_USERS_FAILURE: \"DELETE_USERS_FAILURE\",\r\n};\r\n\r\n// <-------------------Block Unblock  Userconstants-------------------->\r\nexport const blockUnblockUserStatic = {\r\n  BLOCK_UNBLOCK_USERS_REQUEST: \"BLOCK_UNBLOCK_USERS_REQUEST\",\r\n  BLOCK_UNBLOCK_USERS_SUCCESS: \"BLOCK_UNBLOCK_USERS_SUCCESS\",\r\n  BLOCK_UNBLOCK_USERS_FAILURE: \"BLOCK_UNBLOCK_USERS_FAILURE\",\r\n};\r\n\r\n// <------------------------Day wise constants----------------------->\r\nexport const daywiseConstants={\r\n  DAY_WISE_STATIC_REQUEST:\"DAY_WISE_STATIC_REQUEST\",\r\n  DAY_WISE_STATIC_SUCCESS:\"DAY_WISE_STATIC_SUCCESS\",\r\n  DAY_WISE_STATIC_FAILURE:\"DAY_WISE_STATIC_FAILURE\"\r\n}\r\n\r\n//<--------------------------------CATEGORIES--------------------------------------->\r\n\r\n//<----------------GET ALL CATEGORIES-------------------------------->\r\nexport const getAllCategoryStatic = {\r\n  GET_ALL_CATEGORIES_STATIC_REQUEST: \"GET_ALL_CATEGORIES_STATIC_REQUEST\",\r\n  GET_ALL_CATEGORIES_STATIC_SUCCESS: \"GET_ALL_CATEGORIES_STATIC_SUCCESS\",\r\n  GET_ALL_CATEGORIES_STATIC_FAILURE: \"GET_ALL_CATEGORIES_STATIC_FAILURE\",\r\n};\r\n// delete categories\r\nexport const deleteCategoryStatic = {\r\n  DELETE_CATEGORY_STATIC_REQUEST: \"DELETE_CATEGORY_STATIC_REQUEST\",\r\n  DELETE_CATEGORY_STATIC_SUCCESS: \"DELETE_CATEGORY_STATIC_SUCCESS\",\r\n  DELETE_CATEGORY_STATIC_FAILURE: \"DELETE_CATEGORY_STATIC_FAILURE\",\r\n};\r\n\r\n// Update categories\r\nexport const updateCategoryStatic = {\r\n  UPDATE_CATEGORY_STATIC_REQUEST: \"UPDATE_CATEGORY_STATIC_REQUEST\",\r\n  UPDATE_CATEGORY_STATIC_SUCCESS: \"UPDATE_CATEGORY_STATIC_SUCCESS\",\r\n  UPDATE_CATEGORY_STATIC_FAILURE: \"UPDATE_CATEGORY_STATIC_FAILURE\",\r\n};\r\n\r\n// Update categories\r\nexport const createCategoryStatic = {\r\n  CREATE_CATEGORY_STATIC_REQUEST: \"CREATE_CATEGORY_STATIC_REQUEST\",\r\n  CREATE_CATEGORY_STATIC_SUCCESS: \"CREATE_CATEGORY_STATIC_SUCCESS\",\r\n  CREATE_CATEGORY_STATIC_FAILURE: \"CREATE_CATEGORY_STATIC_FAILURE\",\r\n};\r\n\r\n// Update categories\r\nexport const categoryStatsStatic = {\r\n  CATEGORY_STATS_STATIC_REQUEST: \"CATEGORY_STATS_STATIC_REQUEST\",\r\n  CATEGORY_STATS_STATIC_SUCCESS: \"CATEGORY_STATS_STATIC_SUCCESS\",\r\n  CATEGORY_STATS_STATIC_FAILURE: \"CATEGORY_STATS_STATIC_FAILURE\",\r\n};\r\n\r\n\r\n\r\n// <-------------------------------------ADmin Specific------------------------------------>\r\n\r\n//get business queries\r\nexport const businessQueriesStatic={\r\n  BUSINESS_QUERIES_STATIC_REQUEST:\"BUSINESS_QUERIES_STATIC_REQUEST\",\r\n  BUSINESS_QUERIES_STATIC_SUCCESS:\"BUSINESS_QUERIES_STATIC_SUCCESS\",\r\n  BUSINESS_QUERIES_STATIC_FAILURE:\"BUSINESS_QUERIES_STATIC_FAILURE\"\r\n\r\n}\r\n//Update business queries\r\nexport const updateBusinessQueriesStatic={\r\n  UPDATE_BUSINESS_QUERIES_STATIC_REQUEST:\"UPDATE_BUSINESS_QUERIES_STATIC_REQUEST\",\r\n  UPDATE_BUSINESS_QUERIES_STATIC_SUCCESS:\"UPDATE_BUSINESS_QUERIES_STATIC_SUCCESS\",\r\n  UPDATE_BUSINESS_QUERIES_STATIC_FAILURE:\"UPDATE_BUSINESS_QUERIES_STATIC_FAILURE\"\r\n\r\n}\r\n\r\n//get Users queries\r\nexport const usersQueriesStatic={\r\n  USER_QUERIES_STATIC_REQUEST:\"USER_QUERIES_STATIC_REQUEST\",\r\n  USER_QUERIES_STATIC_SUCCESS:\"USER_QUERIES_STATIC_SUCCESS\",\r\n  USER_QUERIES_STATIC_FAILURE:\"USER_QUERIES_STATIC_FAILURE\"\r\n\r\n}\r\n//Update Users queries\r\nexport const updateUsersQueriesStatic={\r\n  UPDATE_USER_QUERIES_STATIC_REQUEST:\"UPDATE_USER_QUERIES_STATIC_REQUEST\",\r\n  UPDATE_USER_QUERIES_STATIC_SUCCESS:\"UPDATE_USER_QUERIES_STATIC_SUCCESS\",\r\n  UPDATE_USER_QUERIES_STATIC_FAILURE:\"UPDATE_USER_QUERIES_STATIC_FAILURE\"\r\n\r\n}","import { authStatic } from \"../actions/static\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  user: {\r\n    email: \"\",\r\n  },\r\n  authenticate: false,\r\n  authenticating: false,\r\n  loading: false,\r\n  error: \"\",\r\n  message: \"\",\r\n};\r\n//login and logout reducer\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authStatic.LOGIN_REQUEST:\r\n      state = {\r\n        ...state,\r\n        authenticating: true,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case authStatic.LOGIN_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        authenticate: true,\r\n        authenticating: false,\r\n        loading: false,\r\n      };\r\n      break;\r\n    case authStatic.LOGIN_FAILURE:\r\n      state = {\r\n        error: action.payload.error,\r\n        loading: false,\r\n        authenticating: false,\r\n      };\r\n      break;\r\n\r\n      // signup\r\n      case authStatic.SIGNUP_REQUEST:\r\n      state = {\r\n        ...state,\r\n        authenticating: true,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case authStatic.SIGNUP_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        message: action.payload.msg,\r\n        authenticate: true,\r\n        authenticating: false,\r\n        loading: false,\r\n      };\r\n      break;\r\n    case authStatic.SIGNUP_FAILURE:\r\n      state = {\r\n        error: action.payload.error,\r\n        loading: false,\r\n        authenticating: false,\r\n      };\r\n      break;\r\n\r\n    //logout reducers\r\n    case authStatic.LOGOUT_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case authStatic.LOGOUT_SUCCESS:\r\n      state = {\r\n        ...initialState,\r\n      };\r\n      break;\r\n    case authStatic.LOGOUT_FAILURE:\r\n      state = {\r\n        error: action.payload.error,\r\n        loading: false,\r\n      };\r\n      break;\r\n\r\n    // Email verification\r\n    case authStatic.EMAIL_VERIFICATION_REQUEST:\r\n      state = {\r\n        ...state,\r\n        message:\"\",\r\n        loading: true,\r\n      };\r\n      break;\r\n    case authStatic.EMAIL_VERIFICATION_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        user: action.payload.email,\r\n        loading: false,\r\n        message: action.payload.msg,\r\n      };\r\n      break;\r\n    case authStatic.EMAIL_VERIFICATION_FAILURE:\r\n      state = {\r\n        loading: false,\r\n        message: action.payload.msg,\r\n      };\r\n      break;\r\n\r\n    // CHANGE PASSWORD\r\n    case authStatic.CHANGE_PASSWORD_REQUEST:\r\n      state = {\r\n        ...state,\r\n        message:\"\",\r\n\r\n        loading: true,\r\n      };\r\n      break;\r\n    case authStatic.CHANGE_PASSWORD_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        user: action.payload.user,\r\n        loading: false,\r\n        message: action.payload.msg,\r\n      };\r\n      break;\r\n    case authStatic.CHANGE_PASSWORD_FAILURE:\r\n      state = {\r\n        loading: false,\r\n        message: action.payload.msg,\r\n      };\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","import { businessStatic, businessListStatic } from \"../../actions/static\";\r\n\r\nconst initialState = {\r\n  data: \"\",\r\n  loading: false,\r\n  error: \"\",\r\n  message: \"\",\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case businessStatic.BUSINESS_FETCH_MONTH_DATA_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case businessStatic.BUSINESS_FETCH_MONTH_DATA_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        data: action.payload.data,\r\n        message: action.payload.msg,\r\n      };\r\n      break;\r\n    case businessStatic.BUSINESS_FETCH_MONTH_DATA_FAILURE:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n        // message:action.payload.msg\r\n      };\r\n      break;\r\n    \r\n      // Business List\r\n    case businessListStatic.BUSINESS_DATA_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case businessListStatic.BUSINESS_DATA_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        data: action.payload.data,\r\n        message: action.payload.msg,\r\n      };\r\n      break;\r\n    case businessListStatic.BUSINESS_DATA_FAILURE:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n        // message:action.payload.msg\r\n      };\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","import { deleteBusinessStatic } from \"../../actions/static\";\r\n\r\nconst initialState = {\r\n  data: \"\",\r\n  loading: false,\r\n  error: \"\",\r\n  message: \"\",\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case deleteBusinessStatic.DELETE_BUSINESS_USERS_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case deleteBusinessStatic.DELETE_BUSINESS_USERS_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        data: action.payload.data,\r\n        message: action.payload.msg,\r\n      };\r\n      break;\r\n    case deleteBusinessStatic.DELETE_BUSINESS_USERS_FAILURE:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n        // message:action.payload.msg\r\n      };\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","import { blockUnblockBusinessStatic } from \"../../actions/static\";\r\n\r\nconst initialState = {\r\n  data: \"\",\r\n  loading: false,\r\n  error: \"\",\r\n  message: \"\",\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case blockUnblockBusinessStatic.BLOCK_UNBLOCK_BUSINESS_USERS_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case blockUnblockBusinessStatic.BLOCK_UNBLOCK_BUSINESS_USERS_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n\r\n        message: action.payload.msg,\r\n      };\r\n      break;\r\n    case blockUnblockBusinessStatic.BLOCK_UNBLOCK_BUSINESS_USERS_FAILURE:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n        // message:action.payload.msg\r\n      };\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","import {getAllCategoryStatic} from \"../../actions/static\"\r\n\r\nconst initialState={\r\n    data:[],\r\n    loading:false,\r\n    error:\"\",\r\n}\r\n\r\nexport default (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case getAllCategoryStatic.GET_ALL_CATEGORIES_STATIC_REQUEST:\r\n            state={\r\n                ...state,\r\n                loading:true\r\n            }\r\n            break;\r\n        case getAllCategoryStatic.GET_ALL_CATEGORIES_STATIC_SUCCESS:\r\n            state={\r\n                ...state,\r\n                loading:false,\r\n                data:action.payload.data,\r\n            };\r\n            break;\r\n        case getAllCategoryStatic.GET_ALL_CATEGORIES_STATIC_FAILURE:\r\n            state={\r\n                ...state,\r\n                loading:false,\r\n                error:action.payload.data\r\n            }\r\n        default:\r\n            break;\r\n    }\r\n    return state\r\n}","import { deleteCategoryStatic } from \"../../actions/static\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  loading: false,\r\n  error: \"\",\r\n  message: \"\",\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case deleteCategoryStatic.DELETE_CATEGORY_STATIC_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case deleteCategoryStatic.DELETE_CATEGORY_STATIC_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        data: action.payload.data,\r\n         };\r\n      break;\r\n    case deleteCategoryStatic.DELETE_CATEGORY_STATIC_FAILURE:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        message:action.payload.msg,\r\n        error: action.payload.error,\r\n        // message:action.payload.msg\r\n      };\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","import { updateCategoryStatic } from \"../../actions/static\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  loading: false,\r\n  error: \"\",\r\n  message: \"\",\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case updateCategoryStatic.UPDATE_CATEGORY_STATIC_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case updateCategoryStatic.UPDATE_CATEGORY_STATIC_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        data: action.payload.data,\r\n         };\r\n      break;\r\n    case updateCategoryStatic.UPDATE_CATEGORY_STATIC_FAILURE:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        message:action.payload.msg,\r\n        error: action.payload.error,\r\n        // message:action.payload.msg\r\n      };\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","import { createCategoryStatic } from \"../../actions/static\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  loading: false,\r\n  error: \"\",\r\n  message: \"\",\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case createCategoryStatic.CREATE_CATEGORY_STATIC_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case createCategoryStatic.CREATE_CATEGORY_STATIC_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        data: action.payload.data,\r\n         };\r\n      break;\r\n    case createCategoryStatic.CREATE_CATEGORY_STATIC_FAILURE:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        message:action.payload.msg,\r\n        error: action.payload.error,\r\n        // message:action.payload.msg\r\n      };\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","import { categoryStatsStatic } from \"../../actions/static\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  loading: false,\r\n  error: \"\",\r\n  message: \"\",\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case categoryStatsStatic.CATEGORY_STATS_STATIC_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case categoryStatsStatic.CATEGORY_STATS_STATIC_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        data: action.payload.data,\r\n         };\r\n      break;\r\n    case categoryStatsStatic.CATEGORY_STATS_STATIC_FAILURE:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        message:action.payload.msg,\r\n        error: action.payload.error,\r\n        // message:action.payload.msg\r\n      };\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","import {userStatic} from \"../../actions/static\"\r\n\r\nconst initialState={\r\n    data:\"\",\r\n    loading:false,\r\n    error:\"\",\r\n    message:\"\"\r\n}\r\nexport default(state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case userStatic.USER_FETCH_MONTH_DATA_REQUEST:\r\n            state={\r\n                ...state,\r\n                loading:true\r\n            }\r\n            break;\r\n            case userStatic.USER_FETCH_MONTH_DATA_SUCCESS:\r\n                state={\r\n                    ...state,\r\n                    loading:false,\r\n                    data:action.payload.data,\r\n                    message:action.payload.msg\r\n                }\r\n                break;\r\n                case userStatic.USER_FETCH_MONTH_DATA_FAILURE:\r\n                        state={\r\n                            ...state,\r\n                            loading:false,\r\n                           error:action.payload.error,\r\n                            // message:action.payload.msg\r\n                        }\r\n                        break; \r\n             \r\n        default:\r\n            break;\r\n    }\r\n    return state\r\n}","import { deleteUserStatic } from \"../../actions/static\";\r\n\r\nconst initialState = {\r\n  data: \"\",\r\n  loading: false,\r\n  error: \"\",\r\n  message: \"\",\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case deleteUserStatic.DELETE_USERS_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case deleteUserStatic.DELETE_USERS_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        data: action.payload.data,\r\n        message: action.payload.msg,\r\n      };\r\n      break;\r\n    case deleteUserStatic.DELETE_USERS_FAILURE:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n        // message:action.payload.msg\r\n      };\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","import {userListStatic} from \"../../actions/static\"\r\n\r\nconst initialState={\r\n    data:\"\",\r\n    loading:false,\r\n    error:\"\",\r\n    message:\"\"\r\n}\r\nexport default(state=initialState,action)=>{\r\n    switch (action.type) {\r\n              // USERS List\r\n    case userListStatic.USER_DATA_REQUEST:\r\n        state = {\r\n          ...state,\r\n          loading: true,\r\n        };\r\n        break;\r\n      case userListStatic.USER_DATA_SUCCESS:\r\n        state = {\r\n          ...state,\r\n          loading: false,\r\n          data: action.payload.data,\r\n          message: action.payload.msg,\r\n        };\r\n        break;\r\n      case userListStatic.USER_DATA_FAILURE:\r\n        state = {\r\n          ...state,\r\n          loading: false,\r\n          data:[],\r\n          error: action.payload.error,\r\n          // message:action.payload.msg\r\n        };\r\n        break;\r\n        \r\n        default:\r\n            break;\r\n    }\r\n    return state\r\n}","import { blockUnblockUserStatic } from \"../../actions/static\";\r\n\r\nconst initialState = {\r\n  data: \"\",\r\n  loading: false,\r\n  error: \"\",\r\n  message: \"\",\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case blockUnblockUserStatic.BLOCK_UNBLOCK_USERS_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case blockUnblockUserStatic.BLOCK_UNBLOCK_USERS_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n\r\n        message: action.payload.msg,\r\n      };\r\n      break;\r\n    case blockUnblockUserStatic.BLOCK_UNBLOCK_USERS_FAILURE:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n        // message:action.payload.msg\r\n      };\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","import {daywiseConstants} from \"../../actions/static\"\r\n\r\nconst initialState={\r\n    data:\"\",\r\n    loading:false,\r\n    error:\"\",\r\n    message:\"\"\r\n}\r\nexport default(state=initialState,action)=>{\r\n    switch (action.type) {\r\n              // USERS List\r\n    case daywiseConstants.DAY_WISE_STATIC_REQUEST:\r\n        state = {\r\n          ...state,\r\n          loading: true,\r\n        };\r\n        break;\r\n      case daywiseConstants.DAY_WISE_STATIC_SUCCESS:\r\n        state = {\r\n          ...state,\r\n          loading: false,\r\n          data: action.payload.data,\r\n          message: action.payload.msg,\r\n        };\r\n        break;\r\n      case daywiseConstants.DAY_WISE_STATIC_FAILURE:\r\n        state = {\r\n          ...state,\r\n          loading: false,\r\n          data:[],\r\n          error: action.payload.error,\r\n          // message:action.payload.msg\r\n        };\r\n        break;\r\n        \r\n        default:\r\n            break;\r\n    }\r\n    return state\r\n}","import {businessQueriesStatic} from \"../../actions/static\"\r\n\r\nconst initialState={\r\n    data:[],\r\n    loading:false,\r\n    error:\"\",\r\n}\r\n\r\nexport default (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case businessQueriesStatic.BUSINESS_QUERIES_STATIC_REQUEST:\r\n            state={\r\n                ...state,\r\n                loading:true\r\n            }\r\n            break;\r\n        case businessQueriesStatic.BUSINESS_QUERIES_STATIC_SUCCESS:\r\n            state={\r\n                ...state,\r\n                loading:false,\r\n                data:action.payload.data,\r\n            };\r\n            break;\r\n        case businessQueriesStatic.BUSINESS_QUERIES_STATIC_FAILURE:\r\n            state={\r\n                ...state,\r\n                loading:false,\r\n                data:[],\r\n                error:action.payload.data\r\n            }\r\n        default:\r\n            break;\r\n    }\r\n    return state\r\n}","import {updateBusinessQueriesStatic} from \"../../actions/static\"\r\n\r\nconst initialState={\r\n    data:{},\r\n    loading:false,\r\n    error:\"\",\r\n}\r\n\r\nexport default (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case updateBusinessQueriesStatic.UPDATE_BUSINESS_QUERIES_STATIC_REQUEST:\r\n            state={\r\n                ...state,\r\n                loading:true\r\n            }\r\n            break;\r\n        case updateBusinessQueriesStatic.UPDATE_BUSINESS_QUERIES_STATIC_SUCCESS:\r\n            state={\r\n                ...state,\r\n                loading:false,\r\n                data:action.payload.data,\r\n            };\r\n            break;\r\n        case updateBusinessQueriesStatic.UPDATE_BUSINESS_QUERIES_STATIC_FAILURE:\r\n            state={\r\n                ...state,\r\n                loading:false,\r\n                data:{},\r\n                error:action.payload.data\r\n            }\r\n        default:\r\n            break;\r\n    }\r\n    return state\r\n}","import {authStatic} from \"../actions/static\"\r\n\r\nconst initialState={\r\n    data:[],\r\n    loading:false,\r\n    error:\"\",\r\n}\r\n\r\nexport default (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case authStatic.GET_ALL_ADMINS_REQUEST:\r\n            state={\r\n                ...state,\r\n                loading:true\r\n            }\r\n            break;\r\n        case authStatic.GET_ALL_ADMINS_SUCCESS:\r\n            state={\r\n                ...state,\r\n                loading:false,\r\n                data:action.payload.data,\r\n            };\r\n            break;\r\n        case authStatic.GET_ALL_ADMINS_FAILURE:\r\n            state={\r\n                ...state,\r\n                loading:false,\r\n                error:action.payload.msg\r\n            }\r\n        default:\r\n            break;\r\n    }\r\n    return state\r\n}","import { authStatic } from \"../actions/static\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  loading: false,\r\n  error: \"\",\r\n  message: \"\",\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authStatic.EDIT_ADMIN_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case authStatic.EDIT_ADMIN_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        data: action.payload.data,\r\n         };\r\n      break;\r\n    case authStatic.EDIT_ADMIN_FAILURE:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        message:action.payload.msg,\r\n        error: action.payload.error,\r\n        // message:action.payload.msg\r\n      };\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","import {usersQueriesStatic} from \"../../actions/static\"\r\n\r\nconst initialState={\r\n    data:[],\r\n    loading:false,\r\n    error:\"\",\r\n}\r\n\r\nexport default (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case usersQueriesStatic.USER_QUERIES_STATIC_REQUEST:\r\n            state={\r\n                ...state,\r\n                loading:true\r\n            }\r\n            break;\r\n        case usersQueriesStatic.USER_QUERIES_STATIC_SUCCESS:\r\n            state={\r\n                ...state,\r\n                loading:false,\r\n                data:action.payload.data,\r\n            };\r\n            break;\r\n        case usersQueriesStatic.USER_QUERIES_STATIC_FAILURE:\r\n            state={\r\n                ...state,\r\n                loading:false,\r\n                data:[],\r\n                error:action.payload.data\r\n            }\r\n        default:\r\n            break;\r\n    }\r\n    return state\r\n}","import { updateUsersQueriesStatic } from \"../../actions/static\";\r\n\r\nconst initialState = {\r\n  data: {},\r\n  loading: false,\r\n  error: \"\",\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case updateUsersQueriesStatic.UPDATE_USER_QUERIES_STATIC_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case updateUsersQueriesStatic.UPDATE_USER_QUERIES_STATIC_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        data: action.payload.data,\r\n      };\r\n      break;\r\n    case updateUsersQueriesStatic.UPDATE_USER_QUERIES_STATIC_FAILURE:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        data: {},\r\n        error: action.payload.data,\r\n      };\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","import {authStatic} from \"../../actions/static\"\r\n\r\nconst initialState={\r\n    data:[],\r\n    loading:false,\r\n    error:\"\",\r\n}\r\n\r\nexport default (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case authStatic.GET_ALL_ROLES_REQUEST:\r\n            state={\r\n                ...state,\r\n                loading:true\r\n            }\r\n            break;\r\n        case authStatic.GET_ALL_ROLES_SUCCESS:\r\n            state={\r\n                ...state,\r\n                loading:false,\r\n                data:action.payload.data,\r\n            };\r\n            break;\r\n        case authStatic.GET_ALL_ROLES_FAILURE:\r\n            state={\r\n                ...state,\r\n                loading:false,\r\n                data:[],\r\n                error:action.payload.msg\r\n            }\r\n        default:\r\n            break;\r\n    }\r\n    return state\r\n}","import {authStatic} from \"../../actions/static\"\r\n\r\nconst initialState={\r\n    data:{},\r\n    loading:false,\r\n    error:\"\",\r\n}\r\n\r\nexport default (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case authStatic.CREATE_NEW_ROLE_REQUEST:\r\n            state={\r\n                ...state,\r\n                loading:true\r\n            }\r\n            break;\r\n        case authStatic.CREATE_NEW_ROLE_SUCCESS:\r\n            state={\r\n                ...state,\r\n                loading:false,\r\n                data:action.payload.data,\r\n            };\r\n            break;\r\n        case authStatic.CREATE_NEW_ROLE_FAILURE:\r\n            state={\r\n                ...state,\r\n                loading:false,\r\n                data:{},\r\n                error:action.payload.msg\r\n            }\r\n        default:\r\n            break;\r\n    }\r\n    return state\r\n}","import {authStatic} from \"../../actions/static\"\r\n\r\nconst initialState={\r\n    data:{},\r\n    loading:false,\r\n    error:\"\",\r\n}\r\n\r\nexport default (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case authStatic.EDIT_ACCESS_REQUEST:\r\n            state={\r\n                ...state,\r\n                loading:true\r\n            }\r\n            break;\r\n        case authStatic.EDIT_ACCESS_SUCCESS:\r\n            state={\r\n                ...state,\r\n                loading:false,\r\n                data:action.payload.data,\r\n            };\r\n            break;\r\n        case authStatic.EDIT_ACCESS_FAILURE:\r\n            state={\r\n                ...state,\r\n                loading:false,\r\n                data:{},\r\n                error:action.payload.msg\r\n            }\r\n        default:\r\n            break;\r\n    }\r\n    return state\r\n}","import {authStatic} from \"../../actions/static\"\r\n\r\nconst initialState={\r\n    data:[],\r\n    loading:false,\r\n    error:\"\",\r\n}\r\n\r\nexport default (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case authStatic.GET_SPECIFIC_ROLE_REQUEST:\r\n            state={\r\n                ...state,\r\n                loading:true\r\n            }\r\n            break;\r\n        case authStatic.GET_SPECIFIC_ROLE_SUCCESS:\r\n            state={\r\n                ...state,\r\n                loading:false,\r\n                data:action.payload.data,\r\n            };\r\n            break;\r\n        case authStatic.GET_SPECIFIC_ROLE_FAILURE:\r\n            state={\r\n                ...state,\r\n                loading:false,\r\n                data:[],\r\n                error:action.payload.msg\r\n            }\r\n        default:\r\n            break;\r\n    }\r\n    return state\r\n}","import authreducer from \"./authreducer\"\r\n//business\r\nimport businessreducer from \"./business/getdatareducer\"\r\nimport businessdeletereducer from \"./business/deletedatareducer\"\r\nimport businessupdatereducer from \"./business/updatedatareducer\"\r\n\r\n//categories\r\nimport getAllCategories from \"./business/getcategoryreducer\"\r\nimport deletecategoryreducer from \"./business/deletecategoryreducer\"\r\nimport updatecategoryreducer from \"./business/updatecategoryreducer\"\r\nimport createcategoryreducer from \"./business/createcategoryreducer\"\r\nimport categorystatsreducer from \"./business/categorystatsreducer\"\r\n\r\n// users\r\nimport usersreducer from \"./users/getdatareducer\"\r\nimport userdeletereducer from \"./users/deletedatareducer\"\r\nimport userlistdatareducer from \"./users/getuserdatareducer\"\r\nimport userupdatereducer from \"./users/updatedatareducer\"\r\nimport daywisereducer from \"./users/daywisereducer\"\r\nimport {combineReducers} from \"redux\"\r\n\r\n\r\n//admin specific\r\nimport businessqueries from \"./admin/getbusinessqueryreducer\"\r\nimport businessupdatequeries from \"./admin/updatebusinessqueryreducer\"\r\nimport getAllSubAdmins from \"./getallsubadmins\"\r\nimport updateSubAdmin from \"./updatesubadmins\"\r\nimport userqueries from \"./admin/getuserqueryreducer\"\r\nimport userupdatequeries from \"./admin/updateuserqueryreducer\"\r\nimport getAllRoles from \"./admin/getallrolesreducers\"\r\nimport createnewrole from \"./admin/createrolereducer\"\r\nimport updateaccess from \"./admin/updateaccessreducers\"\r\nimport getspecificrole from \"./admin/getspecificrolereducer\"\r\n\r\nconst rootReducer=combineReducers(\r\n    {\r\n        auth:authreducer,\r\n        business:businessreducer,\r\n        businessdelete:businessdeletereducer,\r\n        businessupdate:businessupdatereducer,\r\n\r\n        businesscategories:getAllCategories,\r\n        businessdeletecategories:deletecategoryreducer,\r\n        businessupdatecategories:updatecategoryreducer,\r\n        businesscreatecategories:createcategoryreducer,\r\n        businesscategoriesstats:categorystatsreducer,\r\n\r\n        users:usersreducer,\r\n        usersData:userlistdatareducer,\r\n        userdelete:userdeletereducer,\r\n        userupdate:userupdatereducer,\r\n        daywiselist:daywisereducer,\r\n\r\n        businessqueries:businessqueries,\r\n        businessupdatequeries:businessupdatequeries,\r\n\r\n        userqueries:userqueries,\r\n        userupdatequeries:userupdatequeries,\r\n\r\n        getAllSubAdmins:getAllSubAdmins,\r\n        updateSubAdmin:updateSubAdmin,\r\n\r\n        getAllroles:getAllRoles,\r\n        createnewrole:createnewrole,\r\n        updateaccess:updateaccess,\r\n        getspecificrole:getspecificrole\r\n\r\n\r\n    }\r\n)\r\nexport default rootReducer;","import {createStore,applyMiddleware}from \"redux\"\r\nimport rootReducer from \"../reducers\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\"\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store=createStore(rootReducer,composeWithDevTools(\r\n   applyMiddleware(thunk) \r\n));\r\n\r\nexport default store;","import axios from \"axios\";\r\nimport {api} from \"../configURL\";\r\nimport store from \"../store\"\r\nimport {authStatic} from \"../actions/static\"\r\n//getting token of logged in user\r\nconst token=window.localStorage.getItem('token');\r\nconst axiosObject=axios.create({\r\n    baseURL:api,\r\n    headers:{\r\n        'Authorization':token ? `Bearer ${token}`:''\r\n    }\r\n});\r\n\r\naxiosObject.interceptors.request.use((req)=>{\r\n    const {auth}=store.getState();\r\n    if(auth.token)\r\n    {\r\n        req.headers.Authorization=`Bearer ${auth.token}`;\r\n    }\r\n    return req;\r\n})\r\n\r\naxiosObject.interceptors.response.use((res)=>{\r\n    return res;\r\n},(error)=>{\r\n    const status=error.response ?error.response.status:500;\r\n    if(status &&status==500)\r\n    {\r\n        localStorage.clear();\r\n        store.dispatch({\r\n            type:authStatic.LOGOUT_SUCCESS\r\n        });\r\n    }\r\n    return Promise.reject(error);\r\n})\r\nexport default axiosObject","// export const api=\"http://localhost:3000/\"\r\nexport const api=\"https://bankapp-api-nodejs.herokuapp.com/\"\r\nconst baseUrl=\"http://localhost:3000\"","import { authStatic } from \"./static\";\r\nimport axios from \"../helpers/axios\";\r\nimport axiosObject from \"../helpers/axios\";\r\n\r\nexport const signup=(user)=>{\r\n  return async (dispatch)=>{\r\n    dispatch({type:authStatic.SIGNUP_REQUEST});\r\n    try {\r\n      const res=await axios.post(\"/adminpanel/adminsignup\",{\r\n        ...user\r\n      });\r\n      if(res.status==200)\r\n      {\r\n        dispatch({\r\n          type:authStatic.SIGNUP_SUCCESS,\r\n          payload:{\r\n            msg:res.data.message,\r\n          }\r\n        });\r\n      }\r\n      return res;\r\n    } catch (error) {\r\n      if(error.response)\r\n      {\r\n        dispatch({\r\n          type:authStatic.SIGNUP_FAILURE,\r\n          payload:{\r\n            msg:error.response.msg\r\n          }\r\n        });\r\n        return error.response;\r\n   \r\n      }\r\n       dispatch({\r\n        type: authStatic.SIGNUP_FAILURE,\r\n        payload: {\r\n          msg: \"Something Went Wrong\",\r\n        },\r\n      });\r\n      return \"network\"\r\n    \r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const login = (user) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: authStatic.LOGIN_REQUEST });\r\n    try {\r\n      const res = await axios.post(\"/adminpanel/adminsignin\", {\r\n        ...user,\r\n      });\r\n\r\n      //checking status\r\n      if (res.status == 200) {\r\n        console.log(res.status);\r\n        const { token, admin } = res.data;\r\n        const user=admin;\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"token\", JSON.stringify(user));\r\n        dispatch({\r\n          type: authStatic.LOGIN_SUCCESS,\r\n          payload: {\r\n            token,\r\n            user,\r\n          },\r\n        });\r\n      } else {\r\n        if (res.status == 400 || res.status == 403) {\r\n          dispatch({\r\n            type: authStatic.LOGIN_FAILURE,\r\n            payload: {\r\n              error: res.data,\r\n            },\r\n          });\r\n        }\r\n      }\r\n      return res;\r\n    } catch (error) {\r\n      if (error.response) {\r\n        dispatch({\r\n          type: authStatic.LOGIN_FAILURE,\r\n          payload: {\r\n            error: \"Something Went Wrong\",\r\n          },\r\n        });\r\n        return error.response;\r\n      }\r\n      dispatch({\r\n        type: authStatic.LOGIN_FAILURE,\r\n        payload: {\r\n          error: \"Something Went Wrong\",\r\n        },\r\n      });\r\n      return \"network\";\r\n    }\r\n\r\n    dispatch({\r\n      type: authStatic.LOGIN_REQUEST,\r\n      payload: {\r\n        ...user,\r\n      },\r\n    });\r\n  };\r\n};\r\n\r\n//prevent user from accessing login page if user already signin\r\n\r\nexport const isUserLogin = () => {\r\n  return async (dispatch) => {\r\n    const token = window.localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      console.log(user);\r\n      dispatch({\r\n        type: authStatic.LOGIN_SUCCESS,\r\n        payload: {\r\n          token,\r\n          user,\r\n        },\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: authStatic.LOGIN_FAILURE,\r\n        payload: { error: \"Failed to procced\" },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n//for logout\r\nexport const logout = () => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: authStatic.LOGOUT_REQUEST,\r\n    });\r\n    //calling signout api\r\n    const res = await axios.post(\"/adminpanel/adminsignout\");\r\n    if (res.status == 201 || res.status == 200) {\r\n      localStorage.clear();\r\n      dispatch({\r\n        type: authStatic.LOGOUT_SUCCESS,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: authStatic.LOGOUT_FAILURE,\r\n        payload: { error: res.data.error },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n// <-------------verify email----------------->\r\nexport const verifyEmail = (email) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: authStatic.EMAIL_VERIFICATION_REQUEST,\r\n    });\r\n    try {\r\n      const res = await axios.post(\"/adminpanel/verifyemail\", {\r\n        ...email,\r\n      });\r\n\r\n      if (res.status == 200) {\r\n        dispatch({\r\n          type: authStatic.EMAIL_VERIFICATION_SUCCESS,\r\n          payload: {\r\n            email,\r\n            msg: res.data.msg,\r\n          },\r\n        });\r\n      } else {\r\n        if (res.status == 400 || res.status == 403) {\r\n          dispatch({\r\n            type: authStatic.EMAIL_VERIFICATION_FAILURE,\r\n            payload: {\r\n              msg: res.data.msg,\r\n            },\r\n          });\r\n        }\r\n      }\r\n      return res;\r\n    } catch (e) {\r\n      if (e.response) {\r\n        dispatch({\r\n          type: authStatic.EMAIL_VERIFICATION_FAILURE,\r\n          payload: {\r\n            msg: \"Something Went Wrong\",\r\n          },\r\n        });\r\n        return e.response;\r\n      }\r\n      dispatch({\r\n        type: authStatic.EMAIL_VERIFICATION_FAILURE,\r\n        payload: {\r\n          msg: \"Something Went Wrong\",\r\n        },\r\n      });\r\n      return \"network\";\r\n    }\r\n    dispatch({\r\n      type: authStatic.EMAIL_VERIFICATION_REQUEST,\r\n      payload: {\r\n        ...email,\r\n      },\r\n    });\r\n  };\r\n};\r\n\r\n// <-------------verify email End----------------->\r\n\r\n// <-------------Change Password----------------->\r\nexport const changePassword = (data) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: authStatic.CHANGE_PASSWORD_REQUEST,\r\n    });\r\n    try {\r\n      const res = await axios.post(\"/adminpanel/updatepassword\", {\r\n        ...data,\r\n      });\r\n\r\n      if (res.status == 200) {\r\n        dispatch({\r\n          type: authStatic.CHANGE_PASSWORD_SUCCESS,\r\n          payload: {\r\n            data,\r\n            msg: res.data.msg,\r\n          },\r\n        });\r\n      } else {\r\n        if (res.status == 400 || res.status == 403) {\r\n          dispatch({\r\n            type: authStatic.CHANGE_PASSWORD_FAILURE,\r\n            payload: {\r\n              msg: res.data.msg,\r\n            },\r\n          });\r\n        }\r\n      }\r\n      return res\r\n    } catch (e) {\r\n      if (e.response) {\r\n        dispatch({\r\n          type: authStatic.CHANGE_PASSWORD_FAILURE,\r\n          payload: {\r\n            msg: \"Something Went Wrong\",\r\n          },\r\n        });\r\n        return e.response;\r\n      }\r\n    \r\n    dispatch({\r\n      type: authStatic.CHANGE_PASSWORD_FAILURE,\r\n      payload: {\r\n        msg: \"Something Went Wrong\",\r\n      },\r\n    });\r\n    return \"network\"\r\n  }\r\n    \r\n  };\r\n};\r\n\r\n// <-------------Change PassworEnd----------------->\r\n\r\n// <--------------------GET ALL SUBADMINS--------------->\r\nexport const getAllSubAdmins=()=>{\r\n  return async (dispatch)=>{\r\n    dispatch({\r\n      type:authStatic.GET_ALL_ADMINS_REQUEST,\r\n    });\r\n    try {\r\n      const res=await axios.get(\"/adminpanel/getalladmins\");\r\n      if(res.status==200)\r\n      {\r\n        dispatch({\r\n          type:authStatic.GET_ALL_ADMINS_SUCCESS,\r\n          payload:{\r\n            data:res.data,\r\n          }\r\n        })\r\n      }\r\n      else{\r\n        dispatch({\r\n          type:authStatic.GET_ALL_ADMINS_FAILURE,\r\n          payload:{\r\n            msg:res.data.msg,\r\n          }\r\n        })\r\n      }\r\n      return res;\r\n    } catch (error) {\r\n      if(error.response)\r\n      {\r\n        dispatch(\r\n          {\r\n            type:authStatic.GET_ALL_ADMINS_FAILURE,\r\n            payload:{\r\n              msg:error.response,\r\n            }\r\n          }\r\n        );\r\n        return error.response;\r\n      }\r\n      dispatch(\r\n        {\r\n          type:authStatic.GET_ALL_ADMINS_FAILURE,\r\n          payload:{\r\n            msg:\"Something Went Wrong\",\r\n          }\r\n        }\r\n      );\r\n      return \"network\";\r\n\r\n    }\r\n  }\r\n}\r\n\r\n// <--------------------GET ALL SUBADMINS END--------------->\r\n\r\n// <-------------------Edit SubAdmins----------------------->\r\n// <--------------------GET ALL SUBADMINS--------------->\r\nexport const editSubAdmins=(data)=>{\r\n  console.log(data)\r\n  return async (dispatch)=>{\r\n    dispatch({\r\n      type:authStatic.EDIT_ADMIN_REQUEST,\r\n    });\r\n    try {\r\n      const res=await axios.post(\"/adminpanel/updateadminprofile\",{\r\n        ...data\r\n      });\r\n      if(res.status==200)\r\n      {\r\n        dispatch({\r\n          type:authStatic.EDIT_ADMIN_SUCCESS,\r\n          payload:{\r\n            data:res.data,\r\n          }\r\n        })\r\n      }\r\n      else{\r\n        dispatch({\r\n          type:authStatic.EDIT_ADMIN_FAILURE,\r\n          payload:{\r\n            msg:res.data.msg,\r\n          }\r\n        })\r\n      }\r\n      return res;\r\n    } catch (error) {\r\n      if(error.response)\r\n      {\r\n        dispatch(\r\n          {\r\n            type:authStatic.GET_ALL_ADMINS_FAILURE,\r\n            payload:{\r\n              msg:error.response,\r\n            }\r\n          }\r\n        );\r\n        return error.response;\r\n      }\r\n      dispatch(\r\n        {\r\n          type:authStatic.GET_ALL_ADMINS_FAILURE,\r\n          payload:{\r\n            msg:\"Something Went Wrong\",\r\n          }\r\n        }\r\n      );\r\n      return \"network\";\r\n\r\n    }\r\n  }\r\n}\r\n\r\n// <-------------------Edit SubAdmins END----------------------->\r\n\r\n// <------------------Get All roles-------------------------->\r\nexport const getAllRoles=()=>{\r\n\r\n  return async (dispatch)=>{\r\n    dispatch({\r\n      type:authStatic.GET_ALL_ROLES_REQUEST,\r\n    });\r\n    try {\r\n      const res=await axios.get(\"/adminpanel/getallroles\");\r\n      if(res.status==200)\r\n      {\r\n        dispatch({\r\n          type:authStatic.GET_ALL_ROLES_SUCCESS,\r\n          payload:{\r\n            data:res.data,\r\n          }\r\n        })\r\n      }\r\n      else{\r\n        dispatch({\r\n          type:authStatic.GET_ALL_ROLES_FAILURE,\r\n          payload:{\r\n            msg:res.data.msg,\r\n          }\r\n        })\r\n      }\r\n      return res;\r\n    } catch (error) {\r\n      if(error.response)\r\n      {\r\n        dispatch(\r\n          {\r\n            type:authStatic.GET_ALL_ROLES_FAILURE,\r\n            payload:{\r\n              msg:error.response,\r\n            }\r\n          }\r\n        );\r\n        return error.response;\r\n      }\r\n      dispatch(\r\n        {\r\n          type:authStatic.GET_ALL_ROLES_FAILURE,\r\n          payload:{\r\n            msg:\"Something Went Wrong\",\r\n          }\r\n        }\r\n      );\r\n      return \"network\";\r\n\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// <------------------Get All roles END-------------------------->\r\n\r\n// <------------------Create New Role---------------------------->\r\n\r\nexport const createNewRole=(role_name)=>{\r\n  console.log(role_name)\r\n  return async (dispatch)=>{\r\n    dispatch({\r\n      type:authStatic.CREATE_NEW_ROLE_REQUEST,\r\n    });\r\n    try {\r\n      const res=await axios.post(\"/adminpanel/createnewrole\",{\r\n        role_name:role_name\r\n      });\r\n      if(res.status==200)\r\n      {\r\n        dispatch({\r\n          type:authStatic.CREATE_NEW_ROLE_SUCCESS,\r\n          payload:{\r\n            data:res.data,\r\n          }\r\n        })\r\n      }\r\n      else{\r\n        dispatch({\r\n          type:authStatic.CREATE_NEW_ROLE_FAILURE,\r\n          payload:{\r\n            msg:res.data.msg,\r\n          }\r\n        })\r\n      }\r\n      return res;\r\n    } catch (error) {\r\n      if(error.response)\r\n      {\r\n        dispatch(\r\n          {\r\n            type:authStatic.CREATE_NEW_ROLE_FAILURE,\r\n            payload:{\r\n              msg:error.response,\r\n            }\r\n          }\r\n        );\r\n        return error.response;\r\n      }\r\n      dispatch(\r\n        {\r\n          type:authStatic.CREATE_NEW_ROLE_FAILURE,\r\n          payload:{\r\n            msg:\"Something Went Wrong\",\r\n          }\r\n        }\r\n      );\r\n      return \"network\";\r\n\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n// <------------------Create New Role END---------------------------->\r\n\r\n// <------------------Edit admins access--------------------------->\r\nexport const editaccess=(_id,access)=>{\r\n  console.log(_id)\r\n  return async (dispatch)=>{\r\n    dispatch({\r\n      type:authStatic.EDIT_ACCESS_REQUEST,\r\n    });\r\n    try {\r\n      const res=await axios.post(\"/adminpanel/updateaccessfields\",{\r\n        _id:_id,\r\n        access:access\r\n      });\r\n      if(res.status==200)\r\n      {\r\n        dispatch({\r\n          type:authStatic.EDIT_ACCESS_SUCCESS,\r\n          payload:{\r\n            data:res.data,\r\n          }\r\n        })\r\n      }\r\n      else{\r\n        dispatch({\r\n          type:authStatic.EDIT_ACCESS_FAILURE,\r\n          payload:{\r\n            msg:res.data.msg,\r\n          }\r\n        })\r\n      }\r\n      return res;\r\n    } catch (error) {\r\n      if(error.response)\r\n      {\r\n        dispatch(\r\n          {\r\n            type:authStatic.EDIT_ACCESS_FAILURE,\r\n            payload:{\r\n              msg:error.response,\r\n            }\r\n          }\r\n        );\r\n        return error.response;\r\n      }\r\n      dispatch(\r\n        {\r\n          type:authStatic.EDIT_ACCESS_FAILURE,\r\n          payload:{\r\n            msg:\"Something Went Wrong\",\r\n          }\r\n        }\r\n      );\r\n      return \"network\";\r\n\r\n    }\r\n  }\r\n}\r\n// <------------------Edit admins access END--------------------------->\r\n\r\n\r\n// <------------------access Specific role --------------------------->\r\nexport const accessspecificrole=(_id,role_name)=>{\r\n  console.log(_id)\r\n  return async (dispatch)=>{\r\n    dispatch({\r\n      type:authStatic.GET_SPECIFIC_ROLE_REQUEST,\r\n    });\r\n    try {\r\n      const res=await axios.post(\"/adminpanel/getspecificrole\",{\r\n        _id:_id!==undefined?_id:\"\",\r\n        role_name:role_name!==undefined?role_name:\"\"\r\n      \r\n      });\r\n      if(res.status==200)\r\n      {\r\n        dispatch({\r\n          type:authStatic.GET_SPECIFIC_ROLE_SUCCESS,\r\n          payload:{\r\n            data:res.data,\r\n          }\r\n        })\r\n      }\r\n      else{\r\n        dispatch({\r\n          type:authStatic.GET_SPECIFIC_ROLE_FAILURE,\r\n          payload:{\r\n            msg:res.data.msg,\r\n          }\r\n        })\r\n      }\r\n      return res;\r\n    } catch (error) {\r\n      if(error.response)\r\n      {\r\n        dispatch(\r\n          {\r\n            type:authStatic.GET_SPECIFIC_ROLE_FAILURE,\r\n            payload:{\r\n              msg:error.response,\r\n            }\r\n          }\r\n        );\r\n        return error.response;\r\n      }\r\n      dispatch(\r\n        {\r\n          type:authStatic.GET_SPECIFIC_ROLE_FAILURE,\r\n          payload:{\r\n            msg:\"Something Went Wrong\",\r\n          }\r\n        }\r\n      );\r\n      return \"network\";\r\n\r\n    }\r\n  }\r\n}\r\n// <------------------ access Specific role END--------------------------->","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { accessspecificrole } from \"../../actions/auth\";\r\nimport { logout } from \"../../actions/auth\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...remaining }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Route\r\n      {...remaining}\r\n      component={(props) => {\r\n        // Direct user to home page if user login else redirect to sign in\r\n        const token = window.localStorage.getItem(\"token\");\r\n        // return <Component {...props} />;\r\n        \r\n        if (token!==undefined ||token!=null) {\r\n         console.log(props.location)\r\n          if (props.location.pathname == \"/\") {\r\n            try {\r\n              dispatch(\r\n                accessspecificrole(null, JSON.parse(token).role.toString())\r\n              ).then((res) => {\r\n                if (res.status == 200) {\r\n                  return <Component {...props} />;\r\n                } else {\r\n                  return <Redirect to={\"/signin\"} />;\r\n                }\r\n              });\r\n              return <Component {...props} />;\r\n            } catch (e) {\r\n              dispatch(logout());\r\n\r\n              return <Redirect to={\"/signin\"} />;\r\n            }\r\n          } else if (props.location.pathname == \"/accesspanel\") {\r\n            if (JSON.parse(token).isSuperAdmin) {\r\n              return <Component {...props} />;\r\n            }\r\n            else{\r\n              return <Redirect to={\"/\"}/>;\r\n            }\r\n          } else {\r\n            return <Component {...props} />;\r\n          }\r\n        } else {\r\n          return <Redirect to={\"/signin\"} />;\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n//icons\r\nimport HomeRoundedIcon from \"@material-ui/icons/HomeRounded\";\r\nimport BusinessCenterIcon from \"@material-ui/icons/BusinessCenter\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport LiveHelpIcon from '@material-ui/icons/LiveHelp';\r\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\r\n//for navigation\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logout } from \"../../actions/auth\";\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport withWidth from '@material-ui/core/withWidth';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n    },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function Header(props) {\r\n  const auth = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  //navigation function\r\n  let history = useHistory();\r\n\r\n  const changePage = (name) => {\r\n    if (name == \"Home\") {\r\n      history.push(\"/\");\r\n    } else if (name == \"Business\") {\r\n      history.push(\"/business\");\r\n    } else if (name == \"Users\") {\r\n      history.push(\"/users\");\r\n    } else if ((name == \"Queries\")) {\r\n      history.push(\"/queries\");\r\n    }\r\n    else if((name ==\"Access\")){\r\n      history.push(\"/accesspanel\")\r\n    }\r\n    \r\n  };\r\n  //signout function\r\n  const signoutFun = () => {\r\n    dispatch(logout());\r\n    \r\n  };\r\n  const manageBack=()=>{\r\n    console.log(history);\r\n    window.history.back()\r\n  }\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <Hidden smDown>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          </Hidden>\r\n          <Hidden lgUp>\r\n         {\r\n          history.location.pathname!==\"/\"?(<IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n             onClick={manageBack}\r\n            edge=\"start\"\r\n          >\r\n            <ArrowBackIosIcon />\r\n          </IconButton>):null\r\n         }\r\n          </Hidden>\r\n          <Typography variant=\"h6\" noWrap className={classes.title}>\r\n            Admin Panel\r\n          </Typography>\r\n\r\n          <Button color=\"inherit\" onClick={signoutFun}>\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Hidden smDown>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {[\"Home\", \"Business\", \"Users\", \"Queries\",\"Access\"].map((text, index) => (\r\n            <ListItem\r\n              button\r\n              key={text}\r\n              onClick={() => {\r\n                changePage(text);\r\n              }}\r\n            >\r\n              <ListItemIcon>\r\n                {index === 0 ? (\r\n                  <HomeRoundedIcon />\r\n                ) : index === 1 ? (\r\n                  <BusinessCenterIcon />\r\n                ) : index === 2 ? (\r\n                  <PeopleIcon />\r\n                ) : index === 3 ? (\r\n                  <LiveHelpIcon />\r\n                ):index===4?(\r\n                  <SupervisedUserCircleIcon/>\r\n                ) : (\r\n                  <PeopleIcon />\r\n                )}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        {/* <List>\r\n          {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List> */}\r\n      </Drawer>\r\n      </Hidden>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {props.children}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  businessStatic,\r\n  businessListStatic,\r\n  deleteBusinessStatic,\r\n  blockUnblockBusinessStatic,\r\n  getAllCategoryStatic,\r\n  deleteCategoryStatic,\r\n  updateCategoryStatic,\r\n  createCategoryStatic,\r\n  categoryStatsStatic,\r\n} from \"./static\";\r\nimport axios from \"../helpers/axios\";\r\nimport axiosObject from \"../helpers/axios\";\r\n\r\nexport const getBusinessData = (check) => {\r\n  var res;\r\n  return async (dispatch) => {\r\n   \r\n    dispatch({ type: businessStatic.BUSINESS_FETCH_MONTH_DATA_REQUEST });\r\n    try {\r\n      console.log(check);\r\n      if(check==\"year\")\r\n      {\r\n         res = await axios.get(\"/adminpanel/getbusinessstatsmonthwise\");\r\n          \r\n      }\r\n      else if(check==\"month\")\r\n      {\r\n         res = await axios.get(\"/adminpanel/getbusinessstatscurrentmonth\");\r\n      }\r\n      else if(check==\"sevendays\")\r\n      {\r\n        res = await axios.get(\"/adminpanel/getbusinessstatsdaywise\");\r\n      }\r\n      else if(check==\"lst24hrs\")\r\n      {\r\n       res = await axios.get(\"/adminpanel/getbusinessstatslst24hrs\");\r\n      }\r\n      console.log(res);\r\n      if (res.status == 200) {\r\n        const data = res.data;\r\n        dispatch({\r\n          type: businessStatic.BUSINESS_FETCH_MONTH_DATA_SUCCESS,\r\n          payload: {\r\n            data,\r\n            msg: res.data.msg,\r\n          },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: businessStatic.BUSINESS_FETCH_MONTH_DATA_FAILURE,\r\n          payload: {\r\n            error: res.data.error,\r\n          },\r\n        });\r\n      }\r\n    } catch (e) {\r\n      if (e.response) {\r\n        dispatch({\r\n          type: businessStatic.BUSINESS_FETCH_MONTH_DATA_FAILURE,\r\n          payload: {\r\n            error: e.response.data.message,\r\n          },\r\n        });\r\n      }\r\n      dispatch({\r\n        type: businessStatic.BUSINESS_FETCH_MONTH_DATA_FAILURE,\r\n        payload: {\r\n          error: \"Something Went Wrong!!\",\r\n        },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getBusinessListData = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: businessListStatic.BUSINESS_DATA_REQUEST });\r\n    try {\r\n      const res = await axios.get(\"/adminpanel/getbusinesslist\");\r\n      if (res.status == 200) {\r\n        const data = res.data;\r\n        dispatch({\r\n          type: businessListStatic.BUSINESS_DATA_SUCCESS,\r\n          payload: {\r\n            data,\r\n            msg: res.data.msg,\r\n          },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: businessListStatic.BUSINESS_DATA_FAILURE,\r\n          payload: {\r\n            error: res.data.error,\r\n          },\r\n        });\r\n      }\r\n    } catch (e) {\r\n      if(e.response)\r\n      {\r\n        dispatch({\r\n          type: businessListStatic.BUSINESS_DATA_FAILURE,\r\n          payload: {\r\n            error: e.response.data.message,\r\n          },\r\n        });\r\n      }\r\n      else{\r\n        dispatch({\r\n          type: businessListStatic.BUSINESS_DATA_FAILURE,\r\n          payload: {\r\n            error:\"Something Went Wrong\",\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\n// delete business\r\n\r\nexport const removeBusinessAccount = (_id,isInactive) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: deleteBusinessStatic.DELETE_BUSINESS_USERS_REQUEST });\r\n    try {\r\n      const res = await axios.post(\"/adminpanel/activeinactivebusiness\", {\r\n        _id: _id,\r\n        isInactive:isInactive\r\n        \r\n      });\r\n      if (res.status == 200) {\r\n        dispatch({\r\n          type: deleteBusinessStatic.DELETE_BUSINESS_USERS_SUCCESS,\r\n          payload: {\r\n            msg: res.data,\r\n          },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: deleteBusinessStatic.DELETE_BUSINESS_USERS_FAILURE,\r\n          payload: {\r\n            msg: res.data,\r\n          },\r\n        });\r\n      }\r\n      return res;\r\n    } catch (error) {\r\n      dispatch({\r\n        type: deleteBusinessStatic.DELETE_BUSINESS_USERS_FAILURE,\r\n        payload: {\r\n          msg: error.response.data,\r\n        },\r\n      });\r\n    }\r\n    dispatch({\r\n      type: deleteBusinessStatic.DELETE_BUSINESS_USERS_REQUEST,\r\n      payload: {\r\n        ..._id,\r\n      },\r\n    });\r\n  };\r\n};\r\n\r\n// block unblock businessaccount\r\n\r\nexport const blockUnblock = (_id, isBlock) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: blockUnblockBusinessStatic.BLOCK_UNBLOCK_BUSINESS_USERS_REQUEST,\r\n    });\r\n    try {\r\n      const res = await axios.post(\"/adminpanel/blockunblockbusiness\", {\r\n        _id,\r\n        isBlock,\r\n      });\r\n      if (res.status == 200) {\r\n        dispatch({\r\n          type: blockUnblockBusinessStatic.BLOCK_UNBLOCK_BUSINESS_USERS_SUCCESS,\r\n          payload: {\r\n            msg: res.data,\r\n          },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: blockUnblockBusinessStatic.BLOCK_UNBLOCK_BUSINESS_USERS_FAILURE,\r\n          payload: {\r\n            msg: res.data,\r\n          },\r\n        });\r\n      }\r\n      return res;\r\n    } catch (error) {\r\n      if(error.response)\r\n      {\r\n        dispatch({\r\n          type: blockUnblockBusinessStatic.BLOCK_UNBLOCK_BUSINESS_USERS_FAILURE,\r\n          payload: {\r\n            msg: error.response.data,\r\n          },\r\n        });\r\n      }\r\n      else{\r\n        dispatch({\r\n          type: blockUnblockBusinessStatic.BLOCK_UNBLOCK_BUSINESS_USERS_FAILURE,\r\n          payload: {\r\n            msg: \"Something Went Wrong\",\r\n          },\r\n        });\r\n      }\r\n    }\r\n    //  dispatch({\r\n    //    type:blockUnblockBusinessStatic.DELETE_BUSINESS_USERS_FAILURE,\r\n    //    payload:{\r\n    //     _id,\r\n    //     isBlock\r\n    //    }\r\n    //  })\r\n  };\r\n};\r\n\r\n// <-----------------------Category-------------------------------->\r\n//<-------------------Get All Category------------------------->\r\n\r\nexport const getAllCategories = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: getAllCategoryStatic.GET_ALL_CATEGORIES_STATIC_REQUEST });\r\n    try {\r\n      const res = await axios.get(\"/adminpanel/getbusinesscategory\");\r\n      if (res.status == 200) {\r\n        dispatch({\r\n          type: getAllCategoryStatic.GET_ALL_CATEGORIES_STATIC_SUCCESS,\r\n          payload: {\r\n            data: res.data,\r\n          },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: getAllCategoryStatic.GET_ALL_CATEGORIES_STATIC_FAILURE,\r\n          payload: {\r\n            data: res.data,\r\n          },\r\n        });\r\n      }\r\n      return res;\r\n    } catch (error) {\r\n      if(error.response)\r\n      {\r\n        dispatch({\r\n          type: getAllCategoryStatic.GET_ALL_CATEGORIES_STATIC_FAILURE,\r\n          payload: {\r\n            data: error.response.data,\r\n          },\r\n        });\r\n      }\r\n      else{\r\n        dispatch({\r\n          type: getAllCategoryStatic.GET_ALL_CATEGORIES_STATIC_FAILURE,\r\n          payload: {\r\n            data: \"Something Went Wrong\",\r\n          },\r\n        });\r\n      }\r\n    }\r\n    dispatch({\r\n      type: getAllCategoryStatic.GET_ALL_CATEGORIES_STATIC_REQUEST,\r\n    });\r\n  };\r\n};\r\n\r\n//<-------------------Get All Category END------------------------->\r\n\r\n//<-------------------Delete Category ------------------------->\r\n\r\nexport const deletecategory = (_id,isActive) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: deleteCategoryStatic.DELETE_CATEGORY_STATIC_REQUEST });\r\n    try {\r\n      const res = await axios.post(\"/adminpanel/activeinactivebusinesscategory\", {\r\n        _id,\r\n        isActive\r\n      });\r\n      if (res.status == 200) {\r\n        dispatch({\r\n          type: deleteCategoryStatic.DELETE_CATEGORY_STATIC_SUCCESS,\r\n          payload: {\r\n            data: res.data,\r\n          },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: deleteCategoryStatic.DELETE_CATEGORY_STATIC_FAILURE,\r\n          payload: {\r\n            msg: res.data,\r\n          },\r\n        });\r\n      }\r\n      return res;\r\n    } catch (error) {\r\n     if(error.response)\r\n     {\r\n      dispatch({\r\n        type: deleteCategoryStatic.DELETE_CATEGORY_STATIC_FAILURE,\r\n        payload: {\r\n          msg: error.response.data,\r\n        },\r\n      });\r\n     }\r\n     else{\r\n      dispatch({\r\n        type: deleteCategoryStatic.DELETE_CATEGORY_STATIC_FAILURE,\r\n        payload: {\r\n          msg: \"Something Went Wrong\",\r\n        },\r\n      });\r\n     }\r\n    }\r\n    dispatch({\r\n      type: deleteCategoryStatic.DELETE_CATEGORY_STATIC_REQUEST,\r\n    });\r\n  };\r\n};\r\n\r\n//<-------------------Delete Category END------------------------->\r\n\r\n//<-------------------UPdate Category ------------------------->\r\n\r\nexport const updatecategory = (_id, categoryname) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: updateCategoryStatic.UPDATE_CATEGORY_STATIC_REQUEST });\r\n    try {\r\n      const res = await axios.post(\"/adminpanel/updatebusinesscategory\", {\r\n        _id,\r\n        categoryname,\r\n      });\r\n      if (res.status == 200) {\r\n        dispatch({\r\n          type: updateCategoryStatic.UPDATE_CATEGORY_STATIC_SUCCESS,\r\n          payload: {\r\n            data: res.data,\r\n          },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: updateCategoryStatic.UPDATE_CATEGORY_STATIC_FAILURE,\r\n          payload: {\r\n            msg: res,\r\n          },\r\n        });\r\n      }\r\n      return res;\r\n    } catch (error) {\r\n     if(error.response)\r\n     {\r\n      dispatch({\r\n        type: updateCategoryStatic.UPDATE_CATEGORY_STATIC_FAILURE,\r\n        payload: {\r\n          msg: error.response,\r\n        },\r\n      });\r\n     }\r\n     else{\r\n      dispatch({\r\n        type: updateCategoryStatic.UPDATE_CATEGORY_STATIC_FAILURE,\r\n        payload: {\r\n          msg: \"Something Went Wrong\",\r\n        },\r\n      });\r\n     }\r\n    }\r\n    dispatch({\r\n      type: updateCategoryStatic.UPDATE_CATEGORY_STATIC_REQUEST,\r\n    });\r\n  };\r\n};\r\n\r\n//<-------------------UPdate Category END------------------------->\r\n//<-------------------Create Category ------------------------>\r\nexport const createcategory = (category_name) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: createCategoryStatic.CREATE_CATEGORY_STATIC_REQUEST });\r\n    try {\r\n      const res = await axios.post(\"/adminpanel/createbusinesscategory\", {\r\n        category_name,\r\n      });\r\n      if (res.status == 200) {\r\n        dispatch({\r\n          type: createCategoryStatic.CREATE_CATEGORY_STATIC_SUCCESS,\r\n          payload: {\r\n            data: res.data,\r\n          },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: createCategoryStatic.CREATE_CATEGORY_STATIC_FAILURE,\r\n          payload: {\r\n            msg: res.data.msg,\r\n          },\r\n        });\r\n      }\r\n      return res;\r\n    } catch (error) {\r\n      if(error.response)\r\n      {\r\n        dispatch({\r\n          type: createCategoryStatic.CREATE_CATEGORY_STATIC_FAILURE,\r\n          payload: {\r\n            msg: error.response.data.msg,\r\n          },\r\n        });\r\n        return error.response;\r\n    \r\n      }\r\n      else{\r\n        dispatch({\r\n          type: createCategoryStatic.CREATE_CATEGORY_STATIC_FAILURE,\r\n          payload: {\r\n            msg: \"Something Went Wrong\",\r\n          },\r\n        });\r\n        return \"network\";\r\n    \r\n      }\r\n\r\n      }\r\n    dispatch({\r\n      type: createCategoryStatic.CREATE_CATEGORY_STATIC_REQUEST,\r\n    });\r\n  };\r\n};\r\n\r\n//<-------------------Create Category END------------------------->\r\n\r\n//<-------------------Create Category ------------------------>\r\nexport const getcategoryStats = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: categoryStatsStatic.CATEGORY_STATS_STATIC_REQUEST });\r\n    try {\r\n      const res = await axios.get(\"/adminpanel/getbusinesscategoriesstats\");\r\n      if (res.status == 200) {\r\n        dispatch({\r\n          type: categoryStatsStatic.CATEGORY_STATS_STATIC_SUCCESS,\r\n          payload: {\r\n            data: res.data,\r\n          },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: categoryStatsStatic.CATEGORY_STATS_STATIC_FAILURE,\r\n          payload: {\r\n            msg: res.data.msg,\r\n          },\r\n        });\r\n      }\r\n      return res;\r\n    } catch (error) {\r\n      if(error.response)\r\n      {\r\n        dispatch({\r\n          type: categoryStatsStatic.CATEGORY_STATS_STATIC_FAILURE,\r\n          payload: {\r\n            msg: error.response.data.msg,\r\n          },\r\n        });\r\n  \r\n        return error.response;\r\n      }\r\n      else{\r\n        dispatch({\r\n          type: categoryStatsStatic.CATEGORY_STATS_STATIC_FAILURE,\r\n          payload: {\r\n            msg: \"Something Went Wrong\",\r\n          },\r\n        });\r\n  \r\n        return \"network\";\r\n      }\r\n    }\r\n    // dispatch({\r\n    //   type: categoryStatsStatic.CATEGORY_STATS_STATIC_REQUEST,\r\n    // });\r\n  };\r\n};\r\n\r\n// <-----------------------Category END-------------------------------->\r\n","import {\r\n  userStatic,\r\n  userListStatic,\r\n  deleteUserStatic,\r\n  blockUnblockUserStatic,\r\n  daywiseConstants,\r\n} from \"./static\";\r\nimport axios from \"../helpers/axios\";\r\nimport axiosObject from \"../helpers/axios\";\r\n\r\nexport const getUserData = (check) => {\r\n  var res;\r\n\r\n  return async (dispatch) => {\r\n    dispatch({ type: userStatic.USER_FETCH_MONTH_DATA_REQUEST });\r\n    try {\r\n      if (check == \"year\") {\r\n        res = await axios.get(\"/adminpanel/getusersstatsmonthwise\");\r\n      } else if (check == \"month\") {\r\n        res = await axios.get(\"/adminpanel/getusersstatscurrentmonth\");\r\n      } else if (check == \"sevendays\") {\r\n        res = await axios.get(\"/adminpanel/getusersstatsdaywise\");\r\n      } else if (check == \"lst24hrs\") {\r\n        res = await axios.get(\"/adminpanel/getusersstatslst24hrs\");\r\n      }\r\n      if (res.status == 200) {\r\n        const data = res.data;\r\n        dispatch({\r\n          type: userStatic.USER_FETCH_MONTH_DATA_SUCCESS,\r\n          payload: {\r\n            data,\r\n            msg: res.data.msg,\r\n          },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: userStatic.USER_FETCH_MONTH_DATA_FAILURE,\r\n          payload: {\r\n            error: res.data.error,\r\n          },\r\n        });\r\n      }\r\n    } catch (e) {\r\n      if (e.response) {\r\n        dispatch({\r\n          type: userStatic.USER_FETCH_MONTH_DATA_FAILURE,\r\n          payload: {\r\n            error: e.response.data.message,\r\n          },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: userStatic.USER_FETCH_MONTH_DATA_FAILURE,\r\n          payload: {\r\n            error: \"Something Went Wrong\",\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n//get users\r\nexport const getUsersListData = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: userListStatic.USER_DATA_REQUEST });\r\n    try {\r\n      const res = await axios.get(\"/adminpanel/getuserslist\");\r\n      if (res.status == 200) {\r\n        const data = res.data;\r\n        dispatch({\r\n          type: userListStatic.USER_DATA_SUCCESS,\r\n          payload: {\r\n            data,\r\n            msg: res.data.msg,\r\n          },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: userListStatic.USER_DATA_FAILURE,\r\n          payload: {\r\n            error: res.data.error,\r\n          },\r\n        });\r\n      }\r\n    } catch (e) {\r\n      if (e.response) {\r\n        dispatch({\r\n          type: userListStatic.USER_DATA_FAILURE,\r\n          payload: {\r\n            error: e.response.data.message,\r\n          },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: userListStatic.USER_DATA_FAILURE,\r\n          payload: {\r\n            error: \"Something Went Wrong\",\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\n//delete user\r\nexport const removeUserAccount = (_id, isInactive) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: deleteUserStatic.DELETE_USERS_REQUEST });\r\n    try {\r\n      const res = await axios.post(\"/adminpanel/activeinactivecustomers\", {\r\n        _id: _id,\r\n        isInactive: isInactive,\r\n      });\r\n      if (res.status == 200) {\r\n        dispatch({\r\n          type: deleteUserStatic.DELETE_USERS_SUCCESS,\r\n          payload: {\r\n            msg: res.data,\r\n          },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: deleteUserStatic.DELETE_USERS_FAILURE,\r\n          payload: {\r\n            msg: res.data,\r\n          },\r\n        });\r\n      }\r\n      return res;\r\n    } catch (error) {\r\n      if (error.response) {\r\n        dispatch({\r\n          type: deleteUserStatic.DELETE_USERS_FAILURE,\r\n          payload: {\r\n            msg: error.response.data,\r\n          },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: deleteUserStatic.DELETE_USERS_FAILURE,\r\n          payload: {\r\n            msg: \"Something Went Wrong\",\r\n          },\r\n        });\r\n      }\r\n    }\r\n    dispatch({\r\n      type: deleteUserStatic.DELETE_USERS_REQUEST,\r\n      payload: {\r\n        ..._id,\r\n      },\r\n    });\r\n  };\r\n};\r\n\r\n// block unblock usersaccount\r\n\r\nexport const blockUnblockUser = (_id, isBlock) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: blockUnblockUserStatic.BLOCK_UNBLOCK_USERS_REQUEST,\r\n    });\r\n    try {\r\n      const res = await axios.post(\"/adminpanel/blockunblockuser\", {\r\n        _id,\r\n        isBlock,\r\n      });\r\n      if (res.status == 200) {\r\n        dispatch({\r\n          type: blockUnblockUserStatic.BLOCK_UNBLOCK_USERS_SUCCESS,\r\n          payload: {\r\n            msg: res.data,\r\n          },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: blockUnblockUserStatic.BLOCK_UNBLOCK_USERS_FAILURE,\r\n          payload: {\r\n            msg: res.data,\r\n          },\r\n        });\r\n      }\r\n      return res;\r\n    } catch (error) {\r\n      if (error.response) {\r\n        dispatch({\r\n          type: blockUnblockUserStatic.BLOCK_UNBLOCK_USERS_FAILURE,\r\n          payload: {\r\n            msg: error.response.data,\r\n          },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: blockUnblockUserStatic.BLOCK_UNBLOCK_USERS_FAILURE,\r\n          payload: {\r\n            msg: \"Something Went Wrong\",\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\n// <--------------DayWise Records----------------------------->\r\n\r\nexport const daywiseData = (date) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: daywiseConstants.DAY_WISE_STATIC_REQUEST,\r\n    });\r\n    try {\r\n      console.log(\"date ge\", date);\r\n      const res = await axios.post(\"/adminpanel/getlistoftokensdaywise\", {\r\n        date,\r\n      });\r\n      if (res.status == 200) {\r\n        dispatch({\r\n          type: daywiseConstants.DAY_WISE_STATIC_SUCCESS,\r\n          payload: {\r\n            data: res.data,\r\n          },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: daywiseConstants.DAY_WISE_STATIC_FAILURE,\r\n          payload: {\r\n            msg: res.data,\r\n          },\r\n        });\r\n      }\r\n      return res;\r\n    } catch (error) {\r\n      if (error.response) {\r\n        dispatch({\r\n          type: daywiseConstants.DAY_WISE_STATIC_FAILURE,\r\n          payload: {\r\n            msg: error.response.data,\r\n          },\r\n        });\r\n        return error.response;\r\n      } else {\r\n        dispatch({\r\n          type: daywiseConstants.DAY_WISE_STATIC_FAILURE,\r\n          payload: {\r\n            msg: \"Something Went Wrong\",\r\n          },\r\n        });\r\n        return \"network\";\r\n      }\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Redirect } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  background-image: linear-gradient(rgba(0, 0, 0, 0.38), rgba(0, 0, 0, 0.8)),\r\n    url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n  border-radius: 8px;\r\n  box-shadow: 0 3px 8px 0 rgba(0, 0, 0, 0.08);\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-position: center center;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 20px;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  color: white;\r\n  margin-top: 40px;\r\n`;\r\n\r\nconst ContentColumn = styled.div``;\r\n\r\nconst Title = styled.span`\r\n  font-size: 24px;\r\n  font-weight: 900;\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  color: ${(props) => props.color};\r\n`;\r\n\r\nconst TagContainer = styled.div`\r\n  background-color: ${(props) => props.tagBg};\r\n  color: ${(props) => props.tagColor};\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n  text-transform: uppercase;\r\n  padding: 3px;\r\n  width: 90px;\r\n  border-radius: 3px;\r\n  text-align: center;\r\n  color: white;\r\n`;\r\n\r\nconst TagText = styled.div``;\r\n\r\nconst IconContainer = styled.div`\r\n  cursor: pointer;\r\n  color: ${(props) => props.color};\r\n`;\r\n\r\nconst Top = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst CTA = styled.span`\r\n  display: block;\r\n  margin-top: 20px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  i {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nconst Card12 = ({\r\n  title,\r\n  titleColor = \"white\",\r\n  tag,\r\n  tagBg = \"brown\",\r\n  borderBottomColor,\r\n  tagColor = \"white\",\r\n  iconName,\r\n  iconSize = 1,\r\n  iconColor = \"white\",\r\n  bgPhoto,\r\n  cta,\r\n  direct\r\n}) => (\r\n  <Grid item xs={12} lg={4}>\r\n    <Container bgPhoto={bgPhoto} borderBottomColor={borderBottomColor}>\r\n      {tag && (\r\n        <Top>\r\n          <TagContainer tagBg={tagBg} tagColor={tagColor}>\r\n            <TagText>{tag}</TagText>\r\n          </TagContainer>\r\n          {iconName && (\r\n            <IconContainer color={iconColor}>\r\n              <i className={`${iconName} fa-${iconSize}x`} />\r\n            </IconContainer>\r\n          )}\r\n        </Top>\r\n      )}\r\n      {title && (\r\n        <Content>\r\n          <ContentColumn>\r\n            {title && <Title color={titleColor}>{title}</Title>}\r\n            {cta && (\r\n              <NavLink\r\n                to={`/${direct}`}\r\n                style={{\r\n                  display: \"block\",\r\n                  textDecoration: \"none\",\r\n                  color: \"white\",\r\n                  cursor: \"pointer\",\r\n                  fontSize: \"16px\",\r\n                  marginTop: \"20px\",\r\n                }}\r\n              >\r\n                View\r\n              </NavLink>\r\n            )}\r\n          </ContentColumn>\r\n        </Content>\r\n      )}\r\n    </Container>\r\n  </Grid>\r\n);\r\n\r\nCard12.propTypes = {\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.string,\r\n  tag: PropTypes.string,\r\n  tagColor: PropTypes.string,\r\n  tagBg: PropTypes.string,\r\n  iconName: PropTypes.string,\r\n  iconSize: PropTypes.number,\r\n  iconColor: PropTypes.string,\r\n  bgPhoto: PropTypes.string,\r\n  cta: PropTypes.string,\r\n  borderBottomColor: PropTypes.string,\r\n  direct:PropTypes.string\r\n};\r\n\r\nexport default Card12;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFusioncharts from \"react-fusioncharts\";\r\nimport CandyTheme from \"fusioncharts/themes/fusioncharts.theme.candy\";\r\nimport ReactFC from \"react-fusioncharts\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    maxHeight: \"340\",\r\n    width: \"90vw\",\r\n    // margin:\"auto\"\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"80vw\",\r\n    },\r\n  },\r\n}));\r\n\r\ncharts(FusionCharts);\r\nReactFC.fcRoot(FusionCharts, CandyTheme);\r\n\r\nconst Businessstats = ({ business, check }) => {\r\n  console.log(check);\r\n  const labels = [];\r\n  const dataValues = [];\r\n  try {\r\n    if (business.data[0] != undefined) {\r\n      if (check == \"sevendays\") {\r\n        Object.keys(business.data[0].sevendays).map((data, index) => {\r\n          labels.push({ label: data });\r\n        });\r\n        Object.values(business.data[0].sevendays).map((data, index) => {\r\n          dataValues.push({ value: data });\r\n        });\r\n      } else if (check == \"month\") {\r\n        Object.keys(business.data[0].currstats).map((data, index) => {\r\n          labels.push({ label: data });\r\n        });\r\n        Object.values(business.data[0].currstats).map((data, index) => {\r\n          dataValues.push({ value: data });\r\n        });\r\n      } else if (check == \"lst24hrs\") {\r\n        Object.keys(business.data[0].last24hrs).map((data, index) => {\r\n          labels.push({ label: data });\r\n        });\r\n        Object.values(business.data[0].last24hrs).map((data, index) => {\r\n          dataValues.push({ value: data });\r\n        });\r\n      } else {\r\n        Object.keys(business.data[0].businessStats).map((data, index) => {\r\n          labels.push({ label: data });\r\n        });\r\n        Object.values(business.data[0].businessStats).map((data, index) => {\r\n          dataValues.push({ value: data });\r\n        });\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n\r\n  const dataSource = {\r\n    chart: {\r\n      caption: \"Number Of Registered Businesses \",\r\n      yaxisname: \"Number of Businesses\",\r\n      showhovereffect: \"1\",\r\n      divLineIsDashed: \"1\",\r\n      rotateLabels: \"1\",\r\n      labelDisplay: \"wrap\",\r\n\r\n      drawcrossline: \"1\",\r\n      // forceYAxisValueDecimals: \"0\",\r\n      sForceDecimals: \"1\",\r\n\r\n      plottooltext: \"<b>$dataValue</b> accounts Registered \",\r\n      theme: \"candy\",\r\n    },\r\n    categories: [\r\n      {\r\n        category: labels,\r\n      },\r\n    ],\r\n    dataset: [\r\n      {\r\n        seriesname: \"Business\",\r\n        data: dataValues,\r\n      },\r\n    ],\r\n  };\r\n\r\n  // console.log(\"dispatch \", auth.error);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ReactFusioncharts\r\n      type=\"msline\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      dataFormat=\"JSON\"\r\n      dataSource={dataSource}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Businessstats;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFusioncharts from \"react-fusioncharts\";\r\nimport GammelTheme from \"fusioncharts/themes/fusioncharts.theme.gammel\";\r\nimport ReactFC from \"react-fusioncharts\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    maxHeight: \"340\",\r\n    width: \"90vw\",\r\n    // margin:\"auto\"\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"80vw\",\r\n    },\r\n  },\r\n}));\r\n\r\ncharts(FusionCharts);\r\nReactFC.fcRoot(FusionCharts, GammelTheme);\r\n\r\nconst Usersstats = ({ users, check }) => {\r\n  const labels = [];\r\n  const dataValues = [];\r\n\r\n  try {\r\n    if (users.data[0] != undefined) {\r\n      if (check == \"sevendays\") {\r\n        Object.keys(users.data[0].sevendays).map((data, index) => {\r\n          labels.push({ label: data });\r\n        });\r\n        Object.values(users.data[0].sevendays).map((data, index) => {\r\n          dataValues.push({ value: data });\r\n        });\r\n      } else if (check == \"month\") {\r\n        Object.keys(users.data[0].currstats).map((data, index) => {\r\n          labels.push({ label: data });\r\n        });\r\n        Object.values(users.data[0].currstats).map((data, index) => {\r\n          dataValues.push({ value: data });\r\n        });\r\n      } else if (check == \"lst24hrs\") {\r\n        Object.keys(users.data[0].last24hrs).map((data, index) => {\r\n          labels.push({ label: data });\r\n        });\r\n        Object.values(users.data[0].last24hrs).map((data, index) => {\r\n          dataValues.push({ value: data });\r\n        });\r\n      } else {\r\n        Object.keys(users.data[0].userStats).map((data, index) => {\r\n          labels.push({ label: data });\r\n        });\r\n        Object.values(users.data[0].userStats).map((data, index) => {\r\n          dataValues.push({ value: data });\r\n        });\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n   }\r\n  const dataSource = {\r\n    chart: {\r\n      caption: \"Number Of Registered Users \",\r\n      yaxisname: \"Number of Users\",\r\n      showhovereffect: \"1\",\r\n      divLineIsDashed: \"1\",\r\n      rotateLabels: \"1\",\r\n      labelDisplay: \"wrap\",\r\n\r\n      drawcrossline: \"1\",\r\n      // forceYAxisValueDecimals: \"0\",\r\n      sForceDecimals: \"1\",\r\n\r\n      plottooltext: \"<b>$dataValue</b> acoounts Registered \",\r\n      theme: \"gammel\",\r\n    },\r\n    categories: [\r\n      {\r\n        category: labels,\r\n      },\r\n    ],\r\n    dataset: [\r\n      {\r\n        seriesname: \"Users\",\r\n        data: dataValues,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ReactFusioncharts\r\n      type=\"msline\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      dataFormat=\"JSON\"\r\n      dataSource={dataSource}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Usersstats;\r\n","import React from \"react\";\r\nimport { Paper, Divider, Grid, Button } from \"@material-ui/core\";\r\nimport SecurityIcon from \"@material-ui/icons/Security\";\r\nimport { Redirect, NavLink } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      fontSize: \"20px\",\r\n    },\r\n  },\r\n  access:{\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      fontSize: \"10px\",\r\n    },  \r\n  }\r\n}));\r\n\r\nconst TitleTemplate = ({ title }) => {\r\n  const classes = useStyles();\r\n  const token = window.localStorage.getItem(\"token\");\r\n\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <Paper\r\n        elevation={0}\r\n        style={{\r\n          padding: \"5px\",\r\n          background: \"transparent\",\r\n          color: \"darkblue\",\r\n        }}\r\n      >\r\n        <Grid container alignItems=\"center\">\r\n          <Grid item xs={7} md={10}>\r\n            <h1 className={classes.title}>{title}</h1>\r\n          </Grid>\r\n          {JSON.parse(token).isSuperAdmin ? (\r\n            title !== \"ACCESS PANEL\" ? (\r\n              <Grid item xs={5} md={2} style={{width:\"100%\"}}>\r\n                <NavLink to=\"/accesspanel\" style={{textDecoration:\"none\"}}>\r\n                <Button\r\n                className={classes.access}\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  endIcon={<SecurityIcon />}\r\n                >\r\n                  Access Panel\r\n                </Button>\r\n                </NavLink>\r\n              </Grid>\r\n            ) : null\r\n          ) : null}\r\n        </Grid>\r\n      </Paper>\r\n      <Divider />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TitleTemplate;\r\n","export default __webpack_public_path__ + \"static/media/customerqueue.0dad73ab.jpg\";","export default __webpack_public_path__ + \"static/media/business.ecf82875.jpg\";","import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../Navigation/navigation\";\r\n// react-bootstrap components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { Grid, MenuItem, InputLabel, Select } from \"@material-ui/core\";\r\n\r\nimport { getBusinessData } from \"../../actions/businessaction\";\r\nimport { getUserData } from \"../../actions/useraction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Helpers\r\n// import CardModel from \"../../HelpersComponents/CardTemplate\";\r\nimport CardModel from \"../../HelpersComponents/CardTemplate\";\r\nimport Businessstats from \"../Charts/businessstats\";\r\nimport UsersStats from \"../Charts/usersstats\";\r\nimport TitleTemplate from \"../../HelpersComponents/TitleTemplate\";\r\nimport UserImage from \"../../utils/images/customerqueue.jpg\";\r\nimport BusinessImage from \"../../utils/images/business.jpg\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    padding: \"inherit\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  gridCSS: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"80vw !important\",\r\n    },\r\n  },\r\n  charts: {\r\n    marginTop: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    maxHeight: \"340\",\r\n    width: \"90vw\",\r\n    margin: \"auto\",\r\n    // margin:\"auto\"\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"100vw !important\",\r\n      margin: \"auto\",\r\n      paddingLeft: \"20%\",\r\n    },\r\n  },\r\n  select:{\r\n    width:\"30%\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n    width:\"50%\"  \r\n    },\r\n  }\r\n}));\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n  const [searchKey, setsearchKey] = useState(\"year\");\r\n  const [searchcustomerKey, setsearchcustomerKey] = useState(\"year\")\r\n  let business = useSelector((state) => state.business);\r\n  let users = useSelector((state) => state.users);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getBusinessData(\"year\"));\r\n    dispatch(getUserData(\"year\"));\r\n  }, []);\r\n\r\n  const handlechange = (e) => {\r\n    setsearchKey(e.target.value);\r\n      console.log(e.target.value);\r\n    dispatch(getBusinessData(e.target.value))\r\n  };\r\n  const handleCustomerschange=(e)=>{\r\n    setsearchcustomerKey(e.target.value);\r\n    dispatch(getUserData(e.target.value));\r\n  \r\n\r\n  }\r\n  return (\r\n    <>\r\n      <Header>\r\n        <div className={classes.root}>\r\n          <TitleTemplate title=\"DASHBOARD\" />\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n            style={{ marginBottom: \"2%\", marginTop: \"1%\" }}\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            className={classes.gridCSS}\r\n          >\r\n            <CardModel\r\n              title=\"Manage Businesses\"\r\n              tag=\"Business\"\r\n              iconName=\"fas fa-ellipsis-v\"\r\n              bgPhoto={BusinessImage}\r\n              cta=\"View\"\r\n              direct=\"business\"\r\n            />\r\n            <CardModel\r\n              title=\"Manage Customers\"\r\n              tag=\"Customers\"\r\n              iconName=\"fas fa-ellipsis-v\"\r\n              bgPhoto={UserImage}\r\n              cta=\"View\"\r\n              direct=\"users\"\r\n            />\r\n\r\n            <CardModel\r\n              title=\"Manage Queries\"\r\n              tag=\"Queries\"\r\n              iconName=\"fas fa-ellipsis-v\"\r\n              bgPhoto=\"https://picsum.photos/id/134/200/300\"\r\n              cta=\"View\"\r\n              direct=\"queries\"\r\n            />\r\n            <Grid item className={classes.charts}>\r\n              <div style={{ marginBottom: \"1%\" }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">\r\n                  Search By\r\n                </InputLabel>\r\n                <Select\r\n                 className={classes.select}\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  value={searchKey}\r\n                  onChange={handlechange}\r\n                >\r\n                  <MenuItem value={\"year\"}>Year</MenuItem>\r\n                  <MenuItem value={\"month\"}>This Month</MenuItem>\r\n                  <MenuItem value={\"sevendays\"}>Last 7 Days</MenuItem>\r\n                  <MenuItem value={\"lst24hrs\"}>Last 24 Hours</MenuItem>\r\n                </Select>\r\n              </div>\r\n              <Businessstats business={business} check={searchKey} />\r\n            </Grid>\r\n            <Grid item style={{ marginTop: \"2%\" }} className={classes.charts}>\r\n            <div style={{ marginBottom: \"1%\" }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">\r\n                  Search By\r\n                </InputLabel>\r\n                <Select\r\n                 className={classes.select}\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  value={searchcustomerKey}\r\n                  onChange={handleCustomerschange}\r\n                >\r\n                  <MenuItem value={\"year\"}>Year</MenuItem>\r\n                  <MenuItem value={\"month\"}>This Month</MenuItem>\r\n                  <MenuItem value={\"sevendays\"}>Last 7 Days</MenuItem>\r\n                  <MenuItem value={\"lst24hrs\"}>Last 24 Hours</MenuItem>\r\n                </Select>\r\n              </div>\r\n              <UsersStats users={users} check={searchcustomerKey}/>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Header>\r\n    </>\r\n  );\r\n};\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  makeStyles,\r\n  TablePagination,\r\n  TableSortLabel,\r\n} from \"@material-ui/core\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    marginTop: theme.spacing(3),\r\n    \"& thead th\": {\r\n      fontWeight: \"600\",\r\n      color: \"white\",\r\n      backgroundColor: theme.palette.common.black,\r\n      [theme.breakpoints.down('md')]:{\r\n        fontSize:\"10px\",\r\n        padding:'5px',\r\n        \r\n      }\r\n  \r\n    },\r\n    // \"& thead th:hover\":{\r\n    //     backgroundColor\r\n    // },\r\n    \"& tbody td\": {\r\n      fontWeight: \"300\",\r\n    },\r\n    \"& tbody tr:hover\": {\r\n      backgroundColor: \"#fffbf2\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  pagination:{\r\n    [theme.breakpoints.down('md')]:{\r\n      width:\"100vw\"\r\n    }\r\n  }\r\n  \r\n}));\r\n\r\nconst TableTemplate=({ records=[], headCells, filterFn })=>  {\r\n  const classes = useStyles();\r\n  const pages = [5, 10, 25];\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(pages[page]);\r\n  const [order, setOrder] = useState();\r\n  const [orderBy, setOrderBy] = useState();\r\n  const TblContainer = (props) => (\r\n    <Table className={classes.table}>{props.children}</Table>\r\n  );\r\n  const TblHead = (props) => {\r\n    const handleSortRequest = (cellId) => {\r\n      const isAsc = orderBy === cellId && order === \"asc\";\r\n      setOrder(isAsc ? \"desc\" : \"asc\");\r\n      setOrderBy(cellId);\r\n    };\r\n    return (\r\n      <TableHead  >\r\n        <TableRow>\r\n          {headCells.map((headCell) => (\r\n            <TableCell\r\n              key={headCell.id}\r\n              sortDirection={orderBy === headCell.id ? order : false}\r\n            >\r\n              {headCell.disableSorting ? (\r\n                headCell.label\r\n              ) : (\r\n                <TableSortLabel\r\n                  active={orderBy === headCell.id}\r\n                  direction={orderBy === headCell.id ? order : \"asc\"}\r\n                  onClick={() => {\r\n                    handleSortRequest(headCell.id);\r\n                  }}\r\n                >\r\n                  {headCell.label}\r\n                </TableSortLabel>\r\n              )}\r\n            </TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  };\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const TblPagination = () => (\r\n    <TablePagination\r\n      className={classes.pagination}\r\n      component=\"div\"\r\n      page={page}\r\n      rowsPerPageOptions={pages}\r\n      rowsPerPage={rowsPerPage}\r\n      count={records.length}\r\n      onChangePage={handleChangePage}\r\n      onChangeRowsPerPage={handleChangeRowsPerPage}\r\n    />\r\n  );\r\n\r\n  function stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n  }\r\n  function getComparator(order, orderBy) {\r\n    return order === \"desc\"\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n  }\r\n\r\n  function descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n  const recordsAfterPagingAndSorting = () => {\r\n    return stableSort(\r\n      filterFn.fn(records),\r\n      getComparator(order, orderBy)\r\n    ).slice(page * rowsPerPage, (page + 1) * rowsPerPage);\r\n  };\r\n\r\n  return {\r\n    TblContainer,\r\n    TblHead,\r\n    TblPagination,\r\n    recordsAfterPagingAndSorting,\r\n  };\r\n};\r\nexport default TableTemplate;","import React, { useState, useEffect } from \"react\";\r\nimport PeopleOutlineTwoToneIcon from \"@material-ui/icons/PeopleOutlineTwoTone\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\n\r\nimport { Search } from \"@material-ui/icons\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport TableTemplate from \"../../HelpersComponents/TableTemplate\";\r\nimport Controls from \"../../HelpersComponents/Input\";\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  MenuItem,\r\n  InputLabel,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  getBusinessListData,\r\n  removeBusinessAccount,\r\n  blockUnblock,\r\n} from \"../../actions/businessaction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n// Custom Css\r\nimport \"../../App.css\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContent: {\r\n    marginTop: theme.spacing(5),\r\n    padding: theme.spacing(3),\r\n    width: \"90vw\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      overflow: \"scroll\",\r\n    },\r\n  },\r\n  searchInput: {\r\n    width: \"100%\",\r\n  },\r\n  buttonSize: {\r\n    minWidth: 85,\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      minWidth: 10,\r\n    },\r\n  },\r\n  table: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      fontSize: \"10px\",\r\n      padding: \"5px\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst BusinessTable = ({ data }) => {\r\n  const deletestatus = useSelector((state) => state.businessdelete);\r\n  const dispatch = useDispatch(getBusinessListData());\r\n  const checkAccess = useSelector((state) => state.getspecificrole);\r\n\r\n  const headCells = [\r\n    { id: \"bname\", label: \"Business\" },\r\n    { id: \"cname\", label: \"Name\" },\r\n    { id: \"phone\", label: \"Mobile\" },\r\n    { id: \"category\", label: \"Category\" },\r\n    { id: \"state\", label: \"State\" },\r\n    { id: \"city\", label: \"City\" },\r\n    {\r\n      id: \"actions\",\r\n      label: `Total Accounts ${data.data.data ? data.data.data.length : 0}`,\r\n      disableSorting: true,\r\n    },\r\n  ];\r\n  //  deleteing business\r\n  const showDeleteAlert = (name, _id, isInactive) => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: isInactive\r\n        ? `This Action Will Activate ${name} Account`\r\n        : `This Action Will Inactivate ${name} Account`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"Yes\",\r\n      cancelButtonText: \"Cancel\",\r\n    }).then((res) => {\r\n      if (res.value) {\r\n        dispatch(removeBusinessAccount(_id, !isInactive)).then((dt) => {\r\n          if (dt.data == \"success\") {\r\n            dispatch(getBusinessListData());\r\n            Swal.fire(\r\n              isInactive ? \"Activate!!\" : \"InActivate!!\",\r\n              isInactive\r\n                ? `${name} account has been Activated.`\r\n                : `${name} account has been Inactivated.`,\r\n              \"success\"\r\n            );\r\n          } else {\r\n            Swal.fire(\"Failed\", `Something Went Wrong Try Again`, \"warning\");\r\n          }\r\n        });\r\n      } else if (res.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\r\n          \"Cancelled\",\r\n          isInactive\r\n            ? `${name} Account is not Activated`\r\n            : `${name} Account is not Inactivated`,\r\n          \"error\"\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  // block-unblock toggle\r\n  const showBlockUnblockAlert = (name, _id, isBlock) => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: isBlock\r\n        ? `This Action Will Unblock ${name} Account`\r\n        : `This Action Will block ${name} Account`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"Yes\",\r\n      cancelButtonText: \"Cancel\",\r\n    }).then((res) => {\r\n      if (res.value) {\r\n        dispatch(blockUnblock(_id, !isBlock)).then((dt) => {\r\n          if (dt.data == \"success\") {\r\n            dispatch(getBusinessListData());\r\n            Swal.fire(\r\n              isBlock ? \"Unblock!!\" : \"Block!!\",\r\n              isBlock\r\n                ? `${name} account has been Unblocked.`\r\n                : `${name} account has been Blocked.`,\r\n              \"success\"\r\n            );\r\n          } else {\r\n            Swal.fire(\"Failed\", `Something Went Wrong Try Again`, \"warning\");\r\n          }\r\n        });\r\n      } else if (res.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\r\n          \"Cancelled\",\r\n          isBlock\r\n            ? `${name} Account is not unblocked`\r\n            : `${name} Account is not blocked`,\r\n          \"error\"\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const [searchBy, setSearchBy] = useState(\"businessname\");\r\n  const [filterFn, setFilterFn] = useState({\r\n    fn: (items) => {\r\n      return items;\r\n    },\r\n  });\r\n\r\n  const records = data.data.data;\r\n  const { TblContainer, TblHead, TblPagination, recordsAfterPagingAndSorting } =\r\n    TableTemplate({ records, headCells, filterFn });\r\n\r\n  const handleSearch = (e) => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n      fn: (items) => {\r\n        if (target.value == \"\") return items;\r\n        else\r\n          return items.filter((x) => {\r\n            if (searchBy == \"businessname\") {\r\n              return x.businessname\r\n                .toString()\r\n                .toLowerCase()\r\n                .includes(target.value.toString().toLowerCase());\r\n            } else if (searchBy == \"contactpersonname\") {\r\n              return x.contactpersonname\r\n                .toString()\r\n                .toLowerCase()\r\n                .includes(target.value.toString().toLowerCase());\r\n            } else if (searchBy == \"phone\") {\r\n              return x.phone\r\n                .toString()\r\n                .toLowerCase()\r\n                .includes(target.value.toString().toLowerCase());\r\n            } else if (searchBy == \"category\") {\r\n              if (x.category !== undefined) {\r\n                return x.category\r\n                  .toString()\r\n                  .toLowerCase()\r\n                  .includes(target.value.toString().toLowerCase());\r\n              } else {\r\n              }\r\n            } else if (searchBy == \"state\") {\r\n              if (x.state !== undefined) {\r\n                return x.state\r\n                  .toString()\r\n                  .toLowerCase()\r\n                  .includes(target.value.toString().toLowerCase());\r\n              } else {\r\n              }\r\n            } else if (searchBy == \"city\") {\r\n              if (x.city !== undefined) {\r\n                return x.city\r\n                  .toString()\r\n                  .toLowerCase()\r\n                  .includes(target.value.toString().toLowerCase());\r\n              } else {\r\n              }\r\n            }\r\n          });\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.pageContent}>\r\n        {/* <EmployeeForm /> */}\r\n        <Toolbar style={{ width: \"100%\" }}>\r\n          <Grid container spacing={3}>\r\n            <Grid item sm={7} lg={8}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"Search Business Accounts\"\r\n                className={classes.searchInput}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Search />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                onChange={handleSearch}\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              sm={3}\r\n              lg={3}\r\n              style={{ width: \"100%\", marginLeft: \"3%\" }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-helper-label\">\r\n                Search By\r\n              </InputLabel>\r\n              <Select\r\n                style={{ width: \"100%\" }}\r\n                labelId=\"demo-simple-select-helper-label\"\r\n                id=\"demo-simple-select-helper\"\r\n                value={searchBy}\r\n                onChange={(e) => {\r\n                  setSearchBy(e.target.value);\r\n                }}\r\n              >\r\n                <MenuItem value={\"businessname\"}>Business Name</MenuItem>\r\n                <MenuItem value={\"contactpersonname\"}>Contact Person </MenuItem>\r\n                <MenuItem value={\"phone\"}>Mobile Number</MenuItem>\r\n                <MenuItem value={\"category\"}>category</MenuItem>\r\n                <MenuItem value={\"city\"}>City</MenuItem>\r\n                <MenuItem value={\"state\"}>State</MenuItem>\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n        <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n            {recordsAfterPagingAndSorting().map((item) => (\r\n              <TableRow key={item._id}>\r\n                <TableCell className={classes.table}>\r\n                  {item.businessname}\r\n                </TableCell>\r\n                <TableCell className={classes.table}>\r\n                  {item.contactpersonname}\r\n                </TableCell>\r\n                <TableCell className={classes.table}>{item.phone}</TableCell>\r\n                <TableCell className={classes.table}>\r\n                  {item.category ? item.category : \"Not Available\"}\r\n                </TableCell>\r\n                <TableCell className={classes.table}>\r\n                  {item.state ? item.state : \"Not Available\"}\r\n                </TableCell>\r\n                <TableCell className={classes.table}>\r\n                  {item.city ? item.city : \"Not Available\"}\r\n                </TableCell>\r\n                <TableCell className={classes.table}>\r\n                  <ButtonGroup\r\n                    aria-label=\"medium contained button group\"\r\n                    padding=\"10px\"\r\n                    m=\"2rem\"\r\n                  >\r\n                    {checkAccess.data.businessblock ? (\r\n                      item.isBlock ? (\r\n                        <Button\r\n                          className={classes.buttonSize}\r\n                          size=\"small\"\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          style={{ marginRight: \"4px\",width:\"10px\" }}\r\n                          onClick={() => {\r\n                            showBlockUnblockAlert(\r\n                              item.businessname,\r\n                              item._id,\r\n                              item.isBlock\r\n                            );\r\n                          }}\r\n                        >\r\n                          UnBlock\r\n                        </Button>\r\n                      ) : (\r\n                        <Button\r\n                          className={classes.buttonSize}\r\n                          size=\"small\"\r\n                          variant=\"contained\"\r\n                          style={{\r\n                            marginRight: \"4px\",\r\n                            backgroundColor: \"#cf0000\",\r\n                            color: \"white\",\r\n                          }}\r\n                          onClick={() => {\r\n                            showBlockUnblockAlert(\r\n                              item.businessname,\r\n                              item._id,\r\n                              item.isBlock\r\n                            );\r\n                          }}\r\n                        >\r\n                          Block\r\n                        </Button>\r\n                      )\r\n                    ) : null}\r\n\r\n                    {(checkAccess.data.businessactive?item.isInactive ? (\r\n                      <Button\r\n                        className={classes.buttonSize}\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{ marginRight: \"4px\" }}\r\n                        onClick={() => {\r\n                          showDeleteAlert(\r\n                            item.businessname,\r\n                            item._id,\r\n                            item.isInactive\r\n                          );\r\n                        }}\r\n                      >\r\n                        Active\r\n                      </Button>\r\n                    ) : (\r\n                      <Button\r\n                        className={classes.buttonSize}\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        style={{\r\n                          marginRight: \"4px\",\r\n                          backgroundColor: \"#cf0000\",\r\n                          color: \"white\",\r\n                        }}\r\n                        onClick={() => {\r\n                          showDeleteAlert(\r\n                            item.businessname,\r\n                            item._id,\r\n                            item.isInactive\r\n                          );\r\n                        }}\r\n                      >\r\n                        Inactive\r\n                      </Button>\r\n                    ):null)}\r\n                  </ButtonGroup>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </TblContainer>\r\n        <TblPagination />\r\n      </Paper>\r\n    </>\r\n  );\r\n  // return <h1>Hello</h1>\r\n};\r\n\r\nexport default BusinessTable;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport {\r\n  Toolbar,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  Input,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n// Icons\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport { CallMergeTwoTone, DeleteOutline } from \"@material-ui/icons\";\r\nimport BackupIcon from \"@material-ui/icons/Backup\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport { CustomDialog, useDialog } from \"react-st-modal\";\r\n\r\nimport {\r\n  getAllCategories,\r\n  deletecategory,\r\n  updatecategory,\r\n  createcategory,\r\n} from \"../../actions/businessaction\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { TableContainer } from \"@material-ui/core\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"../../App.css\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(5),\r\n    padding: theme.spacing(3),\r\n    width: \"90vw\",\r\n    [theme.breakpoints.down(\"md\")]:{\r\n      padding: theme.spacing(0),\r\n      \r\n    }\r\n  },\r\n  table: {},\r\n  selectTableCell: {\r\n    width: 60,\r\n  },\r\n  tableCell: {\r\n    width: 130,\r\n    height: 40,\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      fontSize: \"10px !important\",\r\n      width: \"100 !important\",\r\n    },\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    height: 40,\r\n  },\r\n  container: {\r\n    height: 300,\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      fontSize: \"10px !important\",\r\n    },\r\n  },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n    color: \"white\",\r\n  },\r\n  modal: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"75ch\",\r\n    },\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"30vw\",\r\n    },\r\n  },\r\n  modelField: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"90vw\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst CustomTableCell = ({ row, onChange }) => {\r\n  const classes = useStyles();\r\n  const { isEditMode } = row;\r\n  return (\r\n    <TableCell align=\"left\" className={classes.tableCell}>\r\n      {isEditMode ? (\r\n        <Input\r\n          value={row.category_name}\r\n          name={row.category_name}\r\n          onChange={(e) => onChange(e, row)}\r\n          className={classes.input}\r\n        />\r\n      ) : (\r\n        row.category_name\r\n      )}\r\n    </TableCell>\r\n  );\r\n};\r\n\r\nconst CategoryTable = ({ category }) => {\r\n  const dispatch = useDispatch(getAllCategories());\r\n\r\n  const [rows, setRows] = React.useState(category.data);\r\n  const [previous, setPrevious] = React.useState({});\r\n  const [newvalue, setnewValue] = React.useState(\"\");\r\n  const [showAlert, setShowAlert] = useState(null);\r\n  const checkAccess = useSelector((state) => state.getspecificrole);\r\n  console.log(checkAccess.categoryedit);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setRows(category.data);\r\n  }, [category]);\r\n\r\n  const onToggleEditMode = (e, _id, check = false, name = \"\") => {\r\n    if (check == true && newvalue !== \"\") {\r\n      console.log(newvalue);\r\n      console.log(_id);\r\n      dispatch(updatecategory(_id, newvalue)).then((dt) => {\r\n        console.log(dt);\r\n      });\r\n    }\r\n    setRows((state) => {\r\n      return rows.map((row) => {\r\n        if (row._id === _id) {\r\n          console.log(row.category_name);\r\n          console.log();\r\n          if (!row.category_name == \"\") {\r\n            return { ...row, isEditMode: !row.isEditMode };\r\n          } else {\r\n            return {\r\n              ...row,\r\n              category_name: previous[row._id].category_name,\r\n              isEditMode: !row.isEditMode,\r\n            };\r\n          }\r\n        }\r\n        return row;\r\n      });\r\n    });\r\n  };\r\n\r\n  const onChange = (e, row) => {\r\n    if (!previous[row._id]) {\r\n      setPrevious((state) => ({ ...state, [row._id]: row }));\r\n    }\r\n    const value = e.target.value;\r\n    setnewValue(e.target.value);\r\n    const name = e.target.name;\r\n    const { _id } = row;\r\n    const newRows = rows.map((row) => {\r\n      if (row._id === _id) {\r\n        return { ...row, category_name: value };\r\n      }\r\n      return row;\r\n    });\r\n\r\n    setRows(newRows);\r\n  };\r\n\r\n  const onDelete = (_id, isActive, name) => {\r\n    console.log(isActive);\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: isActive\r\n        ? `This action will Inactive ${name} category!!`\r\n        : `This action will Active ${name} category!!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"Yes\",\r\n      cancelButtonText: \"Cancel\",\r\n    }).then((res) => {\r\n      if (res.value) {\r\n        dispatch(deletecategory(_id, !isActive)).then((res) => {\r\n          if (res !== undefined) {\r\n            setRows(res.data);\r\n            Swal.fire(\r\n              isActive ? \"Inactivated!\" : \"Activated\",\r\n              isActive\r\n                ? `${name} category has been Inactivated.`\r\n                : `${name} category has been Activated.`,\r\n              \"success\"\r\n            );\r\n          } else {\r\n            Swal.fire(\r\n              \"Failed\",\r\n              isActive ? `${name} to Inactive` : `${name} to Active`,\r\n              \"error\"\r\n            );\r\n          }\r\n        });\r\n      } else if (res.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\r\n          \"Cancelled\",\r\n          isActive\r\n            ? `${name} Category is not Inactivated`\r\n            : `${name} Category is not Activated`,\r\n          \"error\"\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  // <---------------------SHOW DIALOG----------------------->\r\n  function CustomDialogContent(props) {\r\n    const classes = useStyles();\r\n\r\n    const dialog = useDialog();\r\n\r\n    const [value, setValue] = useState();\r\n    const [iserror, setError] = useState(false);\r\n    const [erromsg, setErrormsg] = useState(\"\");\r\n    const [categoryname, setName] = useState(\"\");\r\n\r\n    return (\r\n      <div>\r\n        <form className={classes.modal} noValidate autoComplete=\"off\">\r\n          <FormControl className={classes.modelField} error={iserror}>\r\n            <InputLabel htmlFor=\"component-error\">Name</InputLabel>\r\n            <Input\r\n              id=\"component-error\"\r\n              value={categoryname}\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n              }}\r\n              aria-describedby=\"component-error-text\"\r\n            />\r\n            {iserror ? (\r\n              <FormHelperText id=\"component-error-text\">\r\n                {erromsg}\r\n              </FormHelperText>\r\n            ) : null}\r\n          </FormControl>\r\n\r\n          <Button\r\n            className={classes.modelField}\r\n            variant=\"contained\"\r\n            style={{ backgroundColor: \"black\", color: \"white\" }}\r\n            component=\"span\"\r\n            startIcon={<BackupIcon />}\r\n            onClick={() => {\r\n              console.log(categoryname);\r\n              if (!categoryname == \"\") {\r\n                dispatch(createcategory(categoryname)).then((res) => {\r\n                  console.log(res);\r\n                  if (res.data.msg) {\r\n                    setError(true);\r\n                    setErrormsg(res.data.msg);\r\n                  } else if (res.data.msg == undefined) {\r\n                    setError(false);\r\n                    setErrormsg(\"\");\r\n                    dialog.close(value);\r\n                    setRows(res.data);\r\n                    setShowAlert(true);\r\n                  }\r\n                });\r\n              } else {\r\n                setError(true);\r\n                setErrormsg(\"Field can't be empty!!\");\r\n              }\r\n            }}\r\n          >\r\n            Add\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root} style={{ color: \"red\" }}>\r\n      {showAlert && (\r\n        <Alert\r\n          variant=\"filled\"\r\n          severity=\"success\"\r\n          onClose={() => setShowAlert(null)}\r\n        >\r\n          Category Added Successfully!!\r\n        </Alert>\r\n      )}\r\n      <Toolbar style={{ backgroundColor: \"black\" }}>\r\n        <Grid\r\n          container\r\n          style={{ width: \"100%\" }}\r\n          spacing={4}\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs={8} lg={9}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              Categories\r\n            </Typography>\r\n          </Grid>\r\n          {checkAccess.data.categoryadd ? (\r\n            <Grid\r\n              item\r\n              xs={3}\r\n              className={classes.modelField}\r\n              style={{ paddingLeft: \"10%\" }}\r\n            >\r\n              <Button\r\n                size=\"medium\"\r\n                variant=\"contained\"\r\n                style={{ backgroundColor: \"#cf0000\", color: \"white\" }}\r\n                onClick={async () => {\r\n                  const result = await CustomDialog(\r\n                    <CustomDialogContent\r\n                      className={classes.modelField}\r\n                      category={category}\r\n                    />,\r\n                    {\r\n                      title: \"Enter Category\",\r\n                      showCloseIcon: true,\r\n                    }\r\n                  );\r\n                }}\r\n              >\r\n                Add\r\n              </Button>\r\n            </Grid>\r\n          ) : null}\r\n        </Grid>\r\n      </Toolbar>\r\n      <TableContainer className={classes.container}>\r\n        <Table className={classes.table} aria-label=\"caption table\">\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <TableRow key={row._id}>\r\n                {checkAccess.data.categoryedit ? (\r\n                  <TableCell className={classes.selectTableCell}>\r\n                    {row.isEditMode ? (\r\n                      <>\r\n                        <IconButton\r\n                          aria-label=\"done\"\r\n                          onClick={(e) =>\r\n                            onToggleEditMode(\r\n                              e,\r\n                              row._id,\r\n                              true,\r\n                              row.category_name\r\n                            )\r\n                          }\r\n                        >\r\n                          <CheckCircleIcon />\r\n                        </IconButton>\r\n                      </>\r\n                    ) : (\r\n                      <IconButton\r\n                        aria-label=\"delete\"\r\n                        onClick={(e) => onToggleEditMode(e, row._id)}\r\n                      >\r\n                        <EditIcon />\r\n                      </IconButton>\r\n                    )}\r\n                  </TableCell>\r\n                ) : null}\r\n                <CustomTableCell {...{ row, onChange }} />\r\n                {/* <CustomTableCell {...{ row, name: \"calories\", onChange }} /> */}\r\n                {checkAccess.data.categoryactive ? (\r\n                  <TableCell align=\"left\" className={classes.tableCell}>\r\n                    {!row.isActive ? (\r\n                      <Button\r\n                        className={classes.buttonSize}\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{\r\n                          marginRight: \"4px\",\r\n                          paddingLeft: \"15px\",\r\n                          paddingRight: \"15px\",\r\n                        }}\r\n                        onClick={() => {\r\n                          onDelete(row._id, row.isActive, row.category_name);\r\n                        }}\r\n                      >\r\n                        Active\r\n                      </Button>\r\n                    ) : (\r\n                      <Button\r\n                        className={classes.buttonSize}\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        style={{\r\n                          marginRight: \"4px\",\r\n                          backgroundColor: \"#cf0000\",\r\n                          color: \"white\",\r\n                        }}\r\n                        onClick={() => {\r\n                          onDelete(row._id, row.isActive, row.category_name);\r\n                        }}\r\n                      >\r\n                        Inactive\r\n                      </Button>\r\n                    )}\r\n                  </TableCell>\r\n                ) : null}\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n};\r\nexport default CategoryTable;\r\n","import FusionCharts from \"fusioncharts\";\r\nimport charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFusioncharts from \"react-fusioncharts\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// Resolves charts dependancy\r\ncharts(FusionCharts);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    maxHeight: \"340\",\r\n    width: \"90vw\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"95vw\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst CategoryStats = ({ stats }) => {\r\n  // console.log(stats.data);\r\n  const datavalues = [];\r\n  const temp = {};\r\n  if (stats.data !== undefined) {\r\n    stats.data.map((dt) => {\r\n      if (dt._id !== null) {\r\n        datavalues.push({ label: dt._id, value: dt.count });\r\n      }\r\n    });\r\n  }\r\n\r\n  const dataSource = {\r\n    chart: {\r\n      caption: \"Category Wise Registered Businesesses\",\r\n      showpercentvalues: \"1\",\r\n      showvalues: \"1\",\r\n      showpercentintooltip: \"0\",\r\n      showpercent: \"1\",\r\n      showLegend: \"0\",\r\n      // valueFontSize:\"7\",\r\n      \r\n      enablemultislicing: \"1\",\r\n      theme: \"candy\",\r\n\r\n    },\r\n    data: datavalues,\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ReactFusioncharts\r\n        type=\"pie2d\"\r\n        width=\"100%\"\r\n        height=\"400\"\r\n        dataFormat=\"JSON\"\r\n        dataSource={dataSource}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default CategoryStats;\r\n","import React, { useEffect } from \"react\";\r\nimport Header from \"../Navigation/navigation\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid } from \"@material-ui/core\";\r\n// Helpers\r\nimport TitleTemplate from \"../../HelpersComponents/TitleTemplate\";\r\nimport BusinessTable from \"./businessTable\";\r\nimport CategoryTable from \"./categorytable\";\r\nimport CategoryStats from \"../Charts/categorystats\";\r\nimport {\r\n  getBusinessListData,\r\n  getAllCategories,\r\n  getcategoryStats,\r\n} from \"../../actions/businessaction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  gridCSS: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"80vw !important\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Business = () => {\r\n  const state = useSelector((state) => state.business);\r\n  const category = useSelector((state) => state.businesscategories);\r\n  const categorystats = useSelector((state) => state.businesscategoriesstats);\r\n  const checkAccess = useSelector((state) => state.getspecificrole);\r\n  console.log();\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getBusinessListData());\r\n    dispatch(getAllCategories());\r\n    dispatch(getcategoryStats());\r\n  }, []);\r\n  if(!checkAccess.data.business){\r\n    return <Redirect to={\"/\"} />;\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <Header>\r\n        <div className={classes.root}>\r\n          <TitleTemplate title=\"BUSINESS PANEL\" />\r\n          <Grid\r\n            className={classes.gridCSS}\r\n            container\r\n            spacing={2}\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            {checkAccess.data.business && checkAccess.data.businessview ? (\r\n              <Grid item xs={12}>\r\n                <BusinessTable data={state} />\r\n              </Grid>\r\n            ) : null}\r\n            {checkAccess.data.business && checkAccess.data.categoryview ? (\r\n              <Grid item xs={12}>\r\n                <CategoryTable category={category} />\r\n              </Grid>\r\n            ) : null}\r\n            {checkAccess.data.business && checkAccess.data.categorychartview ? (\r\n              <Grid item xs={12}>\r\n                <CategoryStats stats={categorystats} />\r\n              </Grid>\r\n            ) : null}\r\n          </Grid>\r\n        </div>\r\n      </Header>\r\n    </>\r\n  );\r\n};\r\nexport default Business;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\n\r\nimport { Search } from \"@material-ui/icons\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport TableTemplate from \"../../HelpersComponents/TableTemplate\";\r\nimport Controls from \"../../HelpersComponents/Input\";\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  MenuItem,\r\n  InputLabel,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport { getUsersListData,removeUserAccount,blockUnblockUser } from \"../../actions/useraction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContent: {\r\n    marginTop: theme.spacing(5),\r\n    padding: theme.spacing(3),\r\n    width:\"90vw\",\r\n    [theme.breakpoints.down('md')]: {\r\n    overflow:\"scroll\",  \r\n    },\r\n  },\r\n  searchInput: {\r\n    width: \"100%\",\r\n  },\r\n  buttonSize: {\r\n    minWidth: 85,\r\n    [theme.breakpoints.down('md')]: {\r\n    minWidth:10  \r\n    },\r\n  },\r\n  table:{\r\n    [theme.breakpoints.down('md')]:{\r\n      fontSize:\"10px\",\r\n      padding:'5px'\r\n    }\r\n  }\r\n}));\r\n\r\n\r\nconst UserTable = ({ data }) => {\r\n  const deletestatus=useSelector((state)=>state.userdelete)\r\n  const checkAccess = useSelector((state) => state.getspecificrole);\r\n \r\n  const dispatch = useDispatch(getUsersListData());\r\n   const headCells = [\r\n    { id: \"fname\", label: \"First Name\" },\r\n    { id: \"lname\", label: \"Last  Name\" },\r\n    { id: \"phone\", label: \"Mobile\" },\r\n    {id:\"email\",label:\"Email\"},\r\n    { id: \"state\", label: \"State\" },\r\n    { id: \"city\", label: \"City\" },\r\n    { id: \"actions\", label: `Total Accounts ${data.data?data.data.length:0}`, disableSorting: true },\r\n  ];\r\n  \r\n//  deleteing user\r\n  const showDeleteAlert = (name, _id,isInactive) => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: isInactive?`This Action Will Activate ${name} Account`:`This Action Will Inactivate ${name} Account`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"Yes\",\r\n      cancelButtonText: \"Cancel\",\r\n    }).then((res) => {\r\n      if (res.value) {\r\n        \r\n          dispatch(removeUserAccount(_id,!isInactive)).then((dt)=>{\r\n           if(dt.data==\"success\")\r\n            {\r\n              dispatch(getUsersListData());\r\n              Swal.fire(isInactive?\"Activate!!\":\"InActivate!!\",isInactive?`${name} account has been Activated.`:`${name} account has been Inactivated.`, \"success\");\r\n            }\r\n            else{\r\n              Swal.fire(\"Failed\", `Something Went Wrong Try Again`, \"warning\");       \r\n            }\r\n          })\r\n         \r\n          \r\n       \r\n      } else if (res.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\"Cancelled\",isInactive?`${name} Account is not Activated`:`${name} Account is not Inactivated`, \"error\");\r\n      }\r\n    });\r\n  };\r\n\r\n// block-unblock toggle\r\nconst showBlockUnblockAlert = (name, _id,isBlock) => {\r\n  console.log(_id);\r\n  Swal.fire({\r\n    title: \"Are you sure?\",\r\n    text: isBlock?`This Action Will Unblock ${name} Account`:`This Action Will block ${name} Account`,\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonText: \"Yes\",\r\n    cancelButtonText: \"Cancel\",\r\n  }).then((res) => {\r\n    if (res.value) {\r\n      console.log(\"block\",isBlock);\r\n      \r\n        dispatch(blockUnblockUser(_id,!isBlock)).then((dt)=>{\r\n          console.log(dt);\r\n         if(dt.data==\"success\")\r\n          {\r\n            dispatch(getUsersListData());\r\n            Swal.fire(isBlock?\"Unblock!!\":\"Block!!\",isBlock?`${name} account has been Unblocked.`:`${name} account has been Blocked.`, \"success\");\r\n          }\r\n          else{\r\n            Swal.fire(\"Failed\", `Something Went Wrong Try Again`, \"warning\");       \r\n          }\r\n        })\r\n       \r\n        \r\n     \r\n    } else if (res.dismiss === Swal.DismissReason.cancel) {\r\n      Swal.fire(\"Cancelled\",isBlock?`${name} Account is not unblocked`:`${name} Account is not blocked`, \"error\");\r\n    }\r\n  });\r\n};\r\n\r\n\r\n  const classes = useStyles();\r\n  const [searchBy, setSearchBy] = useState(\"firstname\");\r\n  const [filterFn, setFilterFn] = useState({\r\n    fn: (items) => {\r\n      return items;\r\n    },\r\n  });\r\n\r\n  const records = data.data?data.data:[];\r\n  console.log(records);\r\n  const { TblContainer, TblHead, TblPagination, recordsAfterPagingAndSorting } =\r\n    TableTemplate({ records, headCells, filterFn });\r\n\r\n  const handleSearch = (e) => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n      fn: (items) => {\r\n        if (target.value == \"\") return items;\r\n        else\r\n          return items.filter((x) => {\r\n            if (searchBy == \"firstname\") {\r\n              return x.firstname\r\n                .toString()\r\n                .toLowerCase()\r\n                .includes(target.value.toString().toLowerCase());\r\n            } else if (searchBy == \"lastname\") {\r\n              return x.lastname\r\n                .toString()\r\n                .toLowerCase()\r\n                .includes(target.value.toString().toLowerCase());\r\n            } else if (searchBy == \"phone\") {\r\n              return x.phone\r\n                .toString()\r\n                .toLowerCase()\r\n                .includes(target.value.toString().toLowerCase());\r\n            } else if (searchBy == \"email\") {\r\n              if (x.email !== undefined) {\r\n                return x.email\r\n                  .toString()\r\n                  .toLowerCase()\r\n                  .includes(target.value.toString().toLowerCase());\r\n              } else {\r\n              }\r\n            } else if (searchBy == \"state\") {\r\n              if (x.state !== undefined) {\r\n                return x.state\r\n                  .toString()\r\n                  .toLowerCase()\r\n                  .includes(target.value.toString().toLowerCase());\r\n              } else {\r\n              }\r\n            } else if (searchBy == \"city\") {\r\n              if (x.city !== undefined) {\r\n                return x.city\r\n                  .toString()\r\n                  .toLowerCase()\r\n                  .includes(target.value.toString().toLowerCase());\r\n              } else {\r\n              }\r\n            }\r\n          });\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.pageContent}>\r\n        {/* <EmployeeForm /> */}\r\n        <Toolbar style={{ width: \"100%\" }}>\r\n          <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\r\n            <Grid item lg={8} md={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"Search Users Accounts\"\r\n                className={classes.searchInput}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Search />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                onChange={handleSearch}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={3} md={12} style={{ width:\"100%\",marginLeft: \"3%\" }}>\r\n              <InputLabel id=\"demo-simple-select-helper-label\">\r\n                Search By\r\n              </InputLabel>\r\n              <Select\r\n                style={{ width: \"100%\" }}\r\n                labelId=\"demo-simple-select-helper-label\"\r\n                id=\"demo-simple-select-helper\"\r\n                value={searchBy}\r\n                onChange={(e) => {\r\n                  setSearchBy(e.target.value);\r\n                }}\r\n              >\r\n                <MenuItem value={\"firstname\"}>First Name</MenuItem>\r\n                <MenuItem value={\"lastname\"}>Last Person </MenuItem>\r\n                <MenuItem value={\"phone\"}>Mobile Number</MenuItem>\r\n                <MenuItem value={\"email\"}>Email</MenuItem>\r\n                <MenuItem value={\"city\"}>City</MenuItem>\r\n                <MenuItem value={\"state\"}>State</MenuItem>\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n        <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n            {recordsAfterPagingAndSorting().map((item) => (\r\n              <TableRow key={item._id}>\r\n                <TableCell className={classes.table}>{item.firstname}</TableCell>\r\n                <TableCell className={classes.table}>{item.lastname}</TableCell>\r\n                <TableCell className={classes.table}>{item.phone}</TableCell>\r\n                <TableCell className={classes.table}>{item.email?item.email:\"Not Available\"}</TableCell>\r\n                <TableCell className={classes.table}>{item.state?item.state:\"Not Available\"}</TableCell>\r\n                <TableCell className={classes.table}>{item.city?item.city:\"Not Available\"}</TableCell>\r\n                <TableCell className={classes.table}>\r\n                  <ButtonGroup\r\n                    aria-label=\"medium contained button group\"\r\n                    padding=\"10px\"\r\n                    m=\"2rem\"\r\n                  >\r\n                    {checkAccess.data.customersblock?item.isBlock ? (\r\n                      <Button\r\n                        className={classes.buttonSize}\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{ marginRight: \"4px\" }}\r\n                        onClick={()=>{\r\n                          console.log(item)\r\n                          showBlockUnblockAlert(`${item.firstname} ${item.lastname}`,item._id,item.isBlock)\r\n                        }}\r\n                      >\r\n                        UnBlock\r\n                      </Button>\r\n                    ) : (\r\n                      <Button\r\n                        className={classes.buttonSize}\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        style={{\r\n                          marginRight: \"4px\",\r\n                          backgroundColor: \"#cf0000\",\r\n                          color: \"white\",\r\n                        }}\r\n                        onClick={()=>{\r\n                         showBlockUnblockAlert(`${item.firstname} ${item.lastname}`,item._id,item.isBlock)\r\n                        }}\r\n                      >\r\n                        Block\r\n                      </Button>\r\n                    ):null}\r\n                    {checkAccess.data.customersactive?item.isInactive ? (\r\n                      <Button\r\n                        className={classes.buttonSize}\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{ marginRight: \"4px\" }}\r\n                        onClick={()=>{\r\n                          showDeleteAlert(`${item.firstname} ${item.lastname}`, item._id,item.isInactive);\r\n                        }}\r\n                      >\r\n                        Active\r\n                      </Button>\r\n                    ) : (\r\n                      <Button\r\n                        className={classes.buttonSize}\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        style={{\r\n                          marginRight: \"4px\",\r\n                          backgroundColor: \"#cf0000\",\r\n                          color: \"white\",\r\n                        }}\r\n                        onClick={()=>{\r\n                          showDeleteAlert(`${item.firstname} ${item.lastname}`, item._id,item.isInactive);\r\n\r\n                        }}\r\n                      >\r\n                        Inactive\r\n                      </Button>\r\n                    ):null}\r\n                   \r\n                  </ButtonGroup>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </TblContainer>\r\n        <TblPagination />\r\n      </Paper>\r\n    </>\r\n  );\r\n  // return <h1>Hello</h1>\r\n};\r\n\r\nexport default UserTable;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TableTemplate from \"../../../HelpersComponents/TableTemplate\";\r\nimport moment from \"moment/moment.js\";\r\n\r\nimport {\r\n  Grid,\r\n  MenuItem,\r\n  InputLabel,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { daywiseData } from \"../../../actions/useraction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContent: {\r\n    marginTop: theme.spacing(5),\r\n    padding: theme.spacing(3),\r\n    width: \"90vw\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      overflow: \"scroll\",\r\n    },\r\n  },\r\n  searchInput: {\r\n    width: \"100%\",\r\n  },\r\n  buttonSize: {\r\n    minWidth: 85,\r\n  },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n    color: \"darkblue\",\r\n    fontWeight: \"bold\",\r\n    marginTop: \"3%\",\r\n  },\r\n  table:{\r\n    [theme.breakpoints.down('md')]:{\r\n      fontSize:\"10px\",\r\n      padding:'5px'\r\n    }\r\n  }\r\n}));\r\n\r\nconst headCells = [\r\n  { id: \"cname\", label: \"Customer Name\" },\r\n  { id: \"cphone\", label: \"Customer Contact\" },\r\n  { id: \"bname\", label: \"Business Name\" },\r\n  { id: \"attender\", label: \"Business Attender\" },\r\n  { id: \"bphone\", label: \"Business Contact\" },\r\n  { id: \"token\", label: \"Token\" },\r\n  { id: \"time\", label: \"Time\" },\r\n  { id: \"actions\", label: \"\", disableSorting: true },\r\n];\r\n\r\nconst DayWiseTable = ({ data }) => {\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  // const [queue, setQueue] = useState(data);\r\n  const dispatch = useDispatch();\r\n  var records = [];\r\n  const classes = useStyles();\r\n  const [filterFn, setFilterFn] = useState({\r\n    fn: (items) => {\r\n      return items;\r\n    },\r\n  });\r\n  console.log(data);\r\n  if (data) {\r\n    data.map((dt) => {\r\n      dt.usersList.map((rs) => {\r\n        records.push(rs);\r\n      });\r\n    });\r\n  }\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    console.log(moment(date).format(\"ddd MMM DD YYYY\").toString());\r\n    dispatch(daywiseData(moment(date).format(\"ddd MMM DD YYYY\").toString()));\r\n  };\r\n\r\n  console.log(records);\r\n\r\n  // console.log(records);\r\n  const { TblContainer, TblHead, TblPagination, recordsAfterPagingAndSorting } =\r\n    TableTemplate({ records, headCells, filterFn });\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.pageContent}>\r\n        {/* <EmployeeForm /> */}\r\n        <Toolbar style={{ width: \"100%\" }}>\r\n          <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\r\n            <Grid item lg={8} md={12}>\r\n              <Typography\r\n                className={classes.title}\r\n                variant=\"h6\"\r\n                id=\"tableTitle\"\r\n                component=\"div\"\r\n              >\r\n                Day Wise Tokens\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item lg={3} md={12} style={{ marginLeft: \"3%\" }}>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                  margin=\"normal\"\r\n                  id=\"date-picker-dialog\"\r\n                  label=\"Search By Date\"\r\n                  format=\"MM/dd/yyyy\"\r\n                  value={selectedDate}\r\n                  onChange={handleDateChange}\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"change date\",\r\n                  }}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n        <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n            {recordsAfterPagingAndSorting().map((item) => (\r\n              <TableRow key={item._id}>\r\n                <TableCell className={classes.table}>\r\n                  {item.fullname ? item.fullname : \"Not Available\"}\r\n                </TableCell>\r\n                <TableCell className={classes.table}>\r\n                  {item.userphone ? item.userphone : \"Not Available\"}\r\n                </TableCell>\r\n                <TableCell className={classes.table}>\r\n                  {item.businessname ? item.businessname : \"Not Available\"}\r\n                </TableCell>\r\n                <TableCell className={classes.table}>\r\n                  {item.contactpersonname\r\n                    ? item.contactpersonname\r\n                    : \"Not Available\"}\r\n                </TableCell>\r\n                <TableCell className={classes.table}>{item.phone}</TableCell>\r\n                <TableCell className={classes.table}>\r\n                  {item.token ? item.token : \"Not Available\"}\r\n                </TableCell>\r\n                <TableCell className={classes.table}>{item.date ? item.date : \"Not Available\"}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </TblContainer>\r\n        <TblPagination />\r\n      </Paper>\r\n    </>\r\n  );\r\n  // return <h1>Hello</h1>\r\n};\r\n\r\nexport default DayWiseTable;\r\n","import React, { useEffect } from \"react\";\r\nimport Header from \"../Navigation/navigation\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\n// Helpers\r\nimport TitleTemplate from \"../../HelpersComponents/TitleTemplate\";\r\nimport UserTable from \"./userTable\";\r\nimport DayWiseRecordsTable from \"./daywiserecords/daywisetable\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUsersListData, daywiseData } from \"../../actions/useraction\";\r\nimport moment from \"moment/moment.js\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst Users = () => {\r\n  const users = useSelector((state) => state.usersData);\r\n  const daywise = useSelector((state) => state.daywiselist);\r\n  const checkAccess = useSelector((state) => state.getspecificrole);\r\n\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getUsersListData());\r\n    dispatch(daywiseData(moment(Date()).format(\"ddd MMM DD YYYY\").toString()));\r\n  }, []);\r\n  if(!checkAccess.data.customers){\r\n    return <Redirect to={\"/\"} />;\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <Header>\r\n        <div className={classes.root}>\r\n          <TitleTemplate title=\"USER PANEL\" />\r\n          {checkAccess.data.customers && checkAccess.data.customersview ? (\r\n            <UserTable data={users} />\r\n          ) : null}\r\n          {checkAccess.data.customers && checkAccess.data.customerstokenview ? (\r\n            <DayWiseRecordsTable data={daywise.data} />\r\n          ) : null}\r\n        </div>\r\n      </Header>\r\n    </>\r\n  );\r\n};\r\nexport default Users;\r\n","import { businessQueriesStatic,updateBusinessQueriesStatic,usersQueriesStatic,updateUsersQueriesStatic} from \"./static\";\r\nimport axios from \"../helpers/axios\";\r\n// <======================BusinessQueries=================================>\r\nexport const getBusinessQueries = (date) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: businessQueriesStatic.BUSINESS_QUERIES_STATIC_REQUEST });\r\n    try {\r\n      const res = await axios.post(\"/adminpanel/getbusinessqueriesdaywise\", {\r\n        date,\r\n      });\r\n      if (res.status == 200) {\r\n        dispatch({\r\n          type: businessQueriesStatic.BUSINESS_QUERIES_STATIC_SUCCESS,\r\n          payload: {\r\n            data: res.data,\r\n          },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: businessQueriesStatic.BUSINESS_QUERIES_STATIC_FAILURE,\r\n          payload: {\r\n            data: res.data,\r\n          },\r\n        });\r\n      }\r\n      return res;\r\n    } catch (error) {\r\n      dispatch({\r\n        type: businessQueriesStatic.BUSINESS_QUERIES_STATIC_FAILURE,\r\n        payload: {\r\n          error: error.response,\r\n        },\r\n      });\r\n      return error\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateBusinessQuery = (_id,status) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: updateBusinessQueriesStatic.UPDATE_BUSINESS_QUERIES_STATIC_REQUEST });\r\n    try {\r\n      const res = await axios.post(\"/adminpanel/updatebusinessquerystatus\", {\r\n        _id,\r\n        status\r\n      });\r\n      if (res.status == 200) {\r\n        dispatch({\r\n          type: updateBusinessQueriesStatic.UPDATE_BUSINESS_QUERIES_STATIC_SUCCESS,\r\n          payload: {\r\n            data: res.data,\r\n          },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: updateBusinessQueriesStatic.UPDATE_BUSINESS_QUERIES_STATIC_FAILURE,\r\n          payload: {\r\n            data: res.data,\r\n          },\r\n        });\r\n      }\r\n      return res;\r\n    } catch (error) {\r\n      dispatch({\r\n        type: updateBusinessQueriesStatic.UPDATE_BUSINESS_QUERIES_STATIC_FAILURE,\r\n        payload: {\r\n          error: error.response,\r\n        },\r\n      });\r\n      return error\r\n    }\r\n  };\r\n};\r\n\r\n// <======================UsersQueries=================================>\r\n\r\nexport const getUsersQueries = (date) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: usersQueriesStatic.USER_QUERIES_STATIC_REQUEST });\r\n    try {\r\n      const res = await axios.post(\"/adminpanel/getusersqueriesdaywise\", {\r\n        date,\r\n      });\r\n      if (res.status == 200) {\r\n        dispatch({\r\n          type: usersQueriesStatic.USER_QUERIES_STATIC_SUCCESS,\r\n          payload: {\r\n            data: res.data,\r\n          },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: usersQueriesStatic.USER_QUERIES_STATIC_FAILURE,\r\n          payload: {\r\n            data: res.data,\r\n          },\r\n        });\r\n      }\r\n      return res;\r\n    } catch (error) {\r\n      dispatch({\r\n        type: usersQueriesStatic.USER_QUERIES_STATIC_FAILURE,\r\n        payload: {\r\n          error: error.response,\r\n        },\r\n      });\r\n      return error\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const updateUserQuery = (_id,status) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: updateUsersQueriesStatic.UPDATE_USER_QUERIES_STATIC_REQUEST });\r\n    try {\r\n      const res = await axios.post(\"/adminpanel/updateUserQueryStatus\", {\r\n        _id,\r\n        status\r\n      });\r\n      if (res.status == 200) {\r\n        dispatch({\r\n          type: updateUsersQueriesStatic.UPDATE_USER_QUERIES_STATIC_SUCCESS,\r\n          payload: {\r\n            data: res.data,\r\n          },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: updateUsersQueriesStatic.UPDATE_USER_QUERIES_STATIC_FAILURE,\r\n          payload: {\r\n            data: res.data,\r\n          },\r\n        });\r\n      }\r\n      return res;\r\n    } catch (error) {\r\n      dispatch({\r\n        type: updateUsersQueriesStatic.UPDATE_USER_QUERIES_STATIC_FAILURE,\r\n        payload: {\r\n          error: error.response,\r\n        },\r\n      });\r\n      return error\r\n    }\r\n  };\r\n};\r\n\r\n// <------------------------Get all admins------------------->\r\n\r\n\r\n\r\n// <------------------------Get all admins END------------------->\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport { Divider, Avatar, Button, Container } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { green, yellow } from \"@material-ui/core/colors\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\n\r\nconst GreenRadio = withStyles({\r\n  root: {\r\n    color: green[400],\r\n    \"&$checked\": {\r\n      color: green[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Radio color=\"default\" {...props} />);\r\n\r\nconst YelllowRadio = withStyles({\r\n  root: {\r\n    color: yellow[400],\r\n    \"&$checked\": {\r\n      color: yellow[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Radio color=\"default\" {...props} />);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: \"auto\",\r\n    maxWidth: \"100%\",\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: \"auto\",\r\n    display: \"block\",\r\n    maxWidth: \"100%\",\r\n    maxHeight: \"90%\",\r\n  },\r\n}));\r\n\r\nconst InfoCard = (props) => {\r\n  const {\r\n    _id,\r\n    businessname,\r\n    contactpersonanme,\r\n    phone,\r\n    title,\r\n    description,\r\n    status,\r\n    email,\r\n    profilepic,\r\n    updateStatus,\r\n  } = props.props.data;\r\n  const { dialog } = props;\r\n  const classes = useStyles();\r\n  console.log(dialog);\r\n  const [selectedValue, setSelectedValue] = React.useState(status);\r\n\r\n  const submitRequest = () => {\r\n    updateStatus(_id, selectedValue);\r\n    dialog.close(true);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setSelectedValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Grid container spacing={1}>\r\n          <Grid item>\r\n            <ButtonBase>\r\n              <Avatar\r\n                variant=\"square\"\r\n                alt={businessname}\r\n                src={profilepic}\r\n                className={classes.image}\r\n              >\r\n                {businessname[0]}\r\n              </Avatar>\r\n            </ButtonBase>\r\n          </Grid>\r\n          <Grid item xs={12} sm container>\r\n            <Grid item xs container direction=\"column\" spacing={2}>\r\n              <Grid item xs>\r\n                <GridTemplater title=\"Business\" name={businessname} />\r\n                <Divider/>\r\n                <GridTemplater\r\n                  title=\"Name\"\r\n                  name={contactpersonanme}\r\n                />\r\n                 <Divider/>\r\n               \r\n                <GridTemplater title=\"Phone\" name={phone} />\r\n                <Divider/>\r\n               \r\n                {email ? <GridTemplater title=\"Email\" name={email} /> : null}\r\n                <Divider variant=\"fullWidth\" />\r\n                <Divider/>\r\n               \r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={2}>\r\n            <Typography gutterBottom variant=\"subtitle1\">\r\n              Subject\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={7}>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"subtitle1\"\r\n              style={{ marginLeft: \"16%\" }}\r\n            >\r\n              {title}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={2}>\r\n            <Typography gutterBottom variant=\"subtitle1\">\r\n              Description\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={9}>\r\n            <Container\r\n              style={{\r\n                maxHeight: \"130px\",\r\n                overflow: \"auto\",\r\n                paddingLeft: \"0px\",\r\n                marginTop: \"2%\",\r\n                marginLeft: \"12%\",\r\n              }}\r\n            >\r\n              <Typography variant=\"body2\">\r\n                {description}\r\n              </Typography>\r\n            </Container>\r\n          </Grid>\r\n        </Grid>\r\n        <div>\r\n          <Grid\r\n            container\r\n            style={{ width: \"100%\", marginTop: \"2%\" }}\r\n            spacing={2}\r\n            justify=\"flex-start\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item xs={3}>\r\n              <Typography gutterBottom variant=\"subtitle1\">\r\n                Pending\r\n              </Typography>\r\n              <YelllowRadio\r\n                checked={selectedValue === \"Pending\"}\r\n                onChange={handleChange}\r\n                value=\"Pending\"\r\n                name=\"radio-button-demo\"\r\n                inputProps={{ \"aria-label\": \"Pending\" }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Typography gutterBottom variant=\"subtitle1\">\r\n                Invalid\r\n              </Typography>\r\n              <Radio\r\n                checked={selectedValue === \"Invalid\"}\r\n                onChange={handleChange}\r\n                value=\"Invalid\"\r\n                name=\"radio-button-demo\"\r\n                inputProps={{ \"aria-label\": \"Invalid\" }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={3}>\r\n              <Typography gutterBottom variant=\"subtitle1\">\r\n                Solved\r\n              </Typography>\r\n              <GreenRadio\r\n                checked={selectedValue === \"Solved\"}\r\n                onChange={handleChange}\r\n                value=\"Solved\"\r\n                name=\"radio-button-demo\"\r\n                inputProps={{ \"aria-label\": \"Solved\" }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ marginTop: \"29%\" }}\r\n                onClick={submitRequest}\r\n              >\r\n                Update\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\nexport default InfoCard;\r\n\r\nconst GridTemplater = ({ title, name }) => {\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={4}>\r\n        <Typography gutterBottom variant=\"subtitle1\">\r\n          {title}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Typography gutterBottom variant=\"subtitle1\">\r\n          <b>{name}</b>\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport TableTemplate from \"../../HelpersComponents/TableTemplate\";\r\nimport moment from \"moment/moment.js\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { deepOrange } from \"@material-ui/core/colors\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { CustomDialog, useDialog } from \"react-st-modal\";\r\n\r\nimport {\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nimport { getBusinessQueries,updateBusinessQuery } from \"../../actions/adminaction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport InfoCard from \"../../HelpersComponents/infocardTemplate\"\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContent: {\r\n    marginTop: theme.spacing(5),\r\n    padding: theme.spacing(3),\r\n    width:\"90vw\",\r\n    [theme.breakpoints.down('md')]: {\r\n    overflow:\"scroll\",  \r\n    },\r\n  },\r\n  searchInput: {\r\n    width: \"100%\",\r\n  },\r\n  buttonSize: {\r\n    minWidth: 85,\r\n  },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n    color: \"darkblue\",\r\n    fontWeight: \"bold\",\r\n    marginTop: \"3%\",\r\n  },\r\n  orange: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n  },\r\n  table:{\r\n    [theme.breakpoints.down('md')]:{\r\n      fontSize:\"10px\",\r\n      padding:'5px'\r\n    }\r\n  }\r\n}));\r\n\r\nconst headCells = [\r\n  { id: \"profile\", label: \"\" },\r\n  { id: \"bname\", label: \"Business\" },\r\n  { id: \"cname\", label: \"Name\" },\r\n  { id: \"phone\", label: \"Contact\" },\r\n  { id: \"title\", label: \"Query\" },\r\n  // { id: \"date\", label: \"Date\" },\r\n  { id: \"status\", label: \"Status\" },\r\n  { id: \"actions\", label: \"\", disableSorting: true },\r\n];\r\n\r\nconst BusinessQueryTable = ({ data }) => {\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const checkAccess = useSelector((state) => state.getspecificrole);\r\n\r\n  const dispatch = useDispatch();\r\n  var records = [];\r\n  const classes = useStyles();\r\n  const [filterFn, setFilterFn] = useState({\r\n    fn: (items) => {\r\n      return items;\r\n    },\r\n  });\r\n  if (data.data && data.data.length) {\r\n    console.log(\"queue he \", data.data);\r\n    data.data.map((dt) => {\r\n      records.push(dt);\r\n    });\r\n  }\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    console.log(moment(date).format(\"ddd MMM DD YYYY\").toString());\r\n    dispatch(\r\n      getBusinessQueries(moment(date).format(\"ddd MMM DD YYYY\").toString())\r\n    );\r\n  };\r\n\r\n  const updateStatus=(_id,status)=>{\r\n    dispatch(updateBusinessQuery(_id,status)).then((val)=>{\r\n      if(val.status==200)\r\n      {\r\n        dispatch(getBusinessQueries(moment(selectedDate).format(\"ddd MMM DD YYYY\").toString()))\r\n      }\r\n    })\r\n    \r\n  }\r\n\r\n     \r\n  const { TblContainer, TblHead, TblPagination, recordsAfterPagingAndSorting } =\r\n    TableTemplate({ records, headCells, filterFn });\r\n\r\n    \r\n  \r\n  // <---------------------SHOW DIALOG----------------------->\r\n  function CustomDialogContent(props) {\r\n    const classes = useStyles();\r\n    const dialog = useDialog();\r\n    \r\n    \r\n    return <InfoCard  props={props} dialog={dialog} />\r\n   }\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.pageContent}>\r\n        {/* <EmployeeForm /> */}\r\n        <Toolbar style={{ width: \"100%\" }}>\r\n          <Grid container spacing={3}>\r\n            <Grid item sm={8}>\r\n              <Typography\r\n                className={classes.title}\r\n                variant=\"h6\"\r\n                id=\"tableTitle\"\r\n                component=\"div\"\r\n              >\r\n                Business Queries\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item sm={3} style={{ marginLeft: \"3%\" }}>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                  margin=\"normal\"\r\n                  id=\"date-picker-dialog\"\r\n                  label=\"Search By Date\"\r\n                  format=\"MM/dd/yyyy\"\r\n                  value={selectedDate}\r\n                  onChange={handleDateChange}\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"change date\",\r\n                  }}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n        <TblContainer >\r\n          <TblHead />\r\n          <TableBody>\r\n            {recordsAfterPagingAndSorting().map((item) => (\r\n              <TableRow key={item._id}>\r\n                <TableCell className={classes.table}>\r\n                  <Avatar\r\n                    alt=\"Remy Sharp\"\r\n                    src={item.profilepic}\r\n                    className={classes.orange}\r\n                  >\r\n                    {item.businessname?item.businessname[0]:\"<A></A>\"}\r\n                  </Avatar>\r\n                </TableCell>\r\n                <TableCell className={classes.table}>\r\n                  {item.businessname ? item.businessname : \"Not Available\"}\r\n                </TableCell>\r\n                <TableCell className={classes.table}>\r\n                  {item.contactpersonname\r\n                    ? item.contactpersonname\r\n                    : \"Not Available\"}\r\n                </TableCell>\r\n                <TableCell className={classes.table}>\r\n                  {item.phone ? item.phone : \"Not Available\"}\r\n                </TableCell>\r\n                <TableCell className={classes.table}>\r\n                  {item.title ? item.title : \"Not Available\"}\r\n                </TableCell>\r\n                {/* <TableCell className={classes.table}>{item.date ? item.date : \"Not Available\"}</TableCell> */}\r\n                <TableCell className={classes.table}>\r\n                  {item.status == \"Pending\" ? (\r\n                    <Chip\r\n                      size=\"medium\"\r\n                      label={item.status}\r\n                      style={{\r\n                        backgroundColor: \"#ffcc29\",\r\n                        color: \"black\",\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    />\r\n                  ) : item.status == \"Solved\" ? (\r\n                    <Chip\r\n                      size=\"medium\"\r\n                      color=\"white\"\r\n                      label={item.status}\r\n                      style={{\r\n                        backgroundColor: \"#81b214\",\r\n                        color: \"black\",\r\n                        fontWeight: \"bold\",\r\n                        padding: \"5%\",\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    <Chip\r\n                      size=\"medium\"\r\n                      label={item.status}\r\n                      style={{\r\n                        backgroundColor: \"#fb3640\",\r\n                        color: \"black\",\r\n                        fontWeight: \"bold\",\r\n                        padding: \"7%\",\r\n                      }}\r\n                    />\r\n                  )}\r\n                </TableCell>\r\n                {\r\n                  checkAccess.data.businessqueriesedit?<TableCell className={classes.table}>\r\n                  <Button\r\n                    size=\"small\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={async () => {\r\n                      const result = await CustomDialog(\r\n                        <CustomDialogContent\r\n                        data={{\r\n                            _id: item._id,\r\n                            businessname: item.businessname,\r\n                            contactpersonanme: item.contactpersonname,\r\n                            phone: item.phone,\r\n                            title: item.title,\r\n                            description: item.description,\r\n                            status: item.status,\r\n                            email:item.email,\r\n                            profilepic:item.profilepic,\r\n                            updateStatus:updateStatus\r\n                          }}\r\n                          style={{zIndex: 1000}}\r\n                        />,\r\n                        {\r\n                          title: \"Query Details\",\r\n                          showCloseIcon: true\r\n                        }\r\n\r\n                      );\r\n                    }}\r\n                  >\r\n                    View\r\n                  </Button>\r\n                </TableCell>:null\r\n                }\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </TblContainer>\r\n        <TblPagination />\r\n      </Paper>\r\n    </>\r\n  );\r\n  // return <h1>Hello</h1>\r\n};\r\n\r\nexport default BusinessQueryTable;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport { Divider, Avatar, Button, Container } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { green, yellow } from \"@material-ui/core/colors\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\n\r\nconst GreenRadio = withStyles({\r\n  root: {\r\n    color: green[400],\r\n    \"&$checked\": {\r\n      color: green[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Radio color=\"default\" {...props} />);\r\n\r\nconst YelllowRadio = withStyles({\r\n  root: {\r\n    color: yellow[400],\r\n    \"&$checked\": {\r\n      color: yellow[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Radio color=\"default\" {...props} />);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: \"auto\",\r\n    maxWidth: \"100%\",\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: \"auto\",\r\n    display: \"block\",\r\n    maxWidth: \"100%\",\r\n    maxHeight: \"90%\",\r\n  },\r\n}));\r\n\r\nconst InfoCard = (props) => {\r\n  const {\r\n    _id,\r\n    fullname,\r\n    phone,\r\n    title,\r\n    description,\r\n    status,\r\n    email,\r\n    profilepic,\r\n    updateStatus,\r\n  } = props.props.data;\r\n  const { dialog } = props;\r\n  const classes = useStyles();\r\n  const [selectedValue, setSelectedValue] = React.useState(status);\r\n\r\n  const submitRequest = () => {\r\n    updateStatus(_id, selectedValue);\r\n    dialog.close(true);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setSelectedValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Grid container spacing={1}>\r\n          <Grid item>\r\n            <ButtonBase>\r\n              <Avatar\r\n                variant=\"square\"\r\n                alt={fullname}\r\n                src={profilepic}\r\n                className={classes.image}\r\n              >\r\n                {fullname[0]}\r\n              </Avatar>\r\n            </ButtonBase>\r\n          </Grid>\r\n          <Grid item xs={12} sm container>\r\n            <Grid item xs container direction=\"column\" spacing={2}>\r\n              <Grid item xs>\r\n                <GridTemplater title=\"Full Name\" name={fullname} />\r\n                <Divider />\r\n\r\n                <GridTemplater title=\"Phone\" name={phone} />\r\n                <Divider />\r\n\r\n                {email ? <GridTemplater title=\"Email\" name={email} /> : null}\r\n                <Divider />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={2}>\r\n            <Typography gutterBottom variant=\"subtitle1\">\r\n              Subject\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={7}>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"subtitle1\"\r\n              style={{ marginLeft: \"16%\" }}\r\n            >\r\n              {title}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={2}>\r\n            <Typography gutterBottom variant=\"subtitle1\">\r\n              Description\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={9}>\r\n            <Container\r\n              style={{\r\n                maxHeight: \"210px\",\r\n                overflow: \"auto\",\r\n                paddingLeft: \"0px\",\r\n                marginTop: \"1%\",\r\n                marginLeft: \"12%\",\r\n              }}\r\n            >\r\n              <Typography variant=\"body2\">\r\n                {description}\r\n              </Typography>\r\n            </Container>\r\n          </Grid>\r\n        </Grid>\r\n        <div>\r\n          <Grid\r\n            container\r\n            style={{ width: \"100%\", marginTop: \"2%\" }}\r\n            spacing={2}\r\n            justify=\"flex-start\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item xs={3}>\r\n              <Typography gutterBottom variant=\"subtitle1\">\r\n                Pending\r\n              </Typography>\r\n              <YelllowRadio\r\n                checked={selectedValue === \"Pending\"}\r\n                onChange={handleChange}\r\n                value=\"Pending\"\r\n                name=\"radio-button-demo\"\r\n                inputProps={{ \"aria-label\": \"Pending\" }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Typography gutterBottom variant=\"subtitle1\">\r\n                Invalid\r\n              </Typography>\r\n              <Radio\r\n                checked={selectedValue === \"Invalid\"}\r\n                onChange={handleChange}\r\n                value=\"Invalid\"\r\n                name=\"radio-button-demo\"\r\n                inputProps={{ \"aria-label\": \"Invalid\" }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={3}>\r\n              <Typography gutterBottom variant=\"subtitle1\">\r\n                Solved\r\n              </Typography>\r\n              <GreenRadio\r\n                checked={selectedValue === \"Solved\"}\r\n                onChange={handleChange}\r\n                value=\"Solved\"\r\n                name=\"radio-button-demo\"\r\n                inputProps={{ \"aria-label\": \"Solved\" }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ marginTop: \"29%\" }}\r\n                onClick={submitRequest}\r\n              >\r\n                Update\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\nexport default InfoCard;\r\n\r\nconst GridTemplater = ({ title, name }) => {\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={4}>\r\n        <Typography gutterBottom variant=\"subtitle1\">\r\n          {title}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Typography gutterBottom variant=\"subtitle1\">\r\n          <b>{name}</b>\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TableTemplate from \"../../HelpersComponents/TableTemplate\";\r\nimport moment from \"moment/moment.js\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { deepOrange } from \"@material-ui/core/colors\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { CustomDialog, useDialog } from \"react-st-modal\";\r\n\r\nimport {\r\n  Grid,\r\n  MenuItem,\r\n  InputLabel,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nimport { getUsersQueries, updateUserQuery } from \"../../actions/adminaction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CustomerInfoCard from \"../../HelpersComponents/customersinfocardTemplate\";\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContent: {\r\n    marginTop: theme.spacing(5),\r\n    padding: theme.spacing(3),\r\n    width: \"90vw\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      overflow: \"scroll\",\r\n    },\r\n  },\r\n  searchInput: {\r\n    width: \"100%\",\r\n  },\r\n  buttonSize: {\r\n    minWidth: 85,\r\n  },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n    color: \"darkblue\",\r\n    fontWeight: \"bold\",\r\n    marginTop: \"3%\",\r\n  },\r\n  orange: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n  },\r\n  table: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      fontSize: \"10px\",\r\n      padding: \"5px\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  { id: \"profile\", label: \"\" },\r\n  { id: \"fname\", label: \"Name\" },\r\n  { id: \"phone\", label: \"Contact\" },\r\n  { id: \"title\", label: \"Query\" },\r\n  // { id: \"date\", label: \"Date\" },\r\n  { id: \"status\", label: \"Status\" },\r\n  { id: \"actions\", label: \"\", disableSorting: true },\r\n];\r\n\r\nconst UserQueryTable = ({ data }) => {\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n  const dispatch = useDispatch();\r\n  var records = [];\r\n  const checkAccess = useSelector((state) => state.getspecificrole);\r\n\r\n  const classes = useStyles();\r\n  const [filterFn, setFilterFn] = useState({\r\n    fn: (items) => {\r\n      return items;\r\n    },\r\n  });\r\n  if (data.data && data.data.length) {\r\n    console.log(\"queue he \", data.data);\r\n    data.data.map((dt) => {\r\n      records.push(dt);\r\n    });\r\n  }\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    console.log(moment(date).format(\"ddd MMM DD YYYY\").toString());\r\n    dispatch(\r\n      getUsersQueries(moment(date).format(\"ddd MMM DD YYYY\").toString())\r\n    );\r\n  };\r\n\r\n  const updateStatus = (_id, status) => {\r\n    dispatch(updateUserQuery(_id, status)).then((val) => {\r\n      console.log(val);\r\n      if (val.status == 200) {\r\n        dispatch(\r\n          getUsersQueries(\r\n            moment(selectedDate).format(\"ddd MMM DD YYYY\").toString()\r\n          )\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  const { TblContainer, TblHead, TblPagination, recordsAfterPagingAndSorting } =\r\n    TableTemplate({ records, headCells, filterFn });\r\n\r\n  // <---------------------SHOW DIALOG----------------------->\r\n  function CustomDialogContent(props) {\r\n    const classes = useStyles();\r\n    const dialog = useDialog();\r\n\r\n    return <CustomerInfoCard props={props} dialog={dialog} />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.pageContent}>\r\n        {/* <EmployeeForm /> */}\r\n        <Toolbar style={{ width: \"100%\" }}>\r\n          <Grid container spacing={3}>\r\n            <Grid item sm={8}>\r\n              <Typography\r\n                className={classes.title}\r\n                variant=\"h6\"\r\n                id=\"tableTitle\"\r\n                component=\"div\"\r\n              >\r\n                Customers Queries\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item sm={3} style={{ marginLeft: \"3%\" }}>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                  margin=\"normal\"\r\n                  id=\"date-picker-dialog\"\r\n                  label=\"Search By Date\"\r\n                  format=\"MM/dd/yyyy\"\r\n                  value={selectedDate}\r\n                  onChange={handleDateChange}\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"change date\",\r\n                  }}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n        <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n            {recordsAfterPagingAndSorting().map((item) => (\r\n              <TableRow key={item._id}>\r\n                <TableCell className={classes.table}>\r\n                  <Avatar\r\n                    alt=\"Remy Sharp\"\r\n                    src={item.profilepic}\r\n                    className={classes.orange}\r\n                  >\r\n                    {item.fullname ? item.fullname[0] : \"A\"}\r\n                  </Avatar>\r\n                </TableCell>\r\n                <TableCell className={classes.table}>\r\n                  {item.fullname ? item.fullname : \"Not Available\"}\r\n                </TableCell>\r\n                <TableCell className={classes.table}>\r\n                  {item.phone ? item.phone : \"Not Available\"}\r\n                </TableCell>\r\n                <TableCell className={classes.table}>\r\n                  {item.title ? item.title : \"Not Available\"}\r\n                </TableCell>\r\n                {/* <TableCell className={classes.table}>{item.date ? item.date : \"Not Available\"}</TableCell> */}\r\n                <TableCell className={classes.table}>\r\n                  {item.status == \"Pending\" ? (\r\n                    <Chip\r\n                      size=\"medium\"\r\n                      label={item.status}\r\n                      style={{\r\n                        backgroundColor: \"#ffcc29\",\r\n                        color: \"black\",\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    />\r\n                  ) : item.status == \"Solved\" ? (\r\n                    <Chip\r\n                      size=\"medium\"\r\n                      color=\"white\"\r\n                      label={item.status}\r\n                      style={{\r\n                        backgroundColor: \"#81b214\",\r\n                        color: \"black\",\r\n                        fontWeight: \"bold\",\r\n                        padding: \"5%\",\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    <Chip\r\n                      size=\"medium\"\r\n                      label={item.status}\r\n                      style={{\r\n                        backgroundColor: \"#fb3640\",\r\n                        color: \"black\",\r\n                        fontWeight: \"bold\",\r\n                        padding: \"7%\",\r\n                      }}\r\n                    />\r\n                  )}\r\n                </TableCell>\r\n                {checkAccess.data.customersqueriesedit ? (\r\n                  <TableCell className={classes.table}>\r\n                    <Button\r\n                      size=\"small\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={async () => {\r\n                        const result = await CustomDialog(\r\n                          <CustomDialogContent\r\n                            data={{\r\n                              _id: item._id,\r\n                              fullname: item.fullname,\r\n                              phone: item.phone,\r\n                              title: item.title,\r\n                              description: item.description,\r\n                              status: item.status,\r\n                              email: item.email,\r\n                              profilepic: item.profilepic,\r\n                              updateStatus: updateStatus,\r\n                            }}\r\n                            style={{ zIndex: 1000 }}\r\n                          />,\r\n                          {\r\n                            title: \"Query Details\",\r\n                            showCloseIcon: true,\r\n                          }\r\n                        );\r\n                      }}\r\n                    >\r\n                      View\r\n                    </Button>\r\n                  </TableCell>\r\n                ) : null}\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </TblContainer>\r\n        <TblPagination />\r\n      </Paper>\r\n    </>\r\n  );\r\n  // return <h1>Hello</h1>\r\n};\r\n\r\nexport default UserQueryTable;\r\n","import React, { useEffect } from \"react\";\r\nimport Header from \"../Navigation/navigation\";\r\nimport TitleTemplate from \"../../HelpersComponents/TitleTemplate\";\r\nimport BusinessQueryTable from \"./businessqueryTable\";\r\nimport UserQueryTable from \"./userqueryTable\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport moment from \"moment/moment.js\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\n//recux\r\nimport { getBusinessQueries, getUsersQueries } from \"../../actions/adminaction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst AdminPanel = () => {\r\n  const classes = useStyles();\r\n  let businessqueries = useSelector((state) => state.businessqueries);\r\n  let usersqueries = useSelector((state) => state.userqueries);\r\n  const checkAccess = useSelector((state) => state.getspecificrole);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      getBusinessQueries(moment(Date()).format(\"ddd MMM DD YYYY\").toString())\r\n    );\r\n    dispatch(\r\n      getUsersQueries(moment(Date()).format(\"ddd MMM DD YYYY\").toString())\r\n    );\r\n  }, []);\r\n  if(!checkAccess.data.queries){\r\n    return <Redirect to={\"/\"} />;\r\n\r\n  }\r\n\r\n  return (\r\n    <Header>\r\n      <div className={classes.root}>\r\n        <TitleTemplate title=\"QUERIES\" />\r\n        {checkAccess.data.queries && checkAccess.data.businessqueriesview ? (\r\n          <BusinessQueryTable data={businessqueries} />\r\n        ) : null}\r\n        {checkAccess.data.queries && checkAccess.data.customersqueriesview ? (\r\n          <UserQueryTable data={usersqueries} />\r\n        ) : null}\r\n      </div>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport {NavLink} from \"react-router-dom\"\r\n// redux action\r\nimport { login } from \"../../actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Side image\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Bank App\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  alert: {\r\n    marginLeft: \"5%\",\r\n    marginRight: \"5%\",\r\n  },\r\n}));\r\n\r\nconst SigninPage = (props) => {\r\n  //managing states\r\n  const [email, setemail] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [errormsg, setErrormsg] = useState(\"\");\r\n  const [showAlert, setShowAlert] = useState(null);\r\n  \r\n  const errorcheck = \"Authentication failed,Admin Account Not found\";\r\n  // check if user already login if true direct to home\r\n  let auth = useSelector((state) => state.auth);\r\n\r\n  const dispatch = useDispatch();\r\n  //submit function\r\n  const userLogin = (e) => {\r\n    e.preventDefault();\r\n    const user = {\r\n      email,\r\n      password,\r\n    };\r\n    dispatch(login(user)).then((res) => {\r\n      if (res == \"network\") {\r\n        setShowAlert(true);\r\n        setErrormsg(\"Something Went Wrong!! Maybe Server Issue.\");\r\n      } else {\r\n        if (res.status == 400 || res.status == 403) {\r\n          console.log(res);\r\n          setShowAlert(true);\r\n          setErrormsg(res.data.message ? res.data.message : \"Something Went Wrong!! Try Again Later\");\r\n        } else {\r\n          console.log(res.data);\r\n          setErrormsg(\"\");\r\n          setShowAlert(false);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const classes = useStyles();\r\n  // redirect to home if login\r\n  if (auth.authenticate) {\r\n    return <Redirect to={\"/\"} />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {showAlert && (\r\n        <Alert\r\n          className={classes.alert}\r\n          variant=\"filled\"\r\n          severity=\"error\"\r\n          onClose={() => setShowAlert(null)}\r\n        >\r\n          {errormsg}\r\n        </Alert>\r\n      )}\r\n\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        component=\"main\"\r\n        className={classes.root}\r\n      >\r\n        <CssBaseline />\r\n\r\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <ExitToAppIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n            </Typography>\r\n            <form className={classes.form} noValidate onSubmit={userLogin}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={(e) => setemail(e.target.value)}\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setpassword(e.target.value)}\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n              {/* <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            /> */}\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <NavLink to=\"/verifyEmail\" variant=\"body2\" style={{textDecoration:\"none\"}}>\r\n                    Forgot password?\r\n                  </NavLink>\r\n                </Grid>\r\n              </Grid>\r\n              <Box mt={5}>\r\n                <Copyright />\r\n              </Box>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\nexport default SigninPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\n// redux action\r\n// import { login } from \"../../actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { verifyEmail } from \"../../../actions/auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  alert:{\r\n    marginLeft:\"5%\",\r\n    marginRight:\"5%\",\r\n  }\r\n}));\r\n\r\nconst VerifyEmailPage = (props) => {\r\n  //managing states\r\n  const [email, setemail] = useState(\"\");\r\n  const [errormsg, setErrormsg] = useState(\"\");\r\n  const [showAlert, setShowAlert] = useState(null);\r\n\r\n  const errorcheck = \"Authentication failed,Admin Account Not found\";\r\n  // check if user already login if true direct to home\r\n  let auth = useSelector((state) => state.auth);\r\n\r\n  const dispatch = useDispatch();\r\n   //submit function\r\n  const userLogin = (e) => {\r\n    e.preventDefault();\r\n    const emailData = {\r\n      email,\r\n    };\r\n    dispatch(verifyEmail(emailData)).then((res)=>{\r\n      if(res==\"network\")\r\n      {\r\n        setShowAlert(true)\r\n        setErrormsg(\"Something Went Wrong!! Maybe Server Issue.\")\r\n      }\r\n      else{\r\n        console.log(res);\r\n        if (res.status == 400 ||res.status == 403 ) {\r\n          setShowAlert(true)\r\n          setErrormsg(res.data.message?res.data.message:res.data.msg);\r\n        } else {\r\n          setErrormsg(\"\");\r\n          setShowAlert(false)\r\n          }\r\n      }\r\n    });\r\n  };\r\n\r\n  const classes = useStyles();\r\n  // redirect to home if login\r\n  if (auth.authenticate) {\r\n    return <Redirect to={\"/\"} />;\r\n  }\r\n  if (auth.message == \"email exists\") {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/changepassword\",\r\n          state: { email: email },\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n     {showAlert && (\r\n        <Alert\r\n          className={classes.alert}\r\n          variant=\"filled\"\r\n          severity=\"error\"\r\n          onClose={() => setShowAlert(null)}\r\n        >\r\n          {errormsg}\r\n        </Alert>\r\n      )}\r\n\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        component=\"main\"\r\n        className={classes.root}\r\n      >\r\n        <CssBaseline />\r\n\r\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <EmailIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Enter Email\r\n            </Typography>\r\n            <form className={classes.form} noValidate onSubmit={userLogin}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={(e) => setemail(e.target.value)}\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n              />\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Verify\r\n              </Button>\r\n              <NavLink to=\"/signin\">\r\n              <IconButton aria-label=\"delete\">\r\n                <ArrowBackIcon />\r\n              </IconButton>\r\n              </NavLink>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\nexport default VerifyEmailPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport VpnLockIcon from \"@material-ui/icons/VpnLock\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\n// redux action\r\n// import { login } from \"../../actions\";\r\nimport { changePassword } from \"../../../actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// import { isUserLogin } from \"../../actions/auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  alert:{\r\n    marginLeft:\"5%\",\r\n    marginRight:\"5%\",\r\n  }\r\n}));\r\n\r\nconst ChangePasswordPage = (props) => {\r\n  const userEmail = props.location.state.email;\r\n  //managing states\r\n  const [password, setpassword] = useState(\"\");\r\n  const [cpassword, setcpassword] = useState(\"\");\r\n  const [errormsg, setErrormsg] = useState(\"\");\r\n  const [showAlert, setShowAlert] = useState(null);\r\n\r\n  // check if user already login if true direct to home\r\n  let auth = useSelector((state) => state.auth);\r\n\r\n  const dispatch = useDispatch();\r\n  //submit function\r\n  const userLogin = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      password,\r\n      email: userEmail,\r\n    };\r\n\r\n    if (password.length == 0) {\r\n      setErrormsg(\"Password Field Can't Be Empty!!\");\r\n      setShowAlert(true)\r\n  \r\n    } else if (password !== cpassword) {\r\n      setErrormsg(\"Password Doesn't Match!!!\");\r\n      setShowAlert(true)\r\n  \r\n    } else {\r\n       dispatch(changePassword(data)).then((res)=>{\r\n        if(res==\"network\")\r\n        {\r\n          setShowAlert(true)\r\n          setErrormsg(\"Something Went Wrong!! Maybe Server Issue.\")\r\n        }\r\n        else{\r\n          if (res.status == 400 ||res.status == 403 ) {\r\n            console.log(res);\r\n            setShowAlert(true)\r\n            setErrormsg(res.data.message?res.data.message:res.data.msg);\r\n          } else {\r\n            setErrormsg(\"\");\r\n            setShowAlert(false)\r\n            }\r\n        }\r\n       });\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n  // redirect to home if login\r\n  // if (auth.authenticate) {\r\n  //   return <Redirect to={\"/\"} />;\r\n  // }\r\n  if (auth.message == \"Password Update Successfully\") {\r\n    return <Redirect to={\"/signin\"} />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n     {showAlert && (\r\n        <Alert\r\n          className={classes.alert}\r\n          variant=\"filled\"\r\n          severity=\"error\"\r\n          onClose={() => setShowAlert(null)}\r\n        >\r\n          {errormsg}\r\n        </Alert>\r\n      )}\r\n\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        component=\"main\"\r\n        className={classes.root}\r\n      >\r\n        <CssBaseline />\r\n\r\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <VpnLockIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Enter New Password\r\n            </Typography>\r\n            <form className={classes.form} noValidate onSubmit={userLogin}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                required\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setpassword(e.target.value)}\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"cpassword\"\r\n                label=\"Confirm Password\"\r\n                value={cpassword}\r\n                onChange={(e) => setcpassword(e.target.value)}\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Change Password\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\nexport default ChangePasswordPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { CustomDialog, useDialog } from \"react-st-modal\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  TextField,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport validator from \"validator\";\r\n\r\n import { createNewRole } from \"../../actions/auth\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n//getting category action\r\n// import { fetchAllCategory, addCategory } from \"../../../actions/category\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"90%\",\r\n    },\r\n    input: {\r\n      display: \"none\",\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    withoutLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    textField: {\r\n      width: \"90%\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst AddnewRole = ({updatesRoles}) => {\r\n  const dispatch = useDispatch();\r\n  function CustomDialogContent(props) {\r\n    const classes = useStyles();\r\n\r\n    const dialog = useDialog();\r\n    const [value, setValue] = useState();\r\n\r\n    const [role_name, setRoleName] = useState(\"\");\r\n\r\n    const [errors, setErrors] = useState({\r\n      roleError: false,\r\n    });\r\n    const handleChange=(event) => {\r\n        setRoleName(event.target.value);\r\n    };\r\n\r\n    const submitForm = () => {\r\n      if (validator.isEmpty(role_name)) {\r\n        setErrors({\r\n          roleError: true,\r\n        });\r\n      } else {\r\n        setErrors({\r\n          roleError: false,\r\n        });\r\n\r\n        console.log(role_name);\r\n        dispatch(createNewRole(role_name)).then((res) => {\r\n          try {\r\n            if (res.status == 200) {\r\n                updatesRoles()\r\n              Swal.fire(\r\n                \"Success\",\r\n                `Role Added Successfully`,\r\n                \"success\"\r\n              );\r\n              dialog.close(value);\r\n            } else if (res.status == 400) {\r\n              Swal.fire(\"Failed\", `${res.data.msg}`, \"warning\");\r\n            }\r\n          } catch (error) {\r\n            Swal.fire(\r\n              \"Failed\",\r\n              `Something Went Wrong, Try Again Later`,\r\n              \"warning\"\r\n            );\r\n\r\n            dialog.close(value);\r\n          }\r\n        });\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            label=\"Role Title\"\r\n            variant=\"outlined\"\r\n            value={role_name}\r\n            onChange={(e)=>{\r\n                handleChange(e)\r\n            }}\r\n          />\r\n          {errors.roleError ? (\r\n            <FormHelperText id=\"component-error-text\" style={{ color: \"red\" }}>\r\n              Role can't be empty\r\n            </FormHelperText>\r\n          ) : null}\r\n          </form>\r\n        <div style={{ width: \"100%\" }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ marginLeft: \"2%\", marginBottom: \"20px\" }}\r\n            onClick={submitForm}\r\n          >\r\n            Add\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        size=\"medium\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        style={{width:\"100%\"}}\r\n        onClick={async () => {\r\n          const result = await CustomDialog(<CustomDialogContent />, {\r\n            title: \"Enter Fields\",\r\n            showCloseIcon: true,\r\n          });\r\n        }}\r\n      >\r\n        Add Role\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\nexport default AddnewRole;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Paper,\r\n  Select,\r\n  MenuItem,\r\n  Grid,\r\n  Typography,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport AddnewRole from \"./addnewrole\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllRoles, getAllSubAdmins } from \"../../actions/auth\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContent: {\r\n    padding: theme.spacing(3),\r\n\r\n    marginBottom: \"3%\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      overflow: \"scroll\",\r\n    },\r\n  },\r\n  title: {\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst SearchSubAdmin = ({ updateAccess, role, setrole }) => {\r\n  const state = useSelector((state) => state.getAllroles);\r\n  useEffect(() => {\r\n    dispatch(getAllRoles());\r\n  }, []);\r\n\r\n  const dispatch = useDispatch(getAllSubAdmins());\r\n\r\n  const setRole = (e) => {\r\n    setrole(e.target.value);\r\n    if (e.target.value != null || e.target.value !== undefined) {\r\n      updateAccess(e.target.value);\r\n    }\r\n  };\r\n  const updatesRoles = () => {\r\n    dispatch(getAllRoles());\r\n  };\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Paper className={classes.pageContent}>\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item sm={2} xs={12}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"body1\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n              style={{textAlign:\"center\"}}\r\n            >\r\n              Sub-Admin\r\n            </Typography>\r\n          </Grid>\r\n          <Divider\r\n            orientation=\"vertical\"\r\n            flexItem\r\n            style={{ color: \"red\", width: \"1px\", marginRight: \"5px\" }}\r\n          />\r\n\r\n          <Grid item sm={7} xs={12}>\r\n            <Select\r\n              style={{ width: \"100%\", minWidth: \"50%\" }}\r\n              labelId=\"demo-simple-select-helper-label\"\r\n              id=\"demo-simple-select-helper\"\r\n              variant=\"outlined\"\r\n              value={role || \"\"}\r\n              onChange={setRole}\r\n            >\r\n              {state.data !== null\r\n                ? state.data.map((dt, index) => {\r\n                    return (\r\n                      <MenuItem key={index} value={dt._id}>\r\n                        {dt.role_name}\r\n                      </MenuItem>\r\n                    );\r\n                  })\r\n                : null}\r\n            </Select>\r\n          </Grid>\r\n          <Grid item md={2} style={{width:\"100%\"}} alignContent=\"flex-end\">\r\n            <AddnewRole updatesRoles={updatesRoles} />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchSubAdmin;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { Paper, FormControlLabel, Checkbox } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      fontSize: \"10px\",\r\n      padding: \"5px\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Business = ({ handleChange, accessList }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>\r\n              {\" \"}\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={accessList.business}\r\n                    onChange={handleChange}\r\n                    name=\"business\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Business\"\r\n              />\r\n            </TableCell>\r\n            <TableCell align=\"right\"></TableCell>\r\n            <TableCell align=\"right\"></TableCell>\r\n            <TableCell align=\"right\"></TableCell>\r\n            <TableCell align=\"right\"></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        {accessList.business ? (\r\n          <TableBody>\r\n            {/* Business Accounts */}\r\n            <TableRow key=\"1\">\r\n              <TableCell component=\"th\" scope=\"row\" >\r\n                Business Accounts\r\n              </TableCell>\r\n              <TableCell align=\"left\">\r\n                {\" \"}\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={accessList.businessview}\r\n                      onChange={handleChange}\r\n                      name=\"businessview\"\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  label=\"View\"\r\n                />\r\n              </TableCell>\r\n              <TableCell align=\"left\">\r\n                {\" \"}\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={accessList.businessblock}\r\n                      onChange={handleChange}\r\n                      name=\"businessblock\"\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  label=\"Block/Unblock\"\r\n                />\r\n              </TableCell>\r\n              <TableCell align=\"left\">\r\n                {\" \"}\r\n                <FormControlLabel\r\n                  disabled\r\n                  control={\r\n                    <Checkbox\r\n                      checked={false}\r\n                      // onChange={handleChange}\r\n                      name=\"\"\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  label=\"Edit\"\r\n                />\r\n              </TableCell>\r\n              <TableCell align=\"left\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={accessList.businessactive}\r\n                      onChange={handleChange}\r\n                      name=\"businessactive\"\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  label=\"Active/Inactive\"\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n\r\n            {/* Business Categories */}\r\n            <TableRow key=\"2\">\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                Business Categories\r\n              </TableCell>\r\n              <TableCell align=\"left\">\r\n                {\" \"}\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={accessList.categoryview}\r\n                      onChange={handleChange}\r\n                      name=\"categoryview\"\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  label=\"View\"\r\n                />\r\n              </TableCell>\r\n              <TableCell align=\"left\">\r\n                {\" \"}\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={accessList.categoryadd}\r\n                      onChange={handleChange}\r\n                      name=\"categoryadd\"\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  label=\"Add\"\r\n                />\r\n              </TableCell>\r\n\r\n              <TableCell align=\"left\">\r\n                {\" \"}\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={accessList.categoryedit}\r\n                      onChange={handleChange}\r\n                      name=\"categoryedit\"\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  label=\"Edit\"\r\n                />\r\n              </TableCell>\r\n              <TableCell align=\"left\">\r\n                {\" \"}\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={accessList.categoryactive}\r\n                      onChange={handleChange}\r\n                      name=\"categoryactive\"\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  label=\"Active/Inactive\"\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n\r\n            {/* Category Chart*/}\r\n            <TableRow key=\"3\">\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                Category Chart\r\n              </TableCell>\r\n              <TableCell align=\"left\">\r\n                {\" \"}\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={accessList.categorychartview}\r\n                      onChange={handleChange}\r\n                      name=\"categorychartview\"\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  label=\"View\"\r\n                />\r\n              </TableCell>\r\n              <TableCell align=\"left\">\r\n                {\" \"}\r\n                <FormControlLabel\r\n                  disabled\r\n                  control={\r\n                    <Checkbox\r\n                      checked={false}\r\n                      // onChange={handleChange}\r\n                      name=\"\"\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  label=\"Add\"\r\n                />\r\n              </TableCell>\r\n\r\n              <TableCell align=\"left\">\r\n                {\" \"}\r\n                <FormControlLabel\r\n                  disabled\r\n                  control={\r\n                    <Checkbox\r\n                      checked={false}\r\n                      // onChange={handleChange}\r\n                      name=\"\"\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  label=\"Edit\"\r\n                />\r\n              </TableCell>\r\n              <TableCell align=\"left\">\r\n                {\" \"}\r\n                <FormControlLabel\r\n                  disabled\r\n                  control={\r\n                    <Checkbox\r\n                      checked={false}\r\n                      // onChange={handleChange}\r\n                      name=\"\"\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  label=\"Active/Inactive\"\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default Business;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { Paper, FormControlLabel, Checkbox } from \"@material-ui/core\";\r\nconst useStyles = makeStyles((theme)=>({\r\n    table: {\r\n        \r\n      [theme.breakpoints.down('md')]:{\r\n          fontSize:\"10px\",\r\n          padding:'5px'\r\n        }},\r\n      \r\n  }));\r\n  \r\nconst Customers = ({ handleChange, accessList }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer style={{ marginTop: \"3%\" }} component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>\r\n              {\" \"}\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={accessList.customers}\r\n                    onChange={handleChange}\r\n                    name=\"customers\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Customers\"\r\n              />\r\n            </TableCell>\r\n            <TableCell align=\"right\"></TableCell>\r\n            <TableCell align=\"right\"></TableCell>\r\n            <TableCell align=\"right\"></TableCell>\r\n            <TableCell align=\"right\"></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n      {accessList.customers?  <TableBody>\r\n          {/* Business Accounts */}\r\n          <TableRow key=\"1\">\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              Customers Accounts\r\n            </TableCell>\r\n            <TableCell align=\"left\">\r\n              {\" \"}\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={accessList.customersview}\r\n                    onChange={handleChange}\r\n                    name=\"customersview\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"View\"\r\n              />\r\n            </TableCell>\r\n            <TableCell align=\"left\">\r\n              {\" \"}\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={accessList.customersblock}\r\n                    onChange={handleChange}\r\n                    name=\"customersblock\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Block/Unblock\"\r\n              />\r\n            </TableCell>\r\n            <TableCell align=\"left\">\r\n            <FormControlLabel\r\n              disabled\r\n                control={\r\n                  <Checkbox\r\n                    checked={false}\r\n                    // onChange={handleChange}\r\n                    name=\"\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Edit\"\r\n              />\r\n            </TableCell>\r\n            <TableCell align=\"left\">\r\n              {\" \"}\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={accessList.customersactive}\r\n                    onChange={handleChange}\r\n                    name=\"customersactive\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Active/Inactive\"\r\n              />\r\n            </TableCell>\r\n            </TableRow>\r\n\r\n\r\n          {/* Customers TOkens*/}\r\n          <TableRow key=\"2\">\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              Customers Token\r\n            </TableCell>\r\n            <TableCell align=\"left\">\r\n              {\" \"}\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={accessList.customerstokenview}\r\n                    onChange={handleChange}\r\n                    name=\"customerstokenview\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"View\"\r\n              />\r\n            </TableCell>\r\n            <TableCell align=\"left\">\r\n            <FormControlLabel\r\n              disabled\r\n                control={\r\n                  <Checkbox\r\n                    checked={false}\r\n                    // onChange={handleChange}\r\n                    name=\"\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Add\"\r\n              />\r\n            </TableCell>\r\n            <TableCell align=\"left\">\r\n            <FormControlLabel\r\n              disabled\r\n                control={\r\n                  <Checkbox\r\n                    checked={false}\r\n                    // onChange={handleChange}\r\n                    name=\"\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Edit\"\r\n              />\r\n            </TableCell>\r\n            <TableCell align=\"left\">\r\n            <FormControlLabel\r\n              disabled\r\n                control={\r\n                  <Checkbox\r\n                    checked={false}\r\n                    // onChange={handleChange}\r\n                    name=\"\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Active/Inactive\"\r\n              />\r\n            </TableCell>\r\n             </TableRow>\r\n        </TableBody>:\"\"}\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default Customers;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { Paper, FormControlLabel, Checkbox } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n  table: {\r\n      \r\n    [theme.breakpoints.down('md')]:{\r\n        fontSize:\"10px\",\r\n        padding:'5px'\r\n      }},\r\n    \r\n}));\r\n\r\nconst Queries = ({ handleChange, accessList }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer style={{ marginTop: \"3%\" }} component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>\r\n              {\" \"}\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={accessList.queries}\r\n                    onChange={handleChange}\r\n                    name=\"queries\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Queries\"\r\n              />\r\n            </TableCell>\r\n            <TableCell align=\"right\"></TableCell>\r\n            <TableCell align=\"right\"></TableCell>\r\n            <TableCell align=\"right\"></TableCell>\r\n            <TableCell align=\"right\"></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n      {accessList.queries?  <TableBody>\r\n          {/* Business Queries */}\r\n          <TableRow key=\"1\">\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              Business Queries\r\n            </TableCell>\r\n            <TableCell align=\"left\">\r\n              {\" \"}\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={accessList.businessqueriesview}\r\n                    onChange={handleChange}\r\n                    name=\"businessqueriesview\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"View\"\r\n              />\r\n            </TableCell>\r\n            <TableCell align=\"left\">\r\n              <FormControlLabel\r\n                disabled\r\n                control={\r\n                  <Checkbox\r\n                    checked={false}\r\n                    // onChange={handleChange}\r\n                    name=\"\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Add\"\r\n              />\r\n            </TableCell>\r\n            <TableCell align=\"left\">\r\n              {\" \"}\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={accessList.businessqueriesedit}\r\n                    onChange={handleChange}\r\n                    name=\"businessqueriesedit\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Edit\"\r\n              />\r\n            </TableCell>\r\n            <TableCell align=\"left\">\r\n              <FormControlLabel\r\n                disabled\r\n                control={\r\n                  <Checkbox\r\n                    checked={false}\r\n                    // onChange={handleChange}\r\n                    name=\"\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Active/Inactive\"\r\n              />\r\n            </TableCell>\r\n          </TableRow>\r\n\r\n          {/* Customers queries*/}\r\n          <TableRow key=\"2\">\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              Customers Queries\r\n            </TableCell>\r\n            <TableCell align=\"left\">\r\n              {\" \"}\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={accessList.customersqueriesview}\r\n                    onChange={handleChange}\r\n                    name=\"customersqueriesview\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"View\"\r\n              />\r\n            </TableCell>\r\n            <TableCell align=\"left\">\r\n              <FormControlLabel\r\n                disabled\r\n                control={\r\n                  <Checkbox\r\n                    checked={false}\r\n                    // onChange={handleChange}\r\n                    name=\"\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Add\"\r\n              />\r\n            </TableCell>\r\n            <TableCell align=\"left\">\r\n              {\" \"}\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={accessList.customersqueriesedit}\r\n                    onChange={handleChange}\r\n                    name=\"customersqueriesedit\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Edit\"\r\n              />\r\n            </TableCell>\r\n\r\n            <TableCell align=\"left\">\r\n              <FormControlLabel\r\n                disabled\r\n                control={\r\n                  <Checkbox\r\n                    checked={false}\r\n                    // onChange={handleChange}\r\n                    name=\"\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Edit\"\r\n              />\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableBody>:\"\"}\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default Queries;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { CustomDialog, useDialog } from \"react-st-modal\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  InputLabel,\r\n  TextField,\r\n  FormControl,\r\n  FormHelperText,\r\n  Select,\r\n  MenuItem,\r\n  Switch,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport validator from \"validator\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { editSubAdmins } from \"../../../actions/auth\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n//getting category action\r\n// import { fetchAllCategory, addCategory } from \"../../../actions/category\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"75ch\",\r\n    },\r\n    input: {\r\n      display: \"none\",\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    withoutLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    textField: {\r\n      width: \"90%\",\r\n    },\r\n   \r\n  },\r\n   btn:{\r\n      [theme.breakpoints.down(\"md\")]: {\r\n        // width:\"4px\"\r\n      // fontSize:\"10px\" \r\n      },\r\n    },\r\n    formControl:{\r\n      width:\"96%\"\r\n    }\r\n}));\r\n\r\nconst UpdateSubAdmin = ({ data,updateFun }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const allroles = useSelector((state) => state.getAllroles);\r\n\r\n  function CustomDialogContent(props) {\r\n\r\n    const dialog = useDialog();\r\n    const [value, setValue] = useState();\r\n\r\n    const [values, setValues] = useState({\r\n      _id: data._id,\r\n      fullname: data.fullname !== null ? data.fullname : \"\",\r\n      email: data.email !== null ? data.email : \"\",\r\n      phone: data.phone !== null ? data.phone : \"\",\r\n      role: data.role !== null ? data.role : \"\",\r\n      isActive: data.isActive !== null ? data.isActive : false,\r\n    });\r\n\r\n    const [errors, setErrors] = useState({\r\n      nameError: false,\r\n      emailError: false,\r\n      phoneError: false,\r\n      roleError: false,\r\n    });\r\n    const handleChange = (prop) => (event) => {\r\n      setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleCheckChange = (event) => {\r\n      setValues({ ...values, [event.target.name]: event.target.checked });\r\n    };\r\n    const submitForm = () => {\r\n      if (validator.isEmpty(values.role)) {\r\n        setErrors({\r\n          ...errors,\r\n          roleError: true,\r\n        });\r\n      } else if (validator.isEmpty(values.fullname)) {\r\n        setErrors({\r\n          ...errors,\r\n          nameError: true,\r\n          roleError: false,\r\n        });\r\n      } else if (!validator.isMobilePhone(values.phone)) {\r\n        setErrors({\r\n          ...errors,\r\n          phoneError: true,\r\n          nameError: false,\r\n        });\r\n      } else if (!validator.isEmail(values.email)) {\r\n        setErrors({\r\n          ...errors,\r\n          emailError: true,\r\n          phoneError: false,\r\n        });\r\n      } else {\r\n        setErrors({\r\n          ...errors,\r\n          emailError: false,\r\n          phoneError: false,\r\n          nameError: false,\r\n          roleError: false,\r\n        });\r\n\r\n        dispatch(editSubAdmins(values)).then((res) => {\r\n          try {\r\n            if (res.status == 200) {\r\n              updateFun()\r\n              Swal.fire(\"Success\", `Account Updated Successfully`, \"success\");\r\n              dialog.close(value);\r\n            } else if (res.status == 400) {\r\n              Swal.fire(\"Failed\", `${res.data.msg}`, \"warning\");\r\n            }\r\n          } catch (error) {\r\n            Swal.fire(\r\n              \"Failed\",\r\n              `Something Went Wrong, Try Again Later`,\r\n              \"warning\"\r\n            );\r\n\r\n            dialog.close(value);\r\n          }\r\n        });\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">\r\n              Select Role\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-helper-label\"\r\n              id=\"demo-simple-select-helper\"\r\n              variant=\"outlined\"\r\n              value={values.role}\r\n              onChange={handleChange(\"role\")}\r\n            >\r\n              <MenuItem value=\"\">Select Role</MenuItem>;\r\n              {allroles !== null && allroles != undefined\r\n                ? allroles.data.map((dt) => {\r\n                    return (\r\n                      <MenuItem value={dt.role_name}>{dt.role_name}</MenuItem>\r\n                    );\r\n                  })\r\n                : null}\r\n            </Select>\r\n            {errors.roleError ? (\r\n              <FormHelperText\r\n                id=\"component-error-text\"\r\n                style={{ color: \"red\" }}\r\n              >\r\n                Role can't be empty\r\n              </FormHelperText>\r\n            ) : null}\r\n          </FormControl>\r\n\r\n          <TextField\r\n          className={classes.formControl}\r\n            id=\"standard-basic\"\r\n            label=\"Full Name\"\r\n            variant=\"outlined\"\r\n            value={values.fullname}\r\n            onChange={handleChange(\"fullname\")}\r\n          />\r\n          {errors.nameError ? (\r\n            <FormHelperText id=\"component-error-text\" style={{ color: \"red\" }}>\r\n              Name can't be empty\r\n            </FormHelperText>\r\n          ) : null}\r\n          <TextField\r\n          className={classes.formControl}\r\n            id=\"standard-basic\"\r\n            label=\"Phone\"\r\n            variant=\"outlined\"\r\n            value={values.phone}\r\n            onChange={handleChange(\"phone\")}\r\n          />\r\n          {errors.phoneError ? (\r\n            <FormHelperText id=\"component-error-text\" style={{ color: \"red\" }}>\r\n              Enter a valid phone number\r\n            </FormHelperText>\r\n          ) : null}\r\n\r\n          <TextField\r\n          className={classes.formControl}\r\n            id=\"standard-basic\"\r\n            label=\"E-mail\"\r\n            variant=\"outlined\"\r\n            value={values.email}\r\n            onChange={handleChange(\"email\")}\r\n          />\r\n          {errors.emailError ? (\r\n            <FormHelperText id=\"component-error-text\" style={{ color: \"red\" }}>\r\n              Enter a valid email address\r\n            </FormHelperText>\r\n          ) : null}\r\n        </form>\r\n        <FormControlLabel\r\n\r\n          style={{ marginLeft: \"1%\" }}\r\n          control={\r\n            <Switch\r\n              checked={values.isActive}\r\n              onChange={handleCheckChange}\r\n              name=\"isActive\"\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label=\"Active\"\r\n        />\r\n        <div >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ marginLeft: \"5%\", marginBottom: \"20px\" }}\r\n           onClick={submitForm}\r\n          >\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        size=\"small\"\r\n        className={classes.btn}\r\n        variant=\"contained\"\r\n        startIcon={<EditIcon />}\r\n        color=\"primary\"\r\n        onClick={async () => {\r\n          const result = await CustomDialog(<CustomDialogContent />, {\r\n            title: \"Update Fields\",\r\n            showCloseIcon: true,\r\n          });\r\n        }}\r\n      >\r\n        Update\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\nexport default UpdateSubAdmin;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { CustomDialog, useDialog } from \"react-st-modal\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  InputAdornment,\r\n  OutlinedInput,\r\n  InputLabel,\r\n  TextField,\r\n  IconButton,\r\n  FormControl,\r\n  FormHelperText,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport clsx from \"clsx\";\r\nimport validator from \"validator\";\r\n\r\nimport { signup } from \"../../../actions/auth\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n//getting category action\r\n// import { fetchAllCategory, addCategory } from \"../../../actions/category\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"98%\",\r\n    },\r\n    input: {\r\n      display: \"none\",\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    withoutLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n      width: \"86%\",\r\n    },\r\n  },\r\n  btn: {\r\n    backgroundColor: \"#cf0000\",\r\n    color: \"white\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"100%\",\r\n      marginBottom: \"2%\",\r\n      marginLeft:\"5%\"\r\n    },\r\n  },\r\n}));\r\n\r\nconst CreateSubAdmin = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const allroles = useSelector((state) => state.getAllroles);\r\n\r\n  function CustomDialogContent(props) {\r\n    const dialog = useDialog();\r\n    const [value, setValue] = useState();\r\n\r\n    const [values, setValues] = useState({\r\n      fullname: \"\",\r\n      password: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      role: \"\",\r\n      showPassword: false,\r\n    });\r\n\r\n    const [errors, setErrors] = useState({\r\n      nameError: false,\r\n      passwordError: false,\r\n      emailError: false,\r\n      phoneError: false,\r\n      roleError: false,\r\n    });\r\n    const handleChange = (prop) => (event) => {\r\n      setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n      setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n    const handleMouseDownPassword = (event) => {\r\n      event.preventDefault();\r\n    };\r\n    const submitForm = () => {\r\n      if (validator.isEmpty(values.role)) {\r\n        setErrors({\r\n          ...errors,\r\n          roleError: true,\r\n        });\r\n      } else if (validator.isEmpty(values.fullname)) {\r\n        setErrors({\r\n          ...errors,\r\n          nameError: true,\r\n          roleError: false,\r\n        });\r\n      } else if (!validator.isMobilePhone(values.phone)) {\r\n        setErrors({\r\n          ...errors,\r\n          phoneError: true,\r\n          nameError: false,\r\n        });\r\n      } else if (!validator.isEmail(values.email)) {\r\n        setErrors({\r\n          ...errors,\r\n          emailError: true,\r\n          phoneError: false,\r\n        });\r\n      } else if (!validator.isStrongPassword(values.password)) {\r\n        setErrors({\r\n          ...errors,\r\n          passwordError: true,\r\n          emailError: false,\r\n        });\r\n      } else {\r\n        setErrors({\r\n          ...errors,\r\n          passwordError: false,\r\n          emailError: false,\r\n          phoneError: false,\r\n          nameError: false,\r\n          roleError: false,\r\n        });\r\n\r\n        console.log(values);\r\n        dispatch(signup(values)).then((res) => {\r\n          try {\r\n            if (res.status == 200) {\r\n              Swal.fire(\r\n                \"Success\",\r\n                `Sub-Admin Account Created Successfully`,\r\n                \"success\"\r\n              );\r\n              dialog.close(value);\r\n            } else if (res.status == 400) {\r\n              Swal.fire(\"Failed\", `${res.data.msg}`, \"warning\");\r\n            }\r\n          } catch (error) {\r\n            Swal.fire(\r\n              \"Failed\",\r\n              `Something Went Wrong, Try Again Later`,\r\n              \"warning\"\r\n            );\r\n\r\n            dialog.close(value);\r\n          }\r\n        });\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">\r\n              Select Role\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-helper-label\"\r\n              id=\"demo-simple-select-helper\"\r\n              variant=\"outlined\"\r\n              value={values.role}\r\n              onChange={handleChange(\"role\")}\r\n            >\r\n              <MenuItem value=\"\">Select Role</MenuItem>;\r\n              {allroles !== null && allroles != undefined\r\n                ? allroles.data.map((dt) => {\r\n                    return (\r\n                      <MenuItem value={dt.role_name}>{dt.role_name}</MenuItem>\r\n                    );\r\n                  })\r\n                : null}\r\n              {/* <MenuItem value=\"HR\">HR</MenuItem>;\r\n              <MenuItem value=\"support\">Support</MenuItem>;\r\n              <MenuItem value=\"sales\">Sales</MenuItem>;\r\n              <MenuItem value=\"tech\">Tech</MenuItem>;\r\n              <MenuItem value=\"admin\">Admin</MenuItem>; */}\r\n            </Select>\r\n            {errors.roleError ? (\r\n              <FormHelperText\r\n                id=\"component-error-text\"\r\n                style={{ color: \"red\" }}\r\n              >\r\n                Role can't be empty\r\n              </FormHelperText>\r\n            ) : null}\r\n          </FormControl>\r\n\r\n          <TextField\r\n            className={classes.formControl}\r\n            id=\"standard-basic\"\r\n            label=\"Full Name\"\r\n            variant=\"outlined\"\r\n            value={values.fullname}\r\n            onChange={handleChange(\"fullname\")}\r\n          />\r\n          {errors.nameError ? (\r\n            <FormHelperText id=\"component-error-text\" style={{ color: \"red\" }}>\r\n              Name can't be empty\r\n            </FormHelperText>\r\n          ) : null}\r\n          <TextField\r\n            className={classes.formControl}\r\n            id=\"standard-basic\"\r\n            label=\"Phone\"\r\n            variant=\"outlined\"\r\n            value={values.phone}\r\n            onChange={handleChange(\"phone\")}\r\n          />\r\n          {errors.phoneError ? (\r\n            <FormHelperText id=\"component-error-text\" style={{ color: \"red\" }}>\r\n              Enter a valid phone number\r\n            </FormHelperText>\r\n          ) : null}\r\n\r\n          <TextField\r\n            className={classes.formControl}\r\n            id=\"standard-basic\"\r\n            label=\"E-mail\"\r\n            variant=\"outlined\"\r\n            value={values.email}\r\n            onChange={handleChange(\"email\")}\r\n          />\r\n          {errors.emailError ? (\r\n            <FormHelperText id=\"component-error-text\" style={{ color: \"red\" }}>\r\n              Enter a valid email address\r\n            </FormHelperText>\r\n          ) : null}\r\n\r\n          <FormControl\r\n            className={classes.formControl}\r\n            className={clsx(classes.margin, classes.textField)}\r\n            variant=\"outlined\"\r\n          >\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">\r\n              Password\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-password\"\r\n              type={values.showPassword ? \"text\" : \"password\"}\r\n              value={values.password}\r\n              onChange={handleChange(\"password\")}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                    edge=\"end\"\r\n                  >\r\n                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n            {errors.passwordError ? (\r\n              <FormHelperText\r\n                id=\"component-error-text\"\r\n                style={{ color: \"red\" }}\r\n              >\r\n                Password must be atleast 8 characters long,includes upper,lower\r\n                and numberic combination\r\n              </FormHelperText>\r\n            ) : null}\r\n          </FormControl>\r\n        </form>\r\n        <div style={{ width: \"100%\" }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ marginLeft: \"5%\", marginBottom: \"20px\" }}\r\n            onClick={submitForm}\r\n          >\r\n            Add\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      <Button\r\n        className={classes.btn}\r\n        size=\"medium\"\r\n        variant=\"contained\"\r\n        onClick={async () => {\r\n          const result = await CustomDialog(<CustomDialogContent />, {\r\n            title: \"Enter Fields\",\r\n            showCloseIcon: true,\r\n          });\r\n        }}\r\n      >\r\n        Add\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateSubAdmin;\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport {\r\n  Toolbar,\r\n  Typography,\r\n  Grid,\r\n  \r\n \r\n} from \"@material-ui/core\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport EditSubAdmin from \"./editadmin\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nimport CreateSubAdmin from \"./createnewsubadmin\";\r\n\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\nimport { TableContainer } from \"@material-ui/core\";\r\nimport \"../../../App.css\";\r\n\r\n// redux\r\nimport { getAllSubAdmins } from \"../../../actions/auth\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(5),\r\n    padding: theme.spacing(3),\r\n    // width:\"90vw\"\r\n  },\r\n\r\n  selectTableCell: {\r\n    width: 60,\r\n  },\r\n  tableCell: {\r\n    width: 130,\r\n    height: 40,\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      fontSize: \"10px !important\",\r\n      width: \"100 !important\",\r\n    },\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    height: 40,\r\n  },\r\n  container: {\r\n    height: 300,\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      fontSize: \"10px !important\",\r\n    },\r\n  },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n    color: \"black\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      fontSize: \"15px\",\r\n      textAlign: \"center\",\r\n      color: \"black\",\r\n      marginLeft:\"5%\"\r\n    },\r\n  },\r\n  modal: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"75ch\",\r\n    },\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"30vw\",\r\n    },\r\n  },\r\n  modelField: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  table: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      fontSize: \"10px\",\r\n      padding: \"7px\",\r\n    },\r\n  },\r\n}));\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      fontSize: \"10px\",\r\n      padding: \"4px\",\r\n    },\r\n  },\r\n}))(TableCell);\r\n\r\n// const CustomTableCell = ({ row, onChange }) => {\r\n//   const classes = useStyles();\r\n//   const { isEditMode } = row;\r\n//   return (\r\n//     <TableCell align=\"left\" className={classes.tableCell}>\r\n//       {isEditMode ? (\r\n//         <Input\r\n//           value={row.category_name}\r\n//           name={row.category_name}\r\n//           onChange={(e) => onChange(e, row)}\r\n//           className={classes.input}\r\n//         />\r\n//       ) : (\r\n//         row.category_name\r\n//       )}\r\n//     </TableCell>\r\n//   );\r\n// };\r\n\r\nconst SubAdmins = ({ data }) => {\r\n  const dispatch = useDispatch(getAllSubAdmins());\r\n\r\n  const [rows, setRows] = React.useState(data.data);\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setRows(data.data);\r\n  }, [data]);\r\n\r\n  const updateData = () => {\r\n    dispatch(getAllSubAdmins());\r\n  };\r\n  const capitalize = (s) => {\r\n    if (typeof s !== \"string\") return \"\";\r\n    return s.charAt(0).toUpperCase() + s.slice(1);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root} style={{ color: \"red\" }}>\r\n      <Toolbar style={{ backgroundColor: \"white\" }}>\r\n        <Grid\r\n          container\r\n          style={{ width: \"100%\" }}\r\n          spacing={3}\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs={12} lg={9}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              Manage Subadmins\r\n            </Typography>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={3}\r\n            className={classes.modelField}\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            <CreateSubAdmin />\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n      <TableContainer className={classes.container}>\r\n        <Table className={classes.table} aria-label=\"caption table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell className={classes.table}>\r\n                Name\r\n              </StyledTableCell>\r\n              <StyledTableCell className={classes.table} align=\"left\">\r\n                Email\r\n              </StyledTableCell>\r\n              <StyledTableCell className={classes.table} align=\"left\">\r\n                Mobile\r\n              </StyledTableCell>\r\n              <StyledTableCell className={classes.table} align=\"left\">\r\n                Role\r\n              </StyledTableCell>\r\n              <StyledTableCell className={classes.table} align=\"left\">\r\n                Status\r\n              </StyledTableCell>\r\n              <StyledTableCell\r\n                className={classes.table}\r\n                align=\"left\"\r\n              ></StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) =>\r\n              !row.isSuperAdmin ? (\r\n                <StyledTableRow key={row._id}>\r\n                  <StyledTableCell className={classes.table}>\r\n                    {row.fullname}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell className={classes.table} align=\"left\">\r\n                    {row.email}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell className={classes.table} align=\"left\">\r\n                    {row.phone}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell className={classes.table} align=\"left\">\r\n                    {capitalize(row.role)}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell className={classes.table} align=\"left\">\r\n                    {row.isActive ? (\r\n                      <Chip\r\n                        size=\"medium\"\r\n                        color=\"white\"\r\n                        label=\"Active\"\r\n                        style={{\r\n                          backgroundColor: \"#81b214\",\r\n                          color: \"black\",\r\n                          fontWeight: \"bold\",\r\n                          padding: \"7%\",\r\n                        }}\r\n                      />\r\n                    ) : (\r\n                      <Chip\r\n                        size=\"medium\"\r\n                        label=\"Inactive\"\r\n                        style={{\r\n                          backgroundColor: \"#fb3640\",\r\n                          color: \"black\",\r\n                          fontWeight: \"bold\",\r\n                          padding: \"4%\",\r\n                        }}\r\n                      />\r\n                    )}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell className={classes.table} align=\"left\">\r\n                    {<EditSubAdmin updateFun={updateData} data={row} />}\r\n                  </StyledTableCell>\r\n                </StyledTableRow>\r\n              ) : (\r\n                \"\"\r\n              )\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n};\r\nexport default SubAdmins;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n// components\r\nimport Header from \"../Navigation/navigation\";\r\nimport TitleTemplate from \"../../HelpersComponents/TitleTemplate\";\r\nimport SearchSubAdmin from \"./searchsubadmin\";\r\nimport Business from \"./business\";\r\nimport Customers from \"./customers\";\r\nimport Queries from \"./queries\";\r\nimport SubAdmins from \"./managesubadmins/admintables\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\n// redux\r\nimport {\r\n  getAllSubAdmins,\r\n  getAllRoles,\r\n  editaccess,\r\n  accessspecificrole,\r\n} from \"../../actions/auth\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  pageContent: {\r\n    marginTop: theme.spacing(5),\r\n    padding: theme.spacing(3),\r\n    width: \"90vw\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      overflow: \"scroll\",\r\n    },\r\n  },\r\n}));\r\nconst AccessPanel = () => {\r\n  const classes = useStyles();\r\n\r\n  const [accessList, setaccessList] = useState({\r\n    // Business Page\r\n    business: false,\r\n    businessview: false,\r\n    businessblock: false,\r\n    businessactive: false,\r\n\r\n    categoryview: false,\r\n    categoryedit: false,\r\n    categoryactive: false,\r\n    categoryadd: false,\r\n\r\n    categorychartview: false,\r\n    // Business Page END\r\n\r\n    // CustomersPage\r\n    customers: false,\r\n    customersview: false,\r\n    customersblock: false,\r\n    customersactive: false,\r\n\r\n    customerstokenview: false,\r\n    // CustomersPage ENd\r\n\r\n    // queries page\r\n    queries: false,\r\n\r\n    businessqueriesview: false,\r\n    businessqueriesedit: false,\r\n\r\n    customersqueriesview: false,\r\n    customersqueriesedit: false,\r\n    // queries page END\r\n  });\r\n\r\n  const [role, setrole] = useState(\"\");\r\n  const [_id, setId] = useState(\"\");\r\n\r\n  const allsubadmins = useSelector((state) => state.getAllSubAdmins);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllSubAdmins());\r\n    dispatch(getAllRoles());\r\n  }, []);\r\n\r\n  const updateAccess = (_id) => {\r\n    setId(_id);\r\n    try {\r\n      dispatch(accessspecificrole(_id,null)).then((res) => {\r\n        if (res.status == 200) {\r\n          if (res.data !== null) {\r\n            setaccessList(res.data);\r\n          } else {\r\n            setaccessList({\r\n              business: false,\r\n              businessview: false,\r\n              businessblock: false,\r\n              businessactive: false,\r\n\r\n              categoryview: false,\r\n              categoryedit: false,\r\n              categoryactive: false,\r\n              categoryadd: false,\r\n\r\n              categorychartview: false,\r\n              // Business Page END\r\n\r\n              // CustomersPage\r\n              customers: false,\r\n              customersview: false,\r\n              customersblock: false,\r\n              customersactive: false,\r\n\r\n              customerstokenview: false,\r\n              // CustomersPage ENd\r\n\r\n              // queries page\r\n              queries: false,\r\n\r\n              businessqueriesview: false,\r\n              businessqueriesedit: false,\r\n\r\n              customersqueriesview: false,\r\n              customersqueriesedit: false,\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } catch (e) {}\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setaccessList({ ...accessList, [event.target.name]: event.target.checked });\r\n  };\r\n  const saveChanges = () => {\r\n    if (_id !== \"\") {\r\n      try {\r\n        dispatch(editaccess(_id, accessList)).then((res) => {\r\n          if ((res.status = 200)) {\r\n            Swal.fire(\r\n              \"Success\",\r\n              \"Accesses Modified Successfully\",\r\n              \"success\"\r\n            );\r\n          }\r\n        });\r\n      } catch (e) {\r\n        Swal.fire(\r\n          \"Failed\",\r\n          \"Failed To Modified Accesses\",\r\n          \"warning\"\r\n        );\r\n        console.log(e);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <Header>\r\n      <div className={classes.root}>\r\n        <TitleTemplate title=\"ACCESS PANEL\" />\r\n        <div className={classes.pageContent}>\r\n          <SearchSubAdmin\r\n            updateAccess={updateAccess}\r\n            role={role}\r\n            setrole={setrole}\r\n          />\r\n          {role !== \"\" ? (\r\n            <>\r\n              <Business handleChange={handleChange} accessList={accessList} />\r\n              <Customers handleChange={handleChange} accessList={accessList} />\r\n              <Queries handleChange={handleChange} accessList={accessList} />\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              marginTop: \"2%\",\r\n              marginBottom: \"2%\",\r\n            }}\r\n          >\r\n           {role!==\"\"? <Button variant=\"contained\" color=\"primary\" onClick={saveChanges}>\r\n              SAVE\r\n            </Button>:null}\r\n          </div>\r\n          <SubAdmins data={allsubadmins} />\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default AccessPanel;\r\n","import React, { useEffect } from \"react\";\nimport { Switch, Route,Redirect } from \"react-router-dom\";\n//private route\nimport PrivateRoute from \"./Components/Security/PrivateRoute\";\n// Components\nimport Home from \"./Components/DashBoard/Home\";\nimport Business from \"./Components/Business/index\";\nimport Users from \"./Components/Users/index\";\nimport AdminPanel from \"./Components/adminpanel/index\";\nimport SignIn from \"./Components/Authentication/signinpage\";\nimport FillEmail from \"./Components/Authentication/forgetpassword/fillemail\";\nimport ChangePasswordPage from \"./Components/Authentication/forgetpassword/changepassword\";\nimport AccessPanel from \"./Components/accesspanel/index\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { isUserLogin } from \"./actions/auth\";\n\nconst App = () => {\n  // check if user already login if true direct to home\n  let auth = useSelector((state) => state.auth);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!auth.authenticate) {\n      dispatch(isUserLogin());\n    }\n    // dispatch(getInitialData());\n  }, []);\n\n  return (\n    <>\n      <Switch>\n        <PrivateRoute path=\"/\" exact component={Home} />\n\n        <Route path=\"/signin\" exact>\n          <SignIn />\n        </Route>\n        <Route path=\"/verifyEmail\" exact>\n          <FillEmail />\n        </Route>\n        <PrivateRoute path=\"/business\" exact component={Business} />\n\n        <PrivateRoute path=\"/users\" exact component={Users} />\n        <PrivateRoute path=\"/queries\" exact component={AdminPanel} />\n        <PrivateRoute path=\"/accesspanel\" exact component={AccessPanel} />\n        <Route path=\"/changepassword\" render={(props) => <ChangePasswordPage {...props} />} />\n        {/* <Route path=\"*\" component={SignIn}  /> */}\n        <Route render={() => <Redirect to={{pathname: \"/\"}} />} />\n\n\n        {/* <PrivateRoute path=\"/page\" exact component={Page} /> */}\n\n        {/* <Route path=\"/signup\" exact>\n          <Signup />\n        </Route> */}\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from \"react-router-dom\"\nimport store from \"./store\"\nimport { Provider } from 'react-redux';\n\nwindow.store=store;\nReactDOM.render(\n  <Provider store={store}>\n      <React.StrictMode>\n   <Router>\n    <App />\n    </Router>\n\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}